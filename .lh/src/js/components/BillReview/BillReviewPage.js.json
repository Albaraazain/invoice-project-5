{
    "sourceFile": "src/js/components/BillReview/BillReviewPage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1731688763964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731688834966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,277 +1,95 @@\n-// BillReviewPage.js\r\n-import { gsap } from \"gsap\";\r\n-import { getBillData } from \"../../store/solarSizingState.js\";\r\n-import { BillPreview } from \"../BillPreview.js\";\r\n-import Chart from \"chart.js/auto\";\r\n-import { CountUp } from \"countup.js\";\r\n+// src/components/BillReview/BillReviewPage.js\r\n+import { html, render } from 'lit-html';\r\n+import { Header } from './components/Header';\r\n+import { ConsumptionChart } from './components/ConsumptionChart';\r\n+import { MetricsCard } from './components/MetricsCard';\r\n+import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n+import { formatCurrency, formatChange } from './utils/formatters';\r\n+import './styles/base.css';\r\n \r\n export class BillReviewPage {\r\n-  constructor() {\r\n-    this.billData = getBillData();\r\n-    this.charts = {};\r\n-  }\r\n+    constructor() {\r\n+        this.billData = {\r\n+            amount: 10946,\r\n+            unitsConsumed: 665,\r\n+            ratePerUnit: 16,\r\n+            dueDate: '2024-12-01',\r\n+            issueDate: '2024-11-01'\r\n+        };\r\n+        this.charts = {};\r\n+        this.countUps = {};\r\n+    }\r\n \r\n-  addScrollStyles() {\r\n-    const style = document.createElement(\"style\");\r\n-    style.textContent = `\r\n-        .custom-scrollbar {\r\n-            scrollbar-width: thin;\r\n-            scrollbar-color: rgba(0, 0, 0, 0.2) transparent;\r\n-        }\r\n+    isMobileDevice() {\r\n+        return window.innerWidth < 768;\r\n+    }\r\n \r\n-        .custom-scrollbar::-webkit-scrollbar {\r\n-            width: 6px;\r\n-        }\r\n+    render() {\r\n+        const template = html`\r\n+            <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" \r\n+                 id=\"quote-result-page\">\r\n+                <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n+                    <!-- Bill Preview Side -->\r\n+                    <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" \r\n+                         id=\"bill-preview-container\">\r\n+                        <div id=\"bill-preview\" class=\"h-full\"></div>\r\n+                    </div>\r\n \r\n-        .custom-scrollbar::-webkit-scrollbar-track {\r\n-            background: transparent;\r\n-        }\r\n-\r\n-        .custom-scrollbar::-webkit-scrollbar-thumb {\r\n-            background-color: rgba(0, 0, 0, 0.2);\r\n-            border-radius: 3px;\r\n-        }\r\n-\r\n-        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\r\n-            background-color: rgba(0, 0, 0, 0.3);\r\n-        }\r\n-    `;\r\n-    document.head.appendChild(style);\r\n-  }\r\n-\r\n-  // Update the main container structure in render method\r\n-  render() {\r\n-    const app = document.getElementById(\"app\");\r\n-    const trendData = this.generateTrendData();\r\n-\r\n-    app.innerHTML = `\r\n-    <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" id=\"quote-result-page\">\r\n-        <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n-            <!-- Bill Preview Side - Full width on mobile -->\r\n-            <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" id=\"bill-preview-container\">\r\n-                <div id=\"bill-preview\" class=\"h-full\"></div>\r\n-            </div>\r\n-\r\n-            <!-- Loading Indicator -->\r\n-            <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" \r\n-                 id=\"loading-indicator\">\r\n-                <div class=\"loading-spinner\"></div>\r\n-                <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n-            </div>\r\n-\r\n-            <!-- Insights Container -->\r\n-            <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n-                id=\"insights-container\"\r\n-                style=\"bottom: 0;\">\r\n-                <!-- Drag Handle for mobile -->\r\n-                <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n-                    <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n-                </div>\r\n-\r\n-                <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n-                    <!-- Top Section: Fixed Height -->\r\n-                    <div class=\"flex-none space-y-3 sm:space-y-4\">\r\n-                        <!-- Header Section -->\r\n-                        <div class=\"opacity-0\" id=\"insights-header\">\r\n-                            <div class=\"flex items-center gap-3\">\r\n-                                <div class=\"flex-shrink-0\">\r\n-                                    <div class=\"w-8 h-8 rounded-xl bg-gradient-to-r from-emerald-500 to-emerald-600 flex items-center justify-center\">\r\n-                                        <svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n-                                        </svg>\r\n-                                    </div>\r\n-                                </div>\r\n-                                <div>\r\n-                                    <h2 class=\"text-base sm:text-lg font-bold text-gray-900\">Bill Analysis</h2>\r\n-                                    <p class=\"text-xs sm:text-sm text-gray-500\">Understanding your consumption</p>\r\n-                                </div>\r\n-                            </div>\r\n-                        </div>\r\n-\r\n-                        <!-- Progress Tracker -->\r\n-                        <div class=\"bg-white/70 backdrop-blur rounded-lg shadow-sm p-3 opacity-0\" id=\"progress-tracker\">\r\n-                            <div class=\"flex justify-between items-center\">\r\n-                                <div class=\"flex items-center gap-3\">\r\n-                                    <div class=\"w-8 h-8 rounded-full bg-emerald-600 flex items-center justify-center text-white font-semibold text-sm\">1</div>\r\n-                                    <div>\r\n-                                        <p class=\"font-semibold text-gray-900 text-sm\">Bill Review</p>\r\n-                                        <p class=\"text-xs text-gray-500\">Analyzing patterns</p>\r\n-                                    </div>\r\n-                                </div>\r\n-                                <div class=\"h-0.5 w-12 bg-gray-200\"></div>\r\n-                                <div class=\"flex items-center gap-3\">\r\n-                                    <div class=\"w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center text-gray-400 font-semibold text-sm\">2</div>\r\n-                                    <div>\r\n-                                        <p class=\"font-semibold text-gray-400 text-sm\">Solar Quote</p>\r\n-                                        <p class=\"text-xs text-gray-400\">Up next</p>\r\n-                                    </div>\r\n-                                </div>\r\n-                            </div>\r\n-                        </div>\r\n+                    <!-- Loading Indicator -->\r\n+                    <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" \r\n+                         id=\"loading-indicator\">\r\n+                        <div class=\"loading-spinner\"></div>\r\n+                        <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n                     </div>\r\n \r\n-                    <!-- Main Content Area: Flexible Height -->\r\n-                    <div class=\"flex-1 min-h-0 mt-3\">\r\n-                        <div class=\"h-full grid grid-rows-[auto_auto_1fr] gap-3\">\r\n-                            <!-- Consumption Analysis Card -->\r\n-                            <div class=\"bg-white rounded-lg shadow-sm p-4 opacity-0\" id=\"consumption-card\">\r\n-                                <div class=\"flex justify-between items-center mb-4\">\r\n-                                    <h3 class=\"text-sm font-semibold text-gray-900\">Consumption Analysis</h3>\r\n-                                    <div class=\"px-2 py-1 bg-emerald-50 text-emerald-600 rounded-full text-xs font-medium\">\r\n-                                        ${this.formatChange(\r\n-                                          trendData\r\n-                                        )}% vs last month\r\n-                                    </div>\r\n-                                </div>\r\n-                                <div class=\"relative h-[200px] sm:h-[250px] w-full\">\r\n-                                    <canvas id=\"consumption-trend-chart\"></canvas>\r\n-                                </div>\r\n+                    <!-- Insights Container -->\r\n+                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 \r\n+                              rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n+                         id=\"insights-container\"\r\n+                         style=\"bottom: 0;\">\r\n+                        ${Header()}\r\n+                        <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n+                            ${ConsumptionChart(this.generateTrendData())}\r\n+                            \r\n+                            <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n+                                ${MetricsCard({\r\n+                                    type: 'bill',\r\n+                                    title: 'Current Bill',\r\n+                                    value: formatCurrency(this.billData.amount),\r\n+                                    badge: `Due in ${this.calculateDueDays()} days`,\r\n+                                    progress: this.calculateBillProgress()\r\n+                                })}\r\n+                                \r\n+                                ${MetricsCard({\r\n+                                    type: 'consumption',\r\n+                                    title: 'Units Consumed',\r\n+                                    value: `${this.billData.unitsConsumed} kWh`,\r\n+                                    badge: `${this.calculateEfficiency()} efficiency`,\r\n+                                    subtitle: `Rate: ${formatCurrency(this.billData.ratePerUnit)}/kWh`\r\n+                                })}\r\n                             </div>\r\n-\r\n-                            <!-- Metrics Cards Container -->\r\n-                            <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n-                                <!-- Current Bill Card -->\r\n-                                <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n-                                    <div class=\"flex items-center justify-between mb-2\">\r\n-                                        <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n-                                            <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n-                                            </svg>\r\n-                                        </div>\r\n-                                        <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">Due in ${this.calculateDueDays()} days</span>\r\n-                                    </div>\r\n-                                    <p class=\"text-xs text-gray-500 mb-1\">Current Bill</p>\r\n-                                    <p class=\"text-lg font-bold text-gray-900\" id=\"bill-amount\">${this.formatCurrency(\r\n-                                      this.billData.amount\r\n-                                    )}</p>\r\n-                                    <div class=\"mt-2 h-1 bg-gray-100 rounded\">\r\n-                                        <div class=\"h-full bg-emerald-500 rounded\" style=\"width: ${this.calculateBillProgress()}%\"></div>\r\n-                                    </div>\r\n-                                </div>\r\n-\r\n-                                <!-- Units Consumed Card -->\r\n-                                <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n-                                    <div class=\"flex items-center justify-between mb-2\">\r\n-                                        <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n-                                            <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n-                                            </svg>\r\n-                                        </div>\r\n-                                        <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">\r\n-                                            ${this.calculateEfficiency()} efficiency\r\n-                                        </span>\r\n-                                    </div>\r\n-                                    <p class=\"text-xs text-gray-500 mb-1\">Units Consumed</p>\r\n-                                    <p class=\"text-lg font-bold text-gray-900\" id=\"units-consumed\">${\r\n-                                      this.billData.unitsConsumed\r\n-                                    } kWh</p>\r\n-                                    <p class=\"text-xs text-gray-500 mt-2\">Rate: ${this.formatCurrency(\r\n-                                      this.billData.ratePerUnit\r\n-                                    )}/kWh</p>\r\n-                                </div>\r\n-                            </div>\r\n-\r\n-                            <!-- Solar Quote Card -->\r\n-                            <div class=\"mt-3 mb-4 md:mb-6\" id=\"next-steps-card-container\">\r\n-                                <div class=\"bg-emerald-600 rounded-lg sm:rounded-xl shadow-sm opacity-0\" id=\"next-steps-card\">\r\n-                                    <!-- Main Content Container with Better Padding -->\r\n-                                    <div class=\"p-4 sm:p-5 md:p-6\">\r\n-                                        <div class=\"relative z-10 flex flex-col gap-4 sm:gap-5\">\r\n-                                            <!-- Header Section -->\r\n-                                            <div class=\"flex items-center gap-3\">\r\n-                                                <div class=\"w-8 h-8 sm:w-10 sm:h-10 rounded-lg bg-white/10 flex items-center justify-center shrink-0\">\r\n-                                                    <svg class=\"w-4 h-4 sm:w-5 sm:h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n-                                                    </svg>\r\n-                                                </div>\r\n-                                                <h3 class=\"text-lg sm:text-xl font-semibold text-white\">Ready For Your Solar Quote?</h3>\r\n-                                            </div>\r\n-\r\n-                                            <!-- Description and Benefits -->\r\n-                                            <div class=\"space-y-4\">\r\n-                                                <p class=\"text-sm sm:text-base text-white/90 leading-relaxed\">\r\n-                                                    We've analyzed your consumption patterns and can now provide you with a personalized solar solution. Find out how much you could save!\r\n-                                                </p>\r\n-                                                \r\n-                                                <!-- Benefits Pills -->\r\n-                                                <div class=\"flex flex-wrap gap-2\">\r\n-                                                    <div class=\"inline-flex items-center gap-1.5 bg-white/10 rounded-full px-3 py-1.5\">\r\n-                                                        <svg class=\"w-3.5 h-3.5 text-emerald-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\r\n-                                                        </svg>\r\n-                                                        <span class=\"text-sm text-white\">Personalized Solution</span>\r\n-                                                    </div>\r\n-                                                    <div class=\"inline-flex items-center gap-1.5 bg-white/10 rounded-full px-3 py-1.5\">\r\n-                                                        <svg class=\"w-3.5 h-3.5 text-emerald-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2\" />\r\n-                                                        </svg>\r\n-                                                        <span class=\"text-sm text-white\">Cost Savings</span>\r\n-                                                    </div>\r\n-                                                </div>\r\n-                                            </div>\r\n-\r\n-                                            <!-- CTA Button -->\r\n-                                            <button \r\n-                                                id=\"proceed-to-quote\" \r\n-                                                class=\"w-full sm:w-auto bg-white hover:bg-white/90 text-emerald-700 px-5 py-2.5 rounded-xl font-medium\r\n-                                                      transition-all duration-300 shadow-sm hover:shadow-md\r\n-                                                      flex items-center justify-center gap-2 group mt-2\"\r\n-                                            >\r\n-                                                <span>Generate My Quote</span>\r\n-                                                <svg class=\"w-4 h-4 transform group-hover:translate-x-1 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n-                                                </svg>\r\n-                                            </button>\r\n-                                        </div>\r\n-                                    </div>\r\n-\r\n-                                    <!-- Decorative Background (Optimized) -->\r\n-                                    <div class=\"absolute inset-0 overflow-hidden rounded-lg sm:rounded-xl\">\r\n-                                        <div class=\"absolute top-0 right-0 w-48 h-48 md:w-56 md:h-56 translate-x-1/4 -translate-y-1/4 opacity-10\">\r\n-                                            <svg class=\"w-full h-full text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                                                <path d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n-                                            </svg>\r\n-                                        </div>\r\n-                                    </div>\r\n-                                </div>\r\n-                            </div>\r\n-                            </div>\r\n+                            \r\n+                            ${SolarQuoteCard()}\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n-        </div>\r\n-    </div>\r\n-`;\r\n+        `;\r\n \r\n-    const isMobile = this.isMobileDevice();\r\n-\r\n-    if (isMobile) {\r\n-      this.initializeMobileInteractions();\r\n+        render(template, document.getElementById('app'));\r\n+        this.afterRender();\r\n     }\r\n \r\n-    this.attachBaseStyles();\r\n-\r\n-    // Use requestAnimationFrame to ensure styles are applied before starting\r\n-    requestAnimationFrame(() => {\r\n-      requestAnimationFrame(() => {\r\n-        // Make container visible\r\n-        const container = document.getElementById(\"quote-result-page\");\r\n-        if (container) {\r\n-          container.classList.remove(\"opacity-0\");\r\n+    afterRender() {\r\n+        if (this.isMobileDevice()) {\r\n+            this.initializeMobileInteractions();\r\n         }\r\n+        this.initializeCharts();\r\n+        this.initializeCountUps();\r\n+        this.startAnimation();\r\n+    }\r\n \r\n-        // Now render bill preview and start animation\r\n-        this.renderBillPreview();\r\n-        this.startAnimation().catch((error) => {\r\n-          console.error(\"Animation failed:\", error);\r\n-          this.showError();\r\n-        });\r\n-      });\r\n-    });\r\n-  }\r\n-\r\n   isMobileDevice() {\r\n     return window.innerWidth < 768; // You can adjust this breakpoint\r\n   }\r\n \r\n"
                },
                {
                    "date": 1731688865985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/BillReview/BillReviewPage.js\r\n import { html, render } from 'lit-html';\r\n-import { Header } from './components/Header';\r\n+import { Header } from './components/Header.js';\r\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n import { formatCurrency, formatChange } from './utils/formatters';\r\n"
                },
                {
                    "date": 1731689386228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,79 @@\n-// src/components/BillReview/BillReviewPage.js\r\n+// BillReviewPage.js\r\n import { html, render } from 'lit-html';\r\n-import { Header } from './components/Header.js';\r\n+import { getBillData } from '../store/solarSizingState.js';\r\n+import { CountUp } from 'countup.js';\r\n+import Chart from 'chart.js/auto';\r\n+import { initializeMobileInteractions } from './utils/mobileInteractions';\r\n+import { initializeConsumptionChart } from './utils/chartConfig';\r\n+import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n+import { Header } from './components/Header';\r\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n-import { formatCurrency, formatChange } from './utils/formatters';\r\n import './styles/base.css';\r\n \r\n export class BillReviewPage {\r\n     constructor() {\r\n-        this.billData = {\r\n-            amount: 10946,\r\n-            unitsConsumed: 665,\r\n-            ratePerUnit: 16,\r\n-            dueDate: '2024-12-01',\r\n-            issueDate: '2024-11-01'\r\n-        };\r\n+        this.billData = getBillData();\r\n         this.charts = {};\r\n         this.countUps = {};\r\n+        this.resizeTimeout = null;\r\n+\r\n+        // Bind methods\r\n+        this.handleResize = this.handleResize.bind(this);\r\n+        window.addEventListener('resize', this.handleResize);\r\n     }\r\n \r\n     isMobileDevice() {\r\n         return window.innerWidth < 768;\r\n     }\r\n \r\n+    calculateBillProgress() {\r\n+        const daysInMonth = 30;\r\n+        const today = new Date();\r\n+        const billDate = new Date(this.billData.issueDate);\r\n+        const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n+        return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n+    }\r\n+\r\n+    calculateEfficiency() {\r\n+        const avgConsumption = 500; // Example average consumption\r\n+        return this.billData.unitsConsumed <= avgConsumption ? 'High' : 'Low';\r\n+    }\r\n+\r\n+    generateTrendData() {\r\n+        const currentMonth = new Date().getMonth();\r\n+        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n+        const values = [];\r\n+        const labels = [];\r\n+\r\n+        for (let i = 5; i >= 0; i--) {\r\n+            let monthIndex = (currentMonth - i + 12) % 12;\r\n+            labels.push(months[monthIndex]);\r\n+            \r\n+            // Generate realistic variations (±20% of base consumption)\r\n+            let variation = this.billData.unitsConsumed * (0.8 + Math.random() * 0.4);\r\n+            values.push(Math.round(variation));\r\n+        }\r\n+\r\n+        return {\r\n+            labels,\r\n+            values,\r\n+            change: this.calculateTrendChange(values)\r\n+        };\r\n+    }\r\n+\r\n+    calculateTrendChange(values) {\r\n+        if (values.length < 2) return 0;\r\n+        const lastTwo = values.slice(-2);\r\n+        const change = ((lastTwo[1] - lastTwo[0]) / lastTwo[0]) * 100;\r\n+        return formatChange(change);\r\n+    }\r\n+\r\n     render() {\r\n+        const trendData = this.generateTrendData();\r\n+\r\n         const template = html`\r\n             <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" \r\n                  id=\"quote-result-page\">\r\n                 <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n@@ -42,35 +90,43 @@\n                         <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n                     </div>\r\n \r\n                     <!-- Insights Container -->\r\n-                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 \r\n-                              rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n+                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n                          id=\"insights-container\"\r\n                          style=\"bottom: 0;\">\r\n-                        ${Header()}\r\n+                        <!-- Drag Handle for mobile -->\r\n+                        <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n+                            <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n+                        </div>\r\n+\r\n                         <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n-                            ${ConsumptionChart(this.generateTrendData())}\r\n-                            \r\n-                            <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n-                                ${MetricsCard({\r\n-                                    type: 'bill',\r\n-                                    title: 'Current Bill',\r\n-                                    value: formatCurrency(this.billData.amount),\r\n-                                    badge: `Due in ${this.calculateDueDays()} days`,\r\n-                                    progress: this.calculateBillProgress()\r\n-                                })}\r\n-                                \r\n-                                ${MetricsCard({\r\n-                                    type: 'consumption',\r\n-                                    title: 'Units Consumed',\r\n-                                    value: `${this.billData.unitsConsumed} kWh`,\r\n-                                    badge: `${this.calculateEfficiency()} efficiency`,\r\n-                                    subtitle: `Rate: ${formatCurrency(this.billData.ratePerUnit)}/kWh`\r\n-                                })}\r\n+                            ${Header()}\r\n+\r\n+                            <!-- Main Content -->\r\n+                            <div class=\"flex-1 flex flex-col min-h-0 mt-3\">\r\n+                                ${ConsumptionChart(trendData)}\r\n+\r\n+                                <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n+                                    ${MetricsCard({\r\n+                                        type: 'bill',\r\n+                                        title: 'Current Bill',\r\n+                                        value: formatCurrency(this.billData.amount),\r\n+                                        badge: `Due in ${calculateDueDays(this.billData.dueDate)} days`,\r\n+                                        progress: this.calculateBillProgress()\r\n+                                    })}\r\n+\r\n+                                    ${MetricsCard({\r\n+                                        type: 'consumption',\r\n+                                        title: 'Units Consumed',\r\n+                                        value: `${this.billData.unitsConsumed} kWh`,\r\n+                                        badge: `${this.calculateEfficiency()} efficiency`,\r\n+                                        subtitle: `Rate: ${formatCurrency(this.billData.ratePerUnit)}/kWh`\r\n+                                    })}\r\n+                                </div>\r\n+\r\n+                                ${SolarQuoteCard()}\r\n                             </div>\r\n-                            \r\n-                            ${SolarQuoteCard()}\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n@@ -80,824 +136,135 @@\n         this.afterRender();\r\n     }\r\n \r\n     afterRender() {\r\n-        if (this.isMobileDevice()) {\r\n-            this.initializeMobileInteractions();\r\n-        }\r\n-        this.initializeCharts();\r\n-        this.initializeCountUps();\r\n-        this.startAnimation();\r\n+        requestAnimationFrame(() => {\r\n+            if (this.isMobileDevice()) {\r\n+                initializeMobileInteractions(document.getElementById('insights-container'));\r\n+            }\r\n+            this.initializeCharts();\r\n+            this.initializeCountUps();\r\n+            this.startAnimation();\r\n+        });\r\n     }\r\n \r\n-  isMobileDevice() {\r\n-    return window.innerWidth < 768; // You can adjust this breakpoint\r\n-  }\r\n+    initializeCharts() {\r\n+        const chartCanvas = document.getElementById('consumption-trend-chart');\r\n+        if (!chartCanvas) {\r\n+            console.error('Chart canvas not found');\r\n+            return;\r\n+        }\r\n \r\n-  getTrendChangeText() {\r\n-    const trendData = this.generateTrendData();\r\n-    return `${this.formatChange(trendData)}% vs last month`;\r\n-  }\r\n+        const ctx = chartCanvas.getContext('2d');\r\n+        const isMobile = this.isMobileDevice();\r\n+        \r\n+        if (this.charts.consumption) {\r\n+            this.charts.consumption.destroy();\r\n+        }\r\n \r\n-  initializeMobileInteractions() {\r\n-    const insightsContainer = document.getElementById(\"insights-container\");\r\n-    let startY = 0;\r\n-    let currentY = 0;\r\n-    let initialHeight = \"60vh\";\r\n-    let expandedHeight = \"92vh\";\r\n+        this.charts.consumption = initializeConsumptionChart(ctx, this.generateTrendData(), isMobile);\r\n+    }\r\n \r\n-    // Handle drag to expand/collapse\r\n-    const handleTouchStart = (e) => {\r\n-      startY = e.touches[0].clientY;\r\n-      currentY = insightsContainer.getBoundingClientRect().height;\r\n-    };\r\n+    initializeCountUps() {\r\n+        const countUpOptions = {\r\n+            duration: 2,\r\n+            useEasing: true,\r\n+            useGrouping: true,\r\n+        };\r\n \r\n-    const handleTouchMove = (e) => {\r\n-      const deltaY = startY - e.touches[0].clientY;\r\n-      const newHeight = Math.max(\r\n-        Math.min(currentY + deltaY, window.innerHeight * 0.92),\r\n-        window.innerHeight * 0.3\r\n-      );\r\n+        this.countUps = {\r\n+            billAmount: new CountUp('bill-amount', this.billData.amount, {\r\n+                ...countUpOptions,\r\n+                prefix: 'PKR ',\r\n+                decimalPlaces: 0,\r\n+            }),\r\n+            unitsConsumed: new CountUp('units-consumed', this.billData.unitsConsumed, {\r\n+                ...countUpOptions,\r\n+                suffix: ' kWh',\r\n+                decimalPlaces: 0,\r\n+            }),\r\n+        };\r\n+    }\r\n \r\n-      gsap.to(insightsContainer, {\r\n-        height: newHeight,\r\n-        duration: 0.1,\r\n-        ease: \"none\",\r\n-      });\r\n-    };\r\n-\r\n-    const handleTouchEnd = (e) => {\r\n-      const finalHeight = insightsContainer.getBoundingClientRect().height;\r\n-      const threshold = window.innerHeight * 0.6;\r\n-\r\n-      gsap.to(insightsContainer, {\r\n-        height: finalHeight > threshold ? expandedHeight : initialHeight,\r\n-        duration: 0.3,\r\n-        ease: \"power2.out\",\r\n-      });\r\n-    };\r\n-\r\n-    // Add touch event listeners\r\n-    const dragHandle = insightsContainer.querySelector(\".drag-handle\");\r\n-    dragHandle.addEventListener(\"touchstart\", handleTouchStart);\r\n-    dragHandle.addEventListener(\"touchmove\", handleTouchMove);\r\n-    dragHandle.addEventListener(\"touchend\", handleTouchEnd);\r\n-  }\r\n-\r\n-  async startAnimation() {\r\n-    if (this.error) {\r\n-      this.showError();\r\n-      return;\r\n+    startCountUps() {\r\n+        Object.values(this.countUps).forEach(counter => {\r\n+            if (counter && !counter.error) {\r\n+                counter.start();\r\n+            }\r\n+        });\r\n     }\r\n \r\n-    // Initialize charts before animations\r\n-    const trendData = this.generateTrendData();\r\n-    await this.initializeCharts(trendData);\r\n+    async startAnimation() {\r\n+        const elements = {\r\n+            container: document.getElementById('quote-result-page'),\r\n+            billPreview: document.getElementById('bill-preview-container'),\r\n+            loadingIndicator: document.getElementById('loading-indicator'),\r\n+            header: document.getElementById('insights-header'),\r\n+            progress: document.getElementById('progress-tracker'),\r\n+            consumption: document.getElementById('consumption-card'),\r\n+            metrics: document.querySelectorAll('.consumption-metric'),\r\n+            nextSteps: document.getElementById('next-steps-card')\r\n+        };\r\n \r\n-    const isMobile = this.isMobileDevice();\r\n-    const billPreviewContainer = document.getElementById(\r\n-      \"bill-preview-container\"\r\n-    );\r\n-    const insightsContainer = document.getElementById(\"insights-container\");\r\n-    const loadingIndicator = document.getElementById(\"loading-indicator\");\r\n-    const quoteResultPage = document.getElementById(\"quote-result-page\");\r\n+        // Initial setup\r\n+        elements.container.classList.remove('opacity-0');\r\n \r\n-    // Initial states\r\n-    gsap.set([billPreviewContainer, loadingIndicator], {\r\n-      opacity: 0,\r\n-    });\r\n+        const timeline = gsap.timeline({\r\n+            defaults: { duration: 0.6, ease: 'power2.out' }\r\n+        });\r\n \r\n-    if (isMobile) {\r\n-      // Mobile animation sequence\r\n-      gsap.set(billPreviewContainer, {\r\n-        y: -20,\r\n-      });\r\n+        // Animate bill preview\r\n+        timeline.to(elements.billPreview, {\r\n+            opacity: 1,\r\n+            y: 0\r\n+        });\r\n \r\n-      // Set initial state for mobile insights\r\n-      gsap.set(insightsContainer, {\r\n-        y: \"100%\",\r\n-        visibility: \"visible\",\r\n-        opacity: 1,\r\n-      });\r\n-\r\n-      const tl = gsap.timeline({\r\n-        defaults: { duration: 0.8, ease: \"power2.out\" },\r\n-      });\r\n-\r\n-      await tl\r\n-        .to(billPreviewContainer, {\r\n-          opacity: 1,\r\n-          y: 0,\r\n-          duration: 1,\r\n+        // Show and hide loading indicator\r\n+        timeline.to(elements.loadingIndicator, {\r\n+            opacity: 1,\r\n+            scale: 1,\r\n+            duration: 0.5\r\n         })\r\n-        .to(loadingIndicator, {\r\n-          opacity: 1,\r\n-          scale: 1,\r\n-          duration: 0.5,\r\n-        })\r\n-        .to(loadingIndicator, {\r\n-          opacity: 0,\r\n-          scale: 0.5,\r\n-          delay: 0.5,\r\n-        })\r\n-        .to(insightsContainer, {\r\n-          y: \"0%\",\r\n-          duration: 0.8,\r\n-          ease: \"power4.out\",\r\n-          onComplete: () => {\r\n-            requestAnimationFrame(() => {\r\n-              this.startInsightAnimations();\r\n-            });\r\n-          },\r\n+        .to(elements.loadingIndicator, {\r\n+            opacity: 0,\r\n+            scale: 0.5,\r\n+            delay: 0.5\r\n         });\r\n-    } else {\r\n-      // Desktop animation sequence\r\n-      gsap.set(billPreviewContainer, {\r\n-        scale: 0.9,\r\n-        position: \"absolute\",\r\n-        left: \"50%\",\r\n-        top: \"50%\",\r\n-        xPercent: -50,\r\n-        yPercent: -50,\r\n-        width: \"47.5%\",\r\n-      });\r\n \r\n-      // Set initial state for desktop insights\r\n-      gsap.set(insightsContainer, {\r\n-        opacity: 0,\r\n-        visibility: \"hidden\",\r\n-      });\r\n-\r\n-      const tl = gsap.timeline({\r\n-        defaults: { duration: 0.8, ease: \"power2.out\" },\r\n-      });\r\n-\r\n-      await tl\r\n-        .to(billPreviewContainer, {\r\n-          opacity: 1,\r\n-          scale: 1,\r\n-          duration: 1,\r\n+        // Animate insights elements\r\n+        timeline.to([elements.header, elements.progress], {\r\n+            opacity: 1,\r\n+            y: 0,\r\n+            stagger: 0.1\r\n         })\r\n-        .to(loadingIndicator, {\r\n-          opacity: 1,\r\n-          scale: 1,\r\n-          duration: 0.5,\r\n+        .to(elements.consumption, {\r\n+            opacity: 1,\r\n+            y: 0\r\n         })\r\n-        .to(loadingIndicator, {\r\n-          opacity: 0,\r\n-          scale: 0.5,\r\n-          delay: 1,\r\n+        .to(elements.metrics, {\r\n+            opacity: 1,\r\n+            y: 0,\r\n+            stagger: 0.1,\r\n+            onComplete: () => this.startCountUps()\r\n         })\r\n-        .to(\r\n-          billPreviewContainer,\r\n-          {\r\n-            left: \"0%\",\r\n-            top: \"0%\",\r\n-            xPercent: 0,\r\n-            yPercent: 0,\r\n-            width: \"50%\",\r\n-            position: \"relative\",\r\n-          },\r\n-          \"-=0.3\"\r\n-        )\r\n-        .add(() => {\r\n-          insightsContainer.style.visibility = \"visible\";\r\n-        })\r\n-        .to(insightsContainer, {\r\n-          opacity: 1,\r\n-          duration: 0.5,\r\n-          onComplete: () => {\r\n-            requestAnimationFrame(() => {\r\n-              this.startInsightAnimations();\r\n-            });\r\n-          },\r\n+        .to(elements.nextSteps, {\r\n+            opacity: 1,\r\n+            y: 0\r\n         });\r\n     }\r\n-  }\r\n \r\n-  startInsightAnimations() {\r\n-    // First init the counters\r\n-    this.initCountUps();\r\n-\r\n-    // Make sure elements exist before animating\r\n-    const elements = {\r\n-      header: document.getElementById(\"insights-header\"),\r\n-      progress: document.getElementById(\"progress-tracker\"),\r\n-      consumption: document.getElementById(\"consumption-card\"),\r\n-      metrics: document.querySelectorAll(\".consumption-metric\"),\r\n-      nextSteps: document.getElementById(\"next-steps-card\"),\r\n-    };\r\n-\r\n-    // Check if elements exist before animating\r\n-    if (elements.header) {\r\n-      gsap.to(elements.header, {\r\n-        opacity: 1,\r\n-        y: 0,\r\n-        duration: 0.6,\r\n-        ease: \"power2.out\",\r\n-      });\r\n-    }\r\n-\r\n-    if (elements.progress) {\r\n-      gsap.to(elements.progress, {\r\n-        opacity: 1,\r\n-        y: 0,\r\n-        duration: 0.6,\r\n-        delay: 0.2,\r\n-        ease: \"power2.out\",\r\n-      });\r\n-    }\r\n-\r\n-    if (elements.consumption) {\r\n-      gsap.to(elements.consumption, {\r\n-        opacity: 1,\r\n-        y: 0,\r\n-        duration: 0.6,\r\n-        delay: 0.4,\r\n-        ease: \"power2.out\",\r\n-      });\r\n-    }\r\n-\r\n-    if (elements.metrics.length > 0) {\r\n-      gsap.to(elements.metrics, {\r\n-        opacity: 1,\r\n-        y: 0,\r\n-        duration: 0.6,\r\n-        stagger: 0.2,\r\n-        delay: 0.6,\r\n-        ease: \"power2.out\",\r\n-        onComplete: () => {\r\n-          this.startCountUps();\r\n-        },\r\n-      });\r\n-    }\r\n-\r\n-    if (elements.nextSteps) {\r\n-      gsap.to(elements.nextSteps, {\r\n-        opacity: 1,\r\n-        y: 0,\r\n-        duration: 0.6,\r\n-        delay: 1,\r\n-        ease: \"power2.out\",\r\n-      });\r\n-    }\r\n-  }\r\n-\r\n-  attachBaseStyles() {\r\n-    const style = document.createElement(\"style\");\r\n-    style.textContent = this.getBaseStyles();\r\n-    document.head.appendChild(style);\r\n-  }\r\n-\r\n-  getBaseStyles() {\r\n-    return `\r\n-        /* Base Theme Colors */\r\n-        :root {\r\n-            --color-primary: #10b981;\r\n-            --color-primary-dark: #059669;\r\n-            --color-bg-secondary: #f3f4f6;\r\n-        }\r\n-\r\n-        /* Mobile Styles */\r\n-        @media (max-width: 768px) {\r\n-            #insights-container {\r\n-                transition: transform 0.3s ease;\r\n-                will-change: transform;\r\n-                touch-action: none;\r\n+    handleResize() {\r\n+        clearTimeout(this.resizeTimeout);\r\n+        this.resizeTimeout = setTimeout(() => {\r\n+            if (this.charts.consumption) {\r\n+                this.charts.consumption.resize();\r\n             }\r\n-\r\n-            .drag-handle {\r\n-                cursor: grab;\r\n-                touch-action: none;\r\n-            }\r\n-\r\n-            .drag-handle:active {\r\n-                cursor: grabbing;\r\n-            }\r\n-        }\r\n-\r\n-        /* Hide scrollbar on mobile */\r\n-        .hide-scrollbar::-webkit-scrollbar {\r\n-            display: none;\r\n-        }\r\n-        .hide-scrollbar {\r\n-            -ms-overflow-style: none;\r\n-            scrollbar-width: none;\r\n-        }\r\n-\r\n-        /* Loading Spinner */\r\n-        .loading-spinner {\r\n-            width: 40px;\r\n-            height: 40px;\r\n-            border: 3px solid rgba(16, 185, 129, 0.1);\r\n-            border-radius: 50%;\r\n-            border-top-color: #10b981;\r\n-            animation: spin 1s ease-in-out infinite;\r\n-        }\r\n-\r\n-        @keyframes spin {\r\n-            to { transform: rotate(360deg); }\r\n-        }\r\n-\r\n-        /* Animated Gradient */\r\n-        .animated-gradient {\r\n-            background: linear-gradient(\r\n-                45deg,\r\n-                rgba(255,255,255,0.1),\r\n-                rgba(255,255,255,0.2),\r\n-                rgba(255,255,255,0.1)\r\n-            );\r\n-            background-size: 200% 200%;\r\n-            animation: gradient 15s ease infinite;\r\n-        }\r\n-\r\n-        @keyframes gradient {\r\n-            0% { background-position: 0% 50%; }\r\n-            50% { background-position: 100% 50%; }\r\n-            100% { background-position: 0% 50%; }\r\n-        }\r\n-    `;\r\n-  }\r\n-\r\n-  initCountUps() {\r\n-    console.log(\"Initializing CountUps with data:\", this.billData); // Add debug log\r\n-\r\n-    const countUpOptions = {\r\n-      duration: 2,\r\n-      useEasing: true,\r\n-      useGrouping: true,\r\n-    };\r\n-\r\n-    // Initialize counters for the bill amounts and units\r\n-    this.countUps = {\r\n-      billAmount: new CountUp(\"bill-amount\", this.billData.amount || 0, {\r\n-        ...countUpOptions,\r\n-        prefix: \"PKR \",\r\n-        decimalPlaces: 0,\r\n-      }),\r\n-      unitsConsumed: new CountUp(\r\n-        \"units-consumed\",\r\n-        this.billData.unitsConsumed || 0,\r\n-        {\r\n-          ...countUpOptions,\r\n-          suffix: \" kWh\",\r\n-          decimalPlaces: 0,\r\n-        }\r\n-      ),\r\n-    };\r\n-  }\r\n-\r\n-  startCountUps() {\r\n-    console.log(\"Starting CountUps\"); // Add debug log\r\n-    Object.entries(this.countUps).forEach(([key, counter]) => {\r\n-      if (counter && !counter.error) {\r\n-        console.log(`Starting counter: ${key}`);\r\n-        counter.start();\r\n-      } else {\r\n-        console.error(`Error with counter ${key}:`, counter?.error);\r\n-      }\r\n-    });\r\n-  }\r\n-  renderBillPreview() {\r\n-    if (!this.billData) {\r\n-      console.error(\"Bill data is not available\");\r\n-      this.renderError(document.getElementById(\"app\"));\r\n-      return;\r\n+        }, 250);\r\n     }\r\n \r\n-    console.log(\"Rendering with bill data:\", this.billData); // Add debug log\r\n-\r\n-    const billPreviewContainer = document.querySelector(\"#bill-preview\");\r\n-    if (!billPreviewContainer) {\r\n-      console.error(\"Bill preview container not found\");\r\n-      return;\r\n-    }\r\n-\r\n-    const billPreview = new BillPreview({\r\n-      ...this.billData,\r\n-      totalAmount: this.billData.amount, // Ensure totalAmount is set\r\n-      unitsConsumed: this.billData.unitsConsumed,\r\n-      ratePerUnit: this.billData.ratePerUnit,\r\n-    });\r\n-    billPreview.render(billPreviewContainer);\r\n-  }\r\n-\r\n-  renderError(container) {\r\n-    container.innerHTML = `\r\n-        <div class=\"flex items-center justify-center h-screen\">\r\n-            <div class=\"text-center\">\r\n-                <h2 class=\"text-xl font-semibold text-gray-800 mb-2\">Error</h2>\r\n-                <p class=\"text-gray-600\">Bill data is not available. Please try again.</p>\r\n-                <button onclick=\"window.router.push('/')\" \r\n-                        class=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\">\r\n-                    Go Back\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n-    `;\r\n-  }\r\n-\r\n-  renderInsights() {\r\n-    const insightsContainer = document.querySelector(\"#insights-container\");\r\n-    if (!insightsContainer) return;\r\n-\r\n-    // Generate trend data for the last 6 months\r\n-    const trendData = this.generateTrendData();\r\n-\r\n-    insightsContainer.innerHTML = `\r\n-      <div class=\"h-full flex flex-col p-2 sm:p-4 lg:p-6 overflow-auto\">\r\n-        <!-- Header Section -->\r\n-        <div class=\"flex-none mb-3 sm:mb-4 lg:mb-6 opacity-0\" id=\"insights-header\">\r\n-          <div class=\"flex items-center gap-3 sm:gap-4\">\r\n-            <div class=\"flex-shrink-0\">\r\n-              <div class=\"w-8 h-8 sm:w-10 sm:h-10 rounded-xl bg-gradient-to-r from-emerald-500 to-emerald-600 flex items-center justify-center\">\r\n-                <svg class=\"w-4 h-4 sm:w-5 sm:h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n-                </svg>\r\n-              </div>\r\n-            </div>\r\n-            <div>\r\n-              <h2 class=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">Bill Analysis</h2>\r\n-              <p class=\"text-xs sm:text-sm lg:text-base text-gray-500\">Understanding your consumption</p>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <!-- Progress Tracker -->\r\n-        <div class=\"bg-white/70 backdrop-blur rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 mb-3 sm:mb-4 lg:mb-6 opacity-0\" id=\"progress-tracker\">\r\n-          <div class=\"flex justify-between items-center\">\r\n-            <div class=\"flex items-center gap-3\">\r\n-              <div class=\"w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-emerald-600 flex items-center justify-center text-white font-semibold text-sm sm:text-base\">1</div>\r\n-              <div>\r\n-                <p class=\"font-semibold text-gray-900 text-sm sm:text-base\">Bill Review</p>\r\n-                <p class=\"text-xs sm:text-sm text-gray-500\">Analyzing patterns</p>\r\n-              </div>\r\n-            </div>\r\n-            <div class=\"h-0.5 w-16 sm:w-24 bg-gray-200\"></div>\r\n-            <div class=\"flex items-center gap-3\">\r\n-              <div class=\"w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-gray-200 flex items-center justify-center text-gray-400 font-semibold text-sm sm:text-base\">2</div>\r\n-              <div>\r\n-                <p class=\"font-semibold text-gray-400 text-sm sm:text-base\">Solar Quote</p>\r\n-                <p class=\"text-xs sm:text-sm text-gray-400\">Up next</p>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <!-- Content Grid -->\r\n-        <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 lg:gap-6 flex-1\">\r\n-          <!-- Consumption Analysis Card -->\r\n-          <div class=\"sm:col-span-2 bg-white rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 opacity-0\" id=\"consumption-card\">\r\n-            <div class=\"flex justify-between items-center mb-3 sm:mb-4\">\r\n-              <h3 class=\"text-sm sm:text-base lg:text-lg font-semibold text-gray-900\">Consumption Analysis</h3>\r\n-              <div class=\"px-2 py-1 bg-emerald-50 text-emerald-600 rounded-full text-xs sm:text-sm font-medium\">\r\n-                ${this.formatChange(trendData)}% vs last month\r\n-              </div>\r\n-            </div>\r\n-            <div class=\"h-[200px] sm:h-[250px]\">\r\n-              <canvas id=\"consumption-trend-chart\"></canvas>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <!-- Current Bill Card -->\r\n-          <div class=\"bg-white rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 opacity-0 consumption-metric\">\r\n-            <div class=\"flex items-center justify-between mb-2\">\r\n-              <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n-                <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n-                </svg>\r\n-              </div>\r\n-              <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs sm:text-sm rounded-full\">Due in ${this.calculateDueDays()} days</span>\r\n-            </div>\r\n-            <p class=\"text-xs sm:text-sm text-gray-500 mb-1\">Current Bill</p>\r\n-            <p class=\"text-lg font-bold text-gray-900\" id=\"bill-amount\">${this.formatCurrency(\r\n-              this.billData.amount\r\n-            )}</p>\r\n-            <div class=\"mt-4 h-1 bg-gray-100 rounded\">\r\n-              <div class=\"h-full bg-emerald-500 rounded\" style=\"width: ${this.calculateBillProgress()}%\"></div>\r\n-            </div>\r\n-          </div>\r\n-\r\n-          <!-- Units Consumed Card -->\r\n-          <div class=\"bg-white rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 opacity-0 consumption-metric\">\r\n-            <div class=\"flex items-center justify-between mb-2\">\r\n-              <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n-                <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n-                </svg>\r\n-              </div>\r\n-              <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs sm:text-sm rounded-full\">\r\n-                ${this.calculateEfficiency()} efficiency\r\n-              </span>\r\n-            </div>\r\n-            <p class=\"text-xs sm:text-sm text-gray-500 mb-1\">Units Consumed</p>\r\n-            <p class=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">${\r\n-              this.billData.unitsConsumed\r\n-            } kWh</p>\r\n-            <p class=\"text-xs sm:text-sm text-gray-500 mt-2\">Rate: ${this.formatCurrency(\r\n-              this.billData.ratePerUnit\r\n-            )}/kWh</p>\r\n-          </div>\r\n-\r\n-          <!-- Next Steps Card -->\r\n-          <div class=\"sm:col-span-2 mt-auto\">\r\n-            <div class=\"bg-gradient-to-br from-emerald-600 to-emerald-700 rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 relative opacity-0\" id=\"next-steps-card\">\r\n-                <div class=\"!w-full !max-w-none !important border-2 !border-red-500\">\r\n-                <h3 class=\"text-base sm:text-lg lg:text-xl font-semibold text-white mb-2\">Ready For Your Solar Quote?</h3>\r\n-                <p class=\"text-sm sm:text-base text-white/90 mb-4\">\r\n-                  We've analyzed your consumption patterns. Let's see how much you could save with solar energy!\r\n-                </p> \r\n-                <button \r\n-                  id=\"proceed-to-quote\" \r\n-                  class=\"w-full bg-white/10 hover:bg-white/20 text-white px-4 py-3 rounded-xl font-medium\r\n-                       transition-all duration-300 shadow-sm hover:shadow-lg\r\n-                       flex items-center justify-center gap-2 group\"\r\n-                >\r\n-                  Generate My Solar Quote\r\n-                  <svg class=\"w-4 h-4 transform group-hover:translate-x-1 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n-                  </svg>\r\n-                </button>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    `;\r\n-\r\n-    // Update the chart colors in initializeCharts\r\n-    this.initializeCharts(trendData);\r\n-    this.startInsightAnimations();\r\n-    this.attachEventListeners();\r\n-  }\r\n-\r\n-  generateTrendData() {\r\n-    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"];\r\n-    return months.map((month) => ({\r\n-      month,\r\n-      consumption: Math.floor(\r\n-        this.billData.unitsConsumed * (0.8 + Math.random() * 0.4)\r\n-      ),\r\n-    }));\r\n-  }\r\n-\r\n-  initializeCharts(trendData) {\r\n-    return new Promise((resolve) => {\r\n-      requestAnimationFrame(() => {\r\n-        const ctx = document.getElementById(\"consumption-trend-chart\");\r\n-        if (!ctx) {\r\n-          console.error(\"Chart canvas not found\");\r\n-          resolve();\r\n-          return;\r\n-        }\r\n-\r\n-        // Ensure the canvas is visible\r\n-        ctx.style.display = \"block\";\r\n-\r\n-        const isMobile = window.innerWidth < 640;\r\n-        const isTablet = window.innerWidth < 1024;\r\n-\r\n-        // Destroy existing chart if it exists\r\n+    destroy() {\r\n+        window.removeEventListener('resize', this.handleResize);\r\n         if (this.charts.consumption) {\r\n-          this.charts.consumption.destroy();\r\n+            this.charts.consumption.destroy();\r\n         }\r\n-\r\n-        // Generate proper monthly data\r\n-        const monthlyData = this.generateMonthlyData();\r\n-\r\n-        // Create new chart\r\n-        this.charts.consumption = new Chart(ctx, {\r\n-          type: \"line\",\r\n-          data: {\r\n-            labels: monthlyData.months,\r\n-            datasets: [\r\n-              {\r\n-                label: \"Consumption (kWh)\",\r\n-                data: monthlyData.values,\r\n-                borderColor: \"#059669\",\r\n-                backgroundColor: \"rgba(5, 150, 105, 0.1)\",\r\n-                tension: 0.4,\r\n-                fill: true,\r\n-                pointRadius: isMobile ? 2 : isTablet ? 3 : 4,\r\n-                pointHoverRadius: isMobile ? 4 : isTablet ? 5 : 6,\r\n-                pointBackgroundColor: \"#ffffff\",\r\n-                pointBorderColor: \"#059669\",\r\n-                pointBorderWidth: isMobile ? 1 : 2,\r\n-              },\r\n-            ],\r\n-          },\r\n-          options: {\r\n-            responsive: true,\r\n-            maintainAspectRatio: false,\r\n-            interaction: {\r\n-              mode: \"nearest\",\r\n-              intersect: false,\r\n-              axis: \"x\",\r\n-            },\r\n-            plugins: {\r\n-              legend: {\r\n-                display: false,\r\n-              },\r\n-              tooltip: {\r\n-                enabled: true,\r\n-                backgroundColor: \"white\",\r\n-                titleColor: \"#1f2937\",\r\n-                bodyColor: \"#4b5563\",\r\n-                borderColor: \"#e5e7eb\",\r\n-                borderWidth: 1,\r\n-                padding: isMobile ? 8 : 12,\r\n-                titleFont: {\r\n-                  size: isMobile ? 12 : 14,\r\n-                  weight: \"bold\",\r\n-                },\r\n-                bodyFont: {\r\n-                  size: isMobile ? 11 : 13,\r\n-                },\r\n-                displayColors: false,\r\n-                callbacks: {\r\n-                  label: function (context) {\r\n-                    return `${context.parsed.y.toLocaleString()} kWh`;\r\n-                  },\r\n-                },\r\n-              },\r\n-            },\r\n-            scales: {\r\n-              x: {\r\n-                grid: {\r\n-                  display: false,\r\n-                },\r\n-                ticks: {\r\n-                  font: {\r\n-                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n-                  },\r\n-                },\r\n-              },\r\n-              y: {\r\n-                beginAtZero: true,\r\n-                grid: {\r\n-                  color: \"rgba(0, 0, 0, 0.05)\",\r\n-                },\r\n-                ticks: {\r\n-                  font: {\r\n-                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n-                  },\r\n-                  callback: function (value) {\r\n-                    return `${value} kWh`;\r\n-                  },\r\n-                },\r\n-              },\r\n-            },\r\n-          },\r\n-        });\r\n-\r\n-        // Resolve promise after chart is initialized\r\n-        this.charts.consumption.options.animation = {\r\n-          onComplete: () => {\r\n-            resolve();\r\n-          },\r\n-        };\r\n-      });\r\n-    });\r\n-  }\r\n-\r\n-  // Add this helper method to generate better monthly data\r\n-  generateMonthlyData() {\r\n-    const currentMonth = new Date().getMonth();\r\n-    const months = [\r\n-      \"Jan\",\r\n-      \"Feb\",\r\n-      \"Mar\",\r\n-      \"Apr\",\r\n-      \"May\",\r\n-      \"Jun\",\r\n-      \"Jul\",\r\n-      \"Aug\",\r\n-      \"Sep\",\r\n-      \"Oct\",\r\n-      \"Nov\",\r\n-      \"Dec\",\r\n-    ];\r\n-    const baseConsumption = this.billData.unitsConsumed;\r\n-\r\n-    // Get last 6 months including current month\r\n-    const monthLabels = [];\r\n-    const consumptionValues = [];\r\n-\r\n-    for (let i = 5; i >= 0; i--) {\r\n-      let monthIndex = (currentMonth - i + 12) % 12;\r\n-      monthLabels.push(months[monthIndex]);\r\n-\r\n-      // Generate realistic variations (±20% of base consumption)\r\n-      let variation = baseConsumption * (0.8 + Math.random() * 0.4);\r\n-      consumptionValues.push(Math.round(variation));\r\n     }\r\n-\r\n-    return {\r\n-      months: monthLabels,\r\n-      values: consumptionValues,\r\n-    };\r\n-  }\r\n-\r\n-  handleResize() {\r\n-    clearTimeout(this.resizeTimeout);\r\n-    this.resizeTimeout = setTimeout(() => {\r\n-      if (this.charts.consumption) {\r\n-        this.charts.consumption.resize();\r\n-      }\r\n-    }, 250);\r\n-  }\r\n-\r\n-  // Utility methods\r\n-  formatCurrency(value) {\r\n-    return new Intl.NumberFormat(\"en-PK\", {\r\n-      style: \"currency\",\r\n-      currency: \"PKR\",\r\n-      minimumFractionDigits: 0,\r\n-      maximumFractionDigits: 0,\r\n-    }).format(value);\r\n-  }\r\n-\r\n-  calculateDueDays() {\r\n-    const dueDate = new Date(this.billData.dueDate);\r\n-    const today = new Date();\r\n-    const diffTime = Math.abs(dueDate - today);\r\n-    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n-  }\r\n-\r\n-  calculateBillProgress() {\r\n-    const daysInMonth = 30;\r\n-    const today = new Date();\r\n-    const billDate = new Date(this.billData.issueDate);\r\n-    const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n-    return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n-  }\r\n-\r\n-  calculateEfficiency() {\r\n-    const avgConsumption = 500; // Example average consumption\r\n-    const efficiency = (this.billData.unitsConsumed / avgConsumption) * 100;\r\n-    return efficiency <= 100 ? \"High\" : \"Low\";\r\n-  }\r\n-\r\n-  formatChange(data) {\r\n-    const lastTwo = data.slice(-2);\r\n-    const change =\r\n-      ((lastTwo[1].consumption - lastTwo[0].consumption) /\r\n-        lastTwo[0].consumption) *\r\n-      100;\r\n-    return change.toFixed(1);\r\n-  }\r\n-\r\n-  attachEventListeners() {\r\n-    const quoteButton = document.getElementById(\"proceed-to-quote\");\r\n-    const mobileQuoteButton = document.getElementById(\r\n-      \"proceed-to-quote-mobile\"\r\n-    );\r\n-\r\n-    if (quoteButton) {\r\n-      quoteButton.addEventListener(\"click\", () => {\r\n-        window.router.push(\"/quote\");\r\n-      });\r\n-    }\r\n-\r\n-    if (mobileQuoteButton) {\r\n-      mobileQuoteButton.addEventListener(\"click\", () => {\r\n-        window.router.push(\"/quote\");\r\n-      });\r\n-    }\r\n-\r\n-    // Add touch event handlers for mobile\r\n-    if (this.isMobileDevice()) {\r\n-      const insightsContainer = document.getElementById(\"insights-container\");\r\n-      let startY = 0;\r\n-      let scrolling = false;\r\n-\r\n-      insightsContainer.addEventListener(\r\n-        \"touchstart\",\r\n-        (e) => {\r\n-          startY = e.touches[0].pageY;\r\n-        },\r\n-        { passive: true }\r\n-      );\r\n-\r\n-      insightsContainer.addEventListener(\r\n-        \"touchmove\",\r\n-        (e) => {\r\n-          if (!scrolling) {\r\n-            const currentY = e.touches[0].pageY;\r\n-            const diff = startY - currentY;\r\n-\r\n-            if (diff > 0) {\r\n-              // Scrolling up\r\n-              scrolling = true;\r\n-              gsap.to(insightsContainer, {\r\n-                height: \"85vh\",\r\n-                duration: 0.3,\r\n-                ease: \"power2.out\",\r\n-              });\r\n-            }\r\n-          }\r\n-        },\r\n-        { passive: true }\r\n-      );\r\n-    }\r\n-  }\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731689438459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,8 @@\n import { html, render } from 'lit-html';\r\n import { getBillData } from '../store/solarSizingState.js';\r\n import { CountUp } from 'countup.js';\r\n import Chart from 'chart.js/auto';\r\n-import { initializeMobileInteractions } from './utils/mobileInteractions';\r\n-import { initializeConsumptionChart } from './utils/chartConfig';\r\n import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n import { Header } from './components/Header';\r\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n"
                },
                {
                    "date": 1731689529313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n import './styles/base.css';\r\n-\r\n+import { initializeMobileInteractions } from './utils/MobileInteractions.js';\r\n export class BillReviewPage {\r\n     constructor() {\r\n         this.billData = getBillData();\r\n         this.charts = {};\r\n"
                },
                {
                    "date": 1731689567328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // BillReviewPage.js\r\n import { html, render } from 'lit-html';\r\n-import { getBillData } from '../store/solarSizingState.js';\r\n+import { getBillData } from '../../store/solarSizingState.js';\r\n import { CountUp } from 'countup.js';\r\n import Chart from 'chart.js/auto';\r\n import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n import { Header } from './components/Header';\r\n"
                },
                {
                    "date": 1731689665830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,20 @@\n-// BillReviewPage.js\r\n+// At the top of BillReviewPage.js, update the imports\r\n import { html, render } from 'lit-html';\r\n-import { getBillData } from '../../store/solarSizingState.js';\r\n+import { getBillData } from '../store/solarSizingState.js';\r\n import { CountUp } from 'countup.js';\r\n import Chart from 'chart.js/auto';\r\n+import gsap from 'gsap';\r\n+import { initializeMobileInteractions } from './utils/mobileInteractions';\r\n+import { initializeConsumptionChart } from './utils/chartConfig';\r\n import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n import { Header } from './components/Header';\r\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n import './styles/base.css';\r\n-import { initializeMobileInteractions } from './utils/MobileInteractions.js';\r\n+\r\n+\r\n export class BillReviewPage {\r\n     constructor() {\r\n         this.billData = getBillData();\r\n         this.charts = {};\r\n"
                },
                {
                    "date": 1731689692369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n import { getBillData } from '../store/solarSizingState.js';\r\n import { CountUp } from 'countup.js';\r\n import Chart from 'chart.js/auto';\r\n import gsap from 'gsap';\r\n-import { initializeMobileInteractions } from './utils/mobileInteractions';\r\n-import { initializeConsumptionChart } from './utils/chartConfig';\r\n+import { initializeMobileInteractions } from './utils/MobileInteractions';\r\n+import { initializeConsumptionChart } from './utils/chartconfig';\r\n import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n import { Header } from './components/Header';\r\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n"
                },
                {
                    "date": 1731689976939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,272 +1,208 @@\n-// At the top of BillReviewPage.js, update the imports\r\n+// src/js/components/BillReview/BillReviewPage.js\r\n import { html, render } from 'lit-html';\r\n-import { getBillData } from '../store/solarSizingState.js';\r\n-import { CountUp } from 'countup.js';\r\n-import Chart from 'chart.js/auto';\r\n-import gsap from 'gsap';\r\n-import { initializeMobileInteractions } from './utils/MobileInteractions';\r\n-import { initializeConsumptionChart } from './utils/chartconfig';\r\n-import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n-import { Header } from './components/Header';\r\n-import { ConsumptionChart } from './components/ConsumptionChart';\r\n-import { MetricsCard } from './components/MetricsCard';\r\n-import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n-import './styles/base.css';\r\n+import { getBillData } from '../../store/solarSizingState.js';\r\n \r\n-\r\n export class BillReviewPage {\r\n     constructor() {\r\n-        this.billData = getBillData();\r\n-        this.charts = {};\r\n-        this.countUps = {};\r\n-        this.resizeTimeout = null;\r\n-\r\n-        // Bind methods\r\n-        this.handleResize = this.handleResize.bind(this);\r\n-        window.addEventListener('resize', this.handleResize);\r\n+        try {\r\n+            this.billData = getBillData();\r\n+            console.log('BillReviewPage initialized with data:', this.billData);\r\n+            if (!this.billData) {\r\n+                console.error('No bill data available');\r\n+                window.router.push('/');\r\n+                return;\r\n+            }\r\n+        } catch (error) {\r\n+            console.error('Error initializing BillReviewPage:', error);\r\n+            window.router.push('/');\r\n+        }\r\n     }\r\n \r\n-    isMobileDevice() {\r\n-        return window.innerWidth < 768;\r\n-    }\r\n+    render() {\r\n+        try {\r\n+            const app = document.getElementById('app');\r\n+            if (!app) {\r\n+                console.error('App container not found');\r\n+                return;\r\n+            }\r\n \r\n-    calculateBillProgress() {\r\n-        const daysInMonth = 30;\r\n-        const today = new Date();\r\n-        const billDate = new Date(this.billData.issueDate);\r\n-        const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n-        return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n-    }\r\n+            console.log('Rendering BillReviewPage with data:', this.billData);\r\n \r\n-    calculateEfficiency() {\r\n-        const avgConsumption = 500; // Example average consumption\r\n-        return this.billData.unitsConsumed <= avgConsumption ? 'High' : 'Low';\r\n-    }\r\n+            const template = html`\r\n+                <div class=\"min-h-screen bg-gray-50 p-4\">\r\n+                    <div class=\"max-w-7xl mx-auto\">\r\n+                        <!-- Back Button -->\r\n+                        <button \r\n+                            @click=${() => window.router.push('/')}\r\n+                            class=\"mb-4 inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\r\n+                        >\r\n+                            <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"/>\r\n+                            </svg>\r\n+                            Back\r\n+                        </button>\r\n \r\n-    generateTrendData() {\r\n-        const currentMonth = new Date().getMonth();\r\n-        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n-        const values = [];\r\n-        const labels = [];\r\n+                        <!-- Main Content -->\r\n+                        <div class=\"bg-white rounded-lg shadow-sm p-6\">\r\n+                            <h1 class=\"text-2xl font-bold text-gray-900 mb-6\">Bill Review</h1>\r\n+                            \r\n+                            <!-- Bill Information -->\r\n+                            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n+                                ${this.renderConsumptionCard()}\r\n+                                ${this.renderSolarSystemCard()}\r\n+                            </div>\r\n \r\n-        for (let i = 5; i >= 0; i--) {\r\n-            let monthIndex = (currentMonth - i + 12) % 12;\r\n-            labels.push(months[monthIndex]);\r\n-            \r\n-            // Generate realistic variations (±20% of base consumption)\r\n-            let variation = this.billData.unitsConsumed * (0.8 + Math.random() * 0.4);\r\n-            values.push(Math.round(variation));\r\n+                            <!-- Charts Section -->\r\n+                            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n+                                ${this.renderProductionChart()}\r\n+                                ${this.renderSavingsChart()}\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            `;\r\n+\r\n+            render(template, app);\r\n+            this.initializeCharts();\r\n+        } catch (error) {\r\n+            console.error('Error rendering BillReviewPage:', error);\r\n         }\r\n-\r\n-        return {\r\n-            labels,\r\n-            values,\r\n-            change: this.calculateTrendChange(values)\r\n-        };\r\n     }\r\n \r\n-    calculateTrendChange(values) {\r\n-        if (values.length < 2) return 0;\r\n-        const lastTwo = values.slice(-2);\r\n-        const change = ((lastTwo[1] - lastTwo[0]) / lastTwo[0]) * 100;\r\n-        return formatChange(change);\r\n+    renderConsumptionCard() {\r\n+        return html`\r\n+            <div class=\"bg-gray-50 rounded-lg p-6\">\r\n+                <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Consumption Details</h2>\r\n+                <div class=\"space-y-3\">\r\n+                    <div class=\"flex justify-between items-center\">\r\n+                        <span class=\"text-gray-600\">Units Consumed</span>\r\n+                        <span class=\"text-gray-900 font-medium\">${this.billData.unitsConsumed} kWh</span>\r\n+                    </div>\r\n+                    <div class=\"flex justify-between items-center\">\r\n+                        <span class=\"text-gray-600\">Rate per Unit</span>\r\n+                        <span class=\"text-gray-900 font-medium\">PKR ${this.billData.ratePerUnit}</span>\r\n+                    </div>\r\n+                    <div class=\"flex justify-between items-center\">\r\n+                        <span class=\"text-gray-600\">Total Amount</span>\r\n+                        <span class=\"text-gray-900 font-medium\">PKR ${this.billData.amount}</span>\r\n+                    </div>\r\n+                </div>\r\n+            </div>\r\n+        `;\r\n     }\r\n \r\n-    render() {\r\n-        const trendData = this.generateTrendData();\r\n-\r\n-        const template = html`\r\n-            <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" \r\n-                 id=\"quote-result-page\">\r\n-                <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n-                    <!-- Bill Preview Side -->\r\n-                    <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" \r\n-                         id=\"bill-preview-container\">\r\n-                        <div id=\"bill-preview\" class=\"h-full\"></div>\r\n+    renderSolarSystemCard() {\r\n+        return html`\r\n+            <div class=\"bg-gray-50 rounded-lg p-6\">\r\n+                <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Solar System Details</h2>\r\n+                <div class=\"space-y-3\">\r\n+                    <div class=\"flex justify-between items-center\">\r\n+                        <span class=\"text-gray-600\">Recommended Size</span>\r\n+                        <span class=\"text-gray-900 font-medium\">${this.billData.recommendedSystemSize} kW</span>\r\n                     </div>\r\n-\r\n-                    <!-- Loading Indicator -->\r\n-                    <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" \r\n-                         id=\"loading-indicator\">\r\n-                        <div class=\"loading-spinner\"></div>\r\n-                        <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n+                    <div class=\"flex justify-between items-center\">\r\n+                        <span class=\"text-gray-600\">Daily Production</span>\r\n+                        <span class=\"text-gray-900 font-medium\">${this.billData.estimatedDailyProduction} kWh</span>\r\n                     </div>\r\n-\r\n-                    <!-- Insights Container -->\r\n-                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n-                         id=\"insights-container\"\r\n-                         style=\"bottom: 0;\">\r\n-                        <!-- Drag Handle for mobile -->\r\n-                        <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n-                            <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n-                        </div>\r\n-\r\n-                        <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n-                            ${Header()}\r\n-\r\n-                            <!-- Main Content -->\r\n-                            <div class=\"flex-1 flex flex-col min-h-0 mt-3\">\r\n-                                ${ConsumptionChart(trendData)}\r\n-\r\n-                                <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n-                                    ${MetricsCard({\r\n-                                        type: 'bill',\r\n-                                        title: 'Current Bill',\r\n-                                        value: formatCurrency(this.billData.amount),\r\n-                                        badge: `Due in ${calculateDueDays(this.billData.dueDate)} days`,\r\n-                                        progress: this.calculateBillProgress()\r\n-                                    })}\r\n-\r\n-                                    ${MetricsCard({\r\n-                                        type: 'consumption',\r\n-                                        title: 'Units Consumed',\r\n-                                        value: `${this.billData.unitsConsumed} kWh`,\r\n-                                        badge: `${this.calculateEfficiency()} efficiency`,\r\n-                                        subtitle: `Rate: ${formatCurrency(this.billData.ratePerUnit)}/kWh`\r\n-                                    })}\r\n-                                </div>\r\n-\r\n-                                ${SolarQuoteCard()}\r\n-                            </div>\r\n-                        </div>\r\n+                    <div class=\"flex justify-between items-center\">\r\n+                        <span class=\"text-gray-600\">Annual Savings</span>\r\n+                        <span class=\"text-gray-900 font-medium\">PKR ${this.billData.estimatedAnnualSavings}</span>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n         `;\r\n+    }\r\n \r\n-        render(template, document.getElementById('app'));\r\n-        this.afterRender();\r\n+    renderProductionChart() {\r\n+        return html`\r\n+            <div class=\"bg-gray-50 rounded-lg p-6\">\r\n+                <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Energy Production</h2>\r\n+                <div class=\"h-64\">\r\n+                    <canvas id=\"production-chart\"></canvas>\r\n+                </div>\r\n+            </div>\r\n+        `;\r\n     }\r\n \r\n-    afterRender() {\r\n-        requestAnimationFrame(() => {\r\n-            if (this.isMobileDevice()) {\r\n-                initializeMobileInteractions(document.getElementById('insights-container'));\r\n-            }\r\n-            this.initializeCharts();\r\n-            this.initializeCountUps();\r\n-            this.startAnimation();\r\n-        });\r\n+    renderSavingsChart() {\r\n+        return html`\r\n+            <div class=\"bg-gray-50 rounded-lg p-6\">\r\n+                <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Savings Analysis</h2>\r\n+                <div class=\"h-64\">\r\n+                    <canvas id=\"savings-chart\"></canvas>\r\n+                </div>\r\n+            </div>\r\n+        `;\r\n     }\r\n \r\n     initializeCharts() {\r\n-        const chartCanvas = document.getElementById('consumption-trend-chart');\r\n-        if (!chartCanvas) {\r\n-            console.error('Chart canvas not found');\r\n-            return;\r\n+        // Initialize Production Chart\r\n+        const productionCtx = document.getElementById('production-chart');\r\n+        if (productionCtx) {\r\n+            new Chart(productionCtx, {\r\n+                type: 'line',\r\n+                data: {\r\n+                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n+                    datasets: [{\r\n+                        label: 'Expected Production (kWh)',\r\n+                        data: this.generateMonthlyProduction(),\r\n+                        borderColor: 'rgb(16, 185, 129)',\r\n+                        backgroundColor: 'rgba(16, 185, 129, 0.1)',\r\n+                        tension: 0.4,\r\n+                        fill: true\r\n+                    }]\r\n+                },\r\n+                options: {\r\n+                    responsive: true,\r\n+                    maintainAspectRatio: false,\r\n+                    plugins: {\r\n+                        legend: {\r\n+                            position: 'top',\r\n+                        }\r\n+                    }\r\n+                }\r\n+            });\r\n         }\r\n \r\n-        const ctx = chartCanvas.getContext('2d');\r\n-        const isMobile = this.isMobileDevice();\r\n-        \r\n-        if (this.charts.consumption) {\r\n-            this.charts.consumption.destroy();\r\n+        // Initialize Savings Chart\r\n+        const savingsCtx = document.getElementById('savings-chart');\r\n+        if (savingsCtx) {\r\n+            new Chart(savingsCtx, {\r\n+                type: 'line',\r\n+                data: {\r\n+                    labels: Array.from({length: 12}, (_, i) => `Year ${i + 1}`),\r\n+                    datasets: [{\r\n+                        label: 'Cumulative Savings (PKR)',\r\n+                        data: this.generateSavingsProjection(),\r\n+                        borderColor: 'rgb(59, 130, 246)',\r\n+                        backgroundColor: 'rgba(59, 130, 246, 0.1)',\r\n+                        tension: 0.4,\r\n+                        fill: true\r\n+                    }]\r\n+                },\r\n+                options: {\r\n+                    responsive: true,\r\n+                    maintainAspectRatio: false,\r\n+                    plugins: {\r\n+                        legend: {\r\n+                            position: 'top',\r\n+                        }\r\n+                    }\r\n+                }\r\n+            });\r\n         }\r\n-\r\n-        this.charts.consumption = initializeConsumptionChart(ctx, this.generateTrendData(), isMobile);\r\n     }\r\n \r\n-    initializeCountUps() {\r\n-        const countUpOptions = {\r\n-            duration: 2,\r\n-            useEasing: true,\r\n-            useGrouping: true,\r\n-        };\r\n-\r\n-        this.countUps = {\r\n-            billAmount: new CountUp('bill-amount', this.billData.amount, {\r\n-                ...countUpOptions,\r\n-                prefix: 'PKR ',\r\n-                decimalPlaces: 0,\r\n-            }),\r\n-            unitsConsumed: new CountUp('units-consumed', this.billData.unitsConsumed, {\r\n-                ...countUpOptions,\r\n-                suffix: ' kWh',\r\n-                decimalPlaces: 0,\r\n-            }),\r\n-        };\r\n+    generateMonthlyProduction() {\r\n+        // Generate realistic monthly production data based on system size\r\n+        const baseProduction = this.billData.estimatedDailyProduction * 30;\r\n+        const seasonalFactors = [0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7];\r\n+        return seasonalFactors.map(factor => baseProduction * factor);\r\n     }\r\n \r\n-    startCountUps() {\r\n-        Object.values(this.countUps).forEach(counter => {\r\n-            if (counter && !counter.error) {\r\n-                counter.start();\r\n-            }\r\n-        });\r\n+    generateSavingsProjection() {\r\n+        // Generate 12-year savings projection\r\n+        const annualSavings = this.billData.estimatedAnnualSavings;\r\n+        return Array.from({length: 12}, (_, i) => annualSavings * (i + 1));\r\n     }\r\n-\r\n-    async startAnimation() {\r\n-        const elements = {\r\n-            container: document.getElementById('quote-result-page'),\r\n-            billPreview: document.getElementById('bill-preview-container'),\r\n-            loadingIndicator: document.getElementById('loading-indicator'),\r\n-            header: document.getElementById('insights-header'),\r\n-            progress: document.getElementById('progress-tracker'),\r\n-            consumption: document.getElementById('consumption-card'),\r\n-            metrics: document.querySelectorAll('.consumption-metric'),\r\n-            nextSteps: document.getElementById('next-steps-card')\r\n-        };\r\n-\r\n-        // Initial setup\r\n-        elements.container.classList.remove('opacity-0');\r\n-\r\n-        const timeline = gsap.timeline({\r\n-            defaults: { duration: 0.6, ease: 'power2.out' }\r\n-        });\r\n-\r\n-        // Animate bill preview\r\n-        timeline.to(elements.billPreview, {\r\n-            opacity: 1,\r\n-            y: 0\r\n-        });\r\n-\r\n-        // Show and hide loading indicator\r\n-        timeline.to(elements.loadingIndicator, {\r\n-            opacity: 1,\r\n-            scale: 1,\r\n-            duration: 0.5\r\n-        })\r\n-        .to(elements.loadingIndicator, {\r\n-            opacity: 0,\r\n-            scale: 0.5,\r\n-            delay: 0.5\r\n-        });\r\n-\r\n-        // Animate insights elements\r\n-        timeline.to([elements.header, elements.progress], {\r\n-            opacity: 1,\r\n-            y: 0,\r\n-            stagger: 0.1\r\n-        })\r\n-        .to(elements.consumption, {\r\n-            opacity: 1,\r\n-            y: 0\r\n-        })\r\n-        .to(elements.metrics, {\r\n-            opacity: 1,\r\n-            y: 0,\r\n-            stagger: 0.1,\r\n-            onComplete: () => this.startCountUps()\r\n-        })\r\n-        .to(elements.nextSteps, {\r\n-            opacity: 1,\r\n-            y: 0\r\n-        });\r\n-    }\r\n-\r\n-    handleResize() {\r\n-        clearTimeout(this.resizeTimeout);\r\n-        this.resizeTimeout = setTimeout(() => {\r\n-            if (this.charts.consumption) {\r\n-                this.charts.consumption.resize();\r\n-            }\r\n-        }, 250);\r\n-    }\r\n-\r\n-    destroy() {\r\n-        window.removeEventListener('resize', this.handleResize);\r\n-        if (this.charts.consumption) {\r\n-            this.charts.consumption.destroy();\r\n-        }\r\n-    }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731690023744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n // src/js/components/BillReview/BillReviewPage.js\r\n import { html, render } from 'lit-html';\r\n import { getBillData } from '../../store/solarSizingState.js';\r\n+import Chart from 'chart.js/auto';\r\n \r\n export class BillReviewPage {\r\n     constructor() {\r\n         try {\r\n"
                },
                {
                    "date": 1731690145513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,209 +1,272 @@\n-// src/js/components/BillReview/BillReviewPage.js\r\n+// At the top of BillReviewPage.js, update the imports\r\n import { html, render } from 'lit-html';\r\n-import { getBillData } from '../../store/solarSizingState.js';\r\n+import { getBillData } from '../store/solarSizingState.js';\r\n+import { CountUp } from 'countup.js';\r\n import Chart from 'chart.js/auto';\r\n+import gsap from 'gsap';\r\n+import { initializeMobileInteractions } from './utils/MobileInteractions';\r\n+import { initializeConsumptionChart } from './utils/chartconfig';\r\n+import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n+import { Header } from './components/Header';\r\n+import { ConsumptionChart } from './components/ConsumptionChart';\r\n+import { MetricsCard } from './components/MetricsCard';\r\n+import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n+import './styles/base.css';\r\n \r\n+\r\n export class BillReviewPage {\r\n     constructor() {\r\n-        try {\r\n-            this.billData = getBillData();\r\n-            console.log('BillReviewPage initialized with data:', this.billData);\r\n-            if (!this.billData) {\r\n-                console.error('No bill data available');\r\n-                window.router.push('/');\r\n-                return;\r\n-            }\r\n-        } catch (error) {\r\n-            console.error('Error initializing BillReviewPage:', error);\r\n-            window.router.push('/');\r\n-        }\r\n+        this.billData = getBillData();\r\n+        this.charts = {};\r\n+        this.countUps = {};\r\n+        this.resizeTimeout = null;\r\n+\r\n+        // Bind methods\r\n+        this.handleResize = this.handleResize.bind(this);\r\n+        window.addEventListener('resize', this.handleResize);\r\n     }\r\n \r\n-    render() {\r\n-        try {\r\n-            const app = document.getElementById('app');\r\n-            if (!app) {\r\n-                console.error('App container not found');\r\n-                return;\r\n-            }\r\n+    isMobileDevice() {\r\n+        return window.innerWidth < 768;\r\n+    }\r\n \r\n-            console.log('Rendering BillReviewPage with data:', this.billData);\r\n+    calculateBillProgress() {\r\n+        const daysInMonth = 30;\r\n+        const today = new Date();\r\n+        const billDate = new Date(this.billData.issueDate);\r\n+        const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n+        return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n+    }\r\n \r\n-            const template = html`\r\n-                <div class=\"min-h-screen bg-gray-50 p-4\">\r\n-                    <div class=\"max-w-7xl mx-auto\">\r\n-                        <!-- Back Button -->\r\n-                        <button \r\n-                            @click=${() => window.router.push('/')}\r\n-                            class=\"mb-4 inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\r\n-                        >\r\n-                            <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"/>\r\n-                            </svg>\r\n-                            Back\r\n-                        </button>\r\n+    calculateEfficiency() {\r\n+        const avgConsumption = 500; // Example average consumption\r\n+        return this.billData.unitsConsumed <= avgConsumption ? 'High' : 'Low';\r\n+    }\r\n \r\n-                        <!-- Main Content -->\r\n-                        <div class=\"bg-white rounded-lg shadow-sm p-6\">\r\n-                            <h1 class=\"text-2xl font-bold text-gray-900 mb-6\">Bill Review</h1>\r\n-                            \r\n-                            <!-- Bill Information -->\r\n-                            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n-                                ${this.renderConsumptionCard()}\r\n-                                ${this.renderSolarSystemCard()}\r\n-                            </div>\r\n+    generateTrendData() {\r\n+        const currentMonth = new Date().getMonth();\r\n+        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n+        const values = [];\r\n+        const labels = [];\r\n \r\n-                            <!-- Charts Section -->\r\n-                            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n-                                ${this.renderProductionChart()}\r\n-                                ${this.renderSavingsChart()}\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            `;\r\n+        for (let i = 5; i >= 0; i--) {\r\n+            let monthIndex = (currentMonth - i + 12) % 12;\r\n+            labels.push(months[monthIndex]);\r\n+            \r\n+            // Generate realistic variations (±20% of base consumption)\r\n+            let variation = this.billData.unitsConsumed * (0.8 + Math.random() * 0.4);\r\n+            values.push(Math.round(variation));\r\n+        }\r\n \r\n-            render(template, app);\r\n-            this.initializeCharts();\r\n-        } catch (error) {\r\n-            console.error('Error rendering BillReviewPage:', error);\r\n-        }\r\n+        return {\r\n+            labels,\r\n+            values,\r\n+            change: this.calculateTrendChange(values)\r\n+        };\r\n     }\r\n \r\n-    renderConsumptionCard() {\r\n-        return html`\r\n-            <div class=\"bg-gray-50 rounded-lg p-6\">\r\n-                <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Consumption Details</h2>\r\n-                <div class=\"space-y-3\">\r\n-                    <div class=\"flex justify-between items-center\">\r\n-                        <span class=\"text-gray-600\">Units Consumed</span>\r\n-                        <span class=\"text-gray-900 font-medium\">${this.billData.unitsConsumed} kWh</span>\r\n-                    </div>\r\n-                    <div class=\"flex justify-between items-center\">\r\n-                        <span class=\"text-gray-600\">Rate per Unit</span>\r\n-                        <span class=\"text-gray-900 font-medium\">PKR ${this.billData.ratePerUnit}</span>\r\n-                    </div>\r\n-                    <div class=\"flex justify-between items-center\">\r\n-                        <span class=\"text-gray-600\">Total Amount</span>\r\n-                        <span class=\"text-gray-900 font-medium\">PKR ${this.billData.amount}</span>\r\n-                    </div>\r\n-                </div>\r\n-            </div>\r\n-        `;\r\n+    calculateTrendChange(values) {\r\n+        if (values.length < 2) return 0;\r\n+        const lastTwo = values.slice(-2);\r\n+        const change = ((lastTwo[1] - lastTwo[0]) / lastTwo[0]) * 100;\r\n+        return formatChange(change);\r\n     }\r\n \r\n-    renderSolarSystemCard() {\r\n-        return html`\r\n-            <div class=\"bg-gray-50 rounded-lg p-6\">\r\n-                <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Solar System Details</h2>\r\n-                <div class=\"space-y-3\">\r\n-                    <div class=\"flex justify-between items-center\">\r\n-                        <span class=\"text-gray-600\">Recommended Size</span>\r\n-                        <span class=\"text-gray-900 font-medium\">${this.billData.recommendedSystemSize} kW</span>\r\n+    render() {\r\n+        const trendData = this.generateTrendData();\r\n+\r\n+        const template = html`\r\n+            <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" \r\n+                 id=\"quote-result-page\">\r\n+                <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n+                    <!-- Bill Preview Side -->\r\n+                    <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" \r\n+                         id=\"bill-preview-container\">\r\n+                        <div id=\"bill-preview\" class=\"h-full\"></div>\r\n                     </div>\r\n-                    <div class=\"flex justify-between items-center\">\r\n-                        <span class=\"text-gray-600\">Daily Production</span>\r\n-                        <span class=\"text-gray-900 font-medium\">${this.billData.estimatedDailyProduction} kWh</span>\r\n+\r\n+                    <!-- Loading Indicator -->\r\n+                    <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" \r\n+                         id=\"loading-indicator\">\r\n+                        <div class=\"loading-spinner\"></div>\r\n+                        <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n                     </div>\r\n-                    <div class=\"flex justify-between items-center\">\r\n-                        <span class=\"text-gray-600\">Annual Savings</span>\r\n-                        <span class=\"text-gray-900 font-medium\">PKR ${this.billData.estimatedAnnualSavings}</span>\r\n+\r\n+                    <!-- Insights Container -->\r\n+                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n+                         id=\"insights-container\"\r\n+                         style=\"bottom: 0;\">\r\n+                        <!-- Drag Handle for mobile -->\r\n+                        <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n+                            <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n+                        </div>\r\n+\r\n+                        <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n+                            ${Header()}\r\n+\r\n+                            <!-- Main Content -->\r\n+                            <div class=\"flex-1 flex flex-col min-h-0 mt-3\">\r\n+                                ${ConsumptionChart(trendData)}\r\n+\r\n+                                <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n+                                    ${MetricsCard({\r\n+                                        type: 'bill',\r\n+                                        title: 'Current Bill',\r\n+                                        value: formatCurrency(this.billData.amount),\r\n+                                        badge: `Due in ${calculateDueDays(this.billData.dueDate)} days`,\r\n+                                        progress: this.calculateBillProgress()\r\n+                                    })}\r\n+\r\n+                                    ${MetricsCard({\r\n+                                        type: 'consumption',\r\n+                                        title: 'Units Consumed',\r\n+                                        value: `${this.billData.unitsConsumed} kWh`,\r\n+                                        badge: `${this.calculateEfficiency()} efficiency`,\r\n+                                        subtitle: `Rate: ${formatCurrency(this.billData.ratePerUnit)}/kWh`\r\n+                                    })}\r\n+                                </div>\r\n+\r\n+                                ${SolarQuoteCard()}\r\n+                            </div>\r\n+                        </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n         `;\r\n-    }\r\n \r\n-    renderProductionChart() {\r\n-        return html`\r\n-            <div class=\"bg-gray-50 rounded-lg p-6\">\r\n-                <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Energy Production</h2>\r\n-                <div class=\"h-64\">\r\n-                    <canvas id=\"production-chart\"></canvas>\r\n-                </div>\r\n-            </div>\r\n-        `;\r\n+        render(template, document.getElementById('app'));\r\n+        this.afterRender();\r\n     }\r\n \r\n-    renderSavingsChart() {\r\n-        return html`\r\n-            <div class=\"bg-gray-50 rounded-lg p-6\">\r\n-                <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Savings Analysis</h2>\r\n-                <div class=\"h-64\">\r\n-                    <canvas id=\"savings-chart\"></canvas>\r\n-                </div>\r\n-            </div>\r\n-        `;\r\n+    afterRender() {\r\n+        requestAnimationFrame(() => {\r\n+            if (this.isMobileDevice()) {\r\n+                initializeMobileInteractions(document.getElementById('insights-container'));\r\n+            }\r\n+            this.initializeCharts();\r\n+            this.initializeCountUps();\r\n+            this.startAnimation();\r\n+        });\r\n     }\r\n \r\n     initializeCharts() {\r\n-        // Initialize Production Chart\r\n-        const productionCtx = document.getElementById('production-chart');\r\n-        if (productionCtx) {\r\n-            new Chart(productionCtx, {\r\n-                type: 'line',\r\n-                data: {\r\n-                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n-                    datasets: [{\r\n-                        label: 'Expected Production (kWh)',\r\n-                        data: this.generateMonthlyProduction(),\r\n-                        borderColor: 'rgb(16, 185, 129)',\r\n-                        backgroundColor: 'rgba(16, 185, 129, 0.1)',\r\n-                        tension: 0.4,\r\n-                        fill: true\r\n-                    }]\r\n-                },\r\n-                options: {\r\n-                    responsive: true,\r\n-                    maintainAspectRatio: false,\r\n-                    plugins: {\r\n-                        legend: {\r\n-                            position: 'top',\r\n-                        }\r\n-                    }\r\n-                }\r\n-            });\r\n+        const chartCanvas = document.getElementById('consumption-trend-chart');\r\n+        if (!chartCanvas) {\r\n+            console.error('Chart canvas not found');\r\n+            return;\r\n         }\r\n \r\n-        // Initialize Savings Chart\r\n-        const savingsCtx = document.getElementById('savings-chart');\r\n-        if (savingsCtx) {\r\n-            new Chart(savingsCtx, {\r\n-                type: 'line',\r\n-                data: {\r\n-                    labels: Array.from({length: 12}, (_, i) => `Year ${i + 1}`),\r\n-                    datasets: [{\r\n-                        label: 'Cumulative Savings (PKR)',\r\n-                        data: this.generateSavingsProjection(),\r\n-                        borderColor: 'rgb(59, 130, 246)',\r\n-                        backgroundColor: 'rgba(59, 130, 246, 0.1)',\r\n-                        tension: 0.4,\r\n-                        fill: true\r\n-                    }]\r\n-                },\r\n-                options: {\r\n-                    responsive: true,\r\n-                    maintainAspectRatio: false,\r\n-                    plugins: {\r\n-                        legend: {\r\n-                            position: 'top',\r\n-                        }\r\n-                    }\r\n-                }\r\n-            });\r\n+        const ctx = chartCanvas.getContext('2d');\r\n+        const isMobile = this.isMobileDevice();\r\n+        \r\n+        if (this.charts.consumption) {\r\n+            this.charts.consumption.destroy();\r\n         }\r\n+\r\n+        this.charts.consumption = initializeConsumptionChart(ctx, this.generateTrendData(), isMobile);\r\n     }\r\n \r\n-    generateMonthlyProduction() {\r\n-        // Generate realistic monthly production data based on system size\r\n-        const baseProduction = this.billData.estimatedDailyProduction * 30;\r\n-        const seasonalFactors = [0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7];\r\n-        return seasonalFactors.map(factor => baseProduction * factor);\r\n+    initializeCountUps() {\r\n+        const countUpOptions = {\r\n+            duration: 2,\r\n+            useEasing: true,\r\n+            useGrouping: true,\r\n+        };\r\n+\r\n+        this.countUps = {\r\n+            billAmount: new CountUp('bill-amount', this.billData.amount, {\r\n+                ...countUpOptions,\r\n+                prefix: 'PKR ',\r\n+                decimalPlaces: 0,\r\n+            }),\r\n+            unitsConsumed: new CountUp('units-consumed', this.billData.unitsConsumed, {\r\n+                ...countUpOptions,\r\n+                suffix: ' kWh',\r\n+                decimalPlaces: 0,\r\n+            }),\r\n+        };\r\n     }\r\n \r\n-    generateSavingsProjection() {\r\n-        // Generate 12-year savings projection\r\n-        const annualSavings = this.billData.estimatedAnnualSavings;\r\n-        return Array.from({length: 12}, (_, i) => annualSavings * (i + 1));\r\n+    startCountUps() {\r\n+        Object.values(this.countUps).forEach(counter => {\r\n+            if (counter && !counter.error) {\r\n+                counter.start();\r\n+            }\r\n+        });\r\n     }\r\n+\r\n+    async startAnimation() {\r\n+        const elements = {\r\n+            container: document.getElementById('quote-result-page'),\r\n+            billPreview: document.getElementById('bill-preview-container'),\r\n+            loadingIndicator: document.getElementById('loading-indicator'),\r\n+            header: document.getElementById('insights-header'),\r\n+            progress: document.getElementById('progress-tracker'),\r\n+            consumption: document.getElementById('consumption-card'),\r\n+            metrics: document.querySelectorAll('.consumption-metric'),\r\n+            nextSteps: document.getElementById('next-steps-card')\r\n+        };\r\n+\r\n+        // Initial setup\r\n+        elements.container.classList.remove('opacity-0');\r\n+\r\n+        const timeline = gsap.timeline({\r\n+            defaults: { duration: 0.6, ease: 'power2.out' }\r\n+        });\r\n+\r\n+        // Animate bill preview\r\n+        timeline.to(elements.billPreview, {\r\n+            opacity: 1,\r\n+            y: 0\r\n+        });\r\n+\r\n+        // Show and hide loading indicator\r\n+        timeline.to(elements.loadingIndicator, {\r\n+            opacity: 1,\r\n+            scale: 1,\r\n+            duration: 0.5\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+            opacity: 0,\r\n+            scale: 0.5,\r\n+            delay: 0.5\r\n+        });\r\n+\r\n+        // Animate insights elements\r\n+        timeline.to([elements.header, elements.progress], {\r\n+            opacity: 1,\r\n+            y: 0,\r\n+            stagger: 0.1\r\n+        })\r\n+        .to(elements.consumption, {\r\n+            opacity: 1,\r\n+            y: 0\r\n+        })\r\n+        .to(elements.metrics, {\r\n+            opacity: 1,\r\n+            y: 0,\r\n+            stagger: 0.1,\r\n+            onComplete: () => this.startCountUps()\r\n+        })\r\n+        .to(elements.nextSteps, {\r\n+            opacity: 1,\r\n+            y: 0\r\n+        });\r\n+    }\r\n+\r\n+    handleResize() {\r\n+        clearTimeout(this.resizeTimeout);\r\n+        this.resizeTimeout = setTimeout(() => {\r\n+            if (this.charts.consumption) {\r\n+                this.charts.consumption.resize();\r\n+            }\r\n+        }, 250);\r\n+    }\r\n+\r\n+    destroy() {\r\n+        window.removeEventListener('resize', this.handleResize);\r\n+        if (this.charts.consumption) {\r\n+            this.charts.consumption.destroy();\r\n+        }\r\n+    }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731690151254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,15 @@\n-// At the top of BillReviewPage.js, update the imports\r\n+// src/js/components/BillReview/BillReviewPage.js\r\n import { html, render } from 'lit-html';\r\n-import { getBillData } from '../store/solarSizingState.js';\r\n-import { CountUp } from 'countup.js';\r\n-import Chart from 'chart.js/auto';\r\n-import gsap from 'gsap';\r\n-import { initializeMobileInteractions } from './utils/MobileInteractions';\r\n-import { initializeConsumptionChart } from './utils/chartconfig';\r\n+import { getBillData } from '../../store/solarSizingState.js';\r\n+import { initializeConsumptionChart } from './utils/chartConfig';\r\n import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n import { Header } from './components/Header';\r\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n import './styles/base.css';\r\n \r\n-\r\n export class BillReviewPage {\r\n     constructor() {\r\n         this.billData = getBillData();\r\n         this.charts = {};\r\n@@ -51,10 +46,8 @@\n \r\n         for (let i = 5; i >= 0; i--) {\r\n             let monthIndex = (currentMonth - i + 12) % 12;\r\n             labels.push(months[monthIndex]);\r\n-            \r\n-            // Generate realistic variations (±20% of base consumption)\r\n             let variation = this.billData.unitsConsumed * (0.8 + Math.random() * 0.4);\r\n             values.push(Math.round(variation));\r\n         }\r\n \r\n@@ -72,8 +65,9 @@\n         return formatChange(change);\r\n     }\r\n \r\n     render() {\r\n+        const app = document.getElementById('app');\r\n         const trendData = this.generateTrendData();\r\n \r\n         const template = html`\r\n             <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" \r\n@@ -133,9 +127,9 @@\n                 </div>\r\n             </div>\r\n         `;\r\n \r\n-        render(template, document.getElementById('app'));\r\n+        render(template, app);\r\n         this.afterRender();\r\n     }\r\n \r\n     afterRender() {\r\n"
                },
                {
                    "date": 1731690240348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,266 @@\n+// src/js/components/BillReview/BillReviewPage.js\r\n+import { html, render } from 'lit-html';\r\n+import { getBillData } from '../../store/solarSizingState.js';\r\n+import { initializeConsumptionChart } from './utils/chartconfig';\r\n+import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n+import { Header } from './components/Header';\r\n+import { ConsumptionChart } from './components/ConsumptionChart';\r\n+import { MetricsCard } from './components/MetricsCard';\r\n+import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n+import './styles/base.css';\r\n+\r\n+export class BillReviewPage {\r\n+    constructor() {\r\n+        this.billData = getBillData();\r\n+        this.charts = {};\r\n+        this.countUps = {};\r\n+        this.resizeTimeout = null;\r\n+\r\n+        // Bind methods\r\n+        this.handleResize = this.handleResize.bind(this);\r\n+        window.addEventListener('resize', this.handleResize);\r\n+    }\r\n+\r\n+    isMobileDevice() {\r\n+        return window.innerWidth < 768;\r\n+    }\r\n+\r\n+    calculateBillProgress() {\r\n+        const daysInMonth = 30;\r\n+        const today = new Date();\r\n+        const billDate = new Date(this.billData.issueDate);\r\n+        const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n+        return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n+    }\r\n+\r\n+    calculateEfficiency() {\r\n+        const avgConsumption = 500; // Example average consumption\r\n+        return this.billData.unitsConsumed <= avgConsumption ? 'High' : 'Low';\r\n+    }\r\n+\r\n+    generateTrendData() {\r\n+        const currentMonth = new Date().getMonth();\r\n+        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n+        const values = [];\r\n+        const labels = [];\r\n+\r\n+        for (let i = 5; i >= 0; i--) {\r\n+            let monthIndex = (currentMonth - i + 12) % 12;\r\n+            labels.push(months[monthIndex]);\r\n+            let variation = this.billData.unitsConsumed * (0.8 + Math.random() * 0.4);\r\n+            values.push(Math.round(variation));\r\n+        }\r\n+\r\n+        return {\r\n+            labels,\r\n+            values,\r\n+            change: this.calculateTrendChange(values)\r\n+        };\r\n+    }\r\n+\r\n+    calculateTrendChange(values) {\r\n+        if (values.length < 2) return 0;\r\n+        const lastTwo = values.slice(-2);\r\n+        const change = ((lastTwo[1] - lastTwo[0]) / lastTwo[0]) * 100;\r\n+        return formatChange(change);\r\n+    }\r\n+\r\n+    render() {\r\n+        const app = document.getElementById('app');\r\n+        const trendData = this.generateTrendData();\r\n+\r\n+        const template = html`\r\n+            <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" \r\n+                 id=\"quote-result-page\">\r\n+                <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n+                    <!-- Bill Preview Side -->\r\n+                    <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" \r\n+                         id=\"bill-preview-container\">\r\n+                        <div id=\"bill-preview\" class=\"h-full\"></div>\r\n+                    </div>\r\n+\r\n+                    <!-- Loading Indicator -->\r\n+                    <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" \r\n+                         id=\"loading-indicator\">\r\n+                        <div class=\"loading-spinner\"></div>\r\n+                        <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n+                    </div>\r\n+\r\n+                    <!-- Insights Container -->\r\n+                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n+                         id=\"insights-container\"\r\n+                         style=\"bottom: 0;\">\r\n+                        <!-- Drag Handle for mobile -->\r\n+                        <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n+                            <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n+                        </div>\r\n+\r\n+                        <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n+                            ${Header()}\r\n+\r\n+                            <!-- Main Content -->\r\n+                            <div class=\"flex-1 flex flex-col min-h-0 mt-3\">\r\n+                                ${ConsumptionChart(trendData)}\r\n+\r\n+                                <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n+                                    ${MetricsCard({\r\n+                                        type: 'bill',\r\n+                                        title: 'Current Bill',\r\n+                                        value: formatCurrency(this.billData.amount),\r\n+                                        badge: `Due in ${calculateDueDays(this.billData.dueDate)} days`,\r\n+                                        progress: this.calculateBillProgress()\r\n+                                    })}\r\n+\r\n+                                    ${MetricsCard({\r\n+                                        type: 'consumption',\r\n+                                        title: 'Units Consumed',\r\n+                                        value: `${this.billData.unitsConsumed} kWh`,\r\n+                                        badge: `${this.calculateEfficiency()} efficiency`,\r\n+                                        subtitle: `Rate: ${formatCurrency(this.billData.ratePerUnit)}/kWh`\r\n+                                    })}\r\n+                                </div>\r\n+\r\n+                                ${SolarQuoteCard()}\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            </div>\r\n+        `;\r\n+\r\n+        render(template, app);\r\n+        this.afterRender();\r\n+    }\r\n+\r\n+    afterRender() {\r\n+        requestAnimationFrame(() => {\r\n+            if (this.isMobileDevice()) {\r\n+                initializeMobileInteractions(document.getElementById('insights-container'));\r\n+            }\r\n+            this.initializeCharts();\r\n+            this.initializeCountUps();\r\n+            this.startAnimation();\r\n+        });\r\n+    }\r\n+\r\n+    initializeCharts() {\r\n+        const chartCanvas = document.getElementById('consumption-trend-chart');\r\n+        if (!chartCanvas) {\r\n+            console.error('Chart canvas not found');\r\n+            return;\r\n+        }\r\n+\r\n+        const ctx = chartCanvas.getContext('2d');\r\n+        const isMobile = this.isMobileDevice();\r\n+        \r\n+        if (this.charts.consumption) {\r\n+            this.charts.consumption.destroy();\r\n+        }\r\n+\r\n+        this.charts.consumption = initializeConsumptionChart(ctx, this.generateTrendData(), isMobile);\r\n+    }\r\n+\r\n+    initializeCountUps() {\r\n+        const countUpOptions = {\r\n+            duration: 2,\r\n+            useEasing: true,\r\n+            useGrouping: true,\r\n+        };\r\n+\r\n+        this.countUps = {\r\n+            billAmount: new CountUp('bill-amount', this.billData.amount, {\r\n+                ...countUpOptions,\r\n+                prefix: 'PKR ',\r\n+                decimalPlaces: 0,\r\n+            }),\r\n+            unitsConsumed: new CountUp('units-consumed', this.billData.unitsConsumed, {\r\n+                ...countUpOptions,\r\n+                suffix: ' kWh',\r\n+                decimalPlaces: 0,\r\n+            }),\r\n+        };\r\n+    }\r\n+\r\n+    startCountUps() {\r\n+        Object.values(this.countUps).forEach(counter => {\r\n+            if (counter && !counter.error) {\r\n+                counter.start();\r\n+            }\r\n+        });\r\n+    }\r\n+\r\n+    async startAnimation() {\r\n+        const elements = {\r\n+            container: document.getElementById('quote-result-page'),\r\n+            billPreview: document.getElementById('bill-preview-container'),\r\n+            loadingIndicator: document.getElementById('loading-indicator'),\r\n+            header: document.getElementById('insights-header'),\r\n+            progress: document.getElementById('progress-tracker'),\r\n+            consumption: document.getElementById('consumption-card'),\r\n+            metrics: document.querySelectorAll('.consumption-metric'),\r\n+            nextSteps: document.getElementById('next-steps-card')\r\n+        };\r\n+\r\n+        // Initial setup\r\n+        elements.container.classList.remove('opacity-0');\r\n+\r\n+        const timeline = gsap.timeline({\r\n+            defaults: { duration: 0.6, ease: 'power2.out' }\r\n+        });\r\n+\r\n+        // Animate bill preview\r\n+        timeline.to(elements.billPreview, {\r\n+            opacity: 1,\r\n+            y: 0\r\n+        });\r\n+\r\n+        // Show and hide loading indicator\r\n+        timeline.to(elements.loadingIndicator, {\r\n+            opacity: 1,\r\n+            scale: 1,\r\n+            duration: 0.5\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+            opacity: 0,\r\n+            scale: 0.5,\r\n+            delay: 0.5\r\n+        });\r\n+\r\n+        // Animate insights elements\r\n+        timeline.to([elements.header, elements.progress], {\r\n+            opacity: 1,\r\n+            y: 0,\r\n+            stagger: 0.1\r\n+        })\r\n+        .to(elements.consumption, {\r\n+            opacity: 1,\r\n+            y: 0\r\n+        })\r\n+        .to(elements.metrics, {\r\n+            opacity: 1,\r\n+            y: 0,\r\n+            stagger: 0.1,\r\n+            onComplete: () => this.startCountUps()\r\n+        })\r\n+        .to(elements.nextSteps, {\r\n+            opacity: 1,\r\n+            y: 0\r\n+        });\r\n+    }\r\n+\r\n+    handleResize() {\r\n+        clearTimeout(this.resizeTimeout);\r\n+        this.resizeTimeout = setTimeout(() => {\r\n+            if (this.charts.consumption) {\r\n+                this.charts.consumption.resize();\r\n+            }\r\n+        }, 250);\r\n+    }\r\n+\r\n+    destroy() {\r\n+        window.removeEventListener('resize', this.handleResize);\r\n+        if (this.charts.consumption) {\r\n+            this.charts.consumption.destroy();\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731690274060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,281 +1,18 @@\n // src/js/components/BillReview/BillReviewPage.js\r\n import { html, render } from 'lit-html';\r\n import { getBillData } from '../../store/solarSizingState.js';\r\n-import { initializeConsumptionChart } from './utils/chartconfig';\r\n-import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n-import { Header } from './components/Header';\r\n-import { ConsumptionChart } from './components/ConsumptionChart';\r\n-import { MetricsCard } from './components/MetricsCard';\r\n-import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n-import './styles/base.css';\r\n-\r\n-export class BillReviewPage {\r\n-    constructor() {\r\n-        this.billData = getBillData();\r\n-        this.charts = {};\r\n-        this.countUps = {};\r\n-        this.resizeTimeout = null;\r\n-\r\n-        // Bind methods\r\n-        this.handleResize = this.handleResize.bind(this);\r\n-        window.addEventListener('resize', this.handleResize);\r\n-    }\r\n-\r\n-    isMobileDevice() {\r\n-        return window.innerWidth < 768;\r\n-    }\r\n-\r\n-    calculateBillProgress() {\r\n-        const daysInMonth = 30;\r\n-        const today = new Date();\r\n-        const billDate = new Date(this.billData.issueDate);\r\n-        const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n-        return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n-    }\r\n-\r\n-    calculateEfficiency() {\r\n-        const avgConsumption = 500; // Example average consumption\r\n-        return this.billData.unitsConsumed <= avgConsumption ? 'High' : 'Low';\r\n-    }\r\n-\r\n-    generateTrendData() {\r\n-        const currentMonth = new Date().getMonth();\r\n-        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n-        const values = [];\r\n-        const labels = [];\r\n-\r\n-        for (let i = 5; i >= 0; i--) {\r\n-            let monthIndex = (currentMonth - i + 12) % 12;\r\n-            labels.push(months[monthIndex]);\r\n-            let variation = this.billData.unitsConsumed * (0.8 + Math.random() * 0.4);\r\n-            values.push(Math.round(variation));\r\n-        }\r\n-\r\n-        return {\r\n-            labels,\r\n-            values,\r\n-            change: this.calculateTrendChange(values)\r\n-        };\r\n-    }\r\n-\r\n-    calculateTrendChange(values) {\r\n-        if (values.length < 2) return 0;\r\n-        const lastTwo = values.slice(-2);\r\n-        const change = ((lastTwo[1] - lastTwo[0]) / lastTwo[0]) * 100;\r\n-        return formatChange(change);\r\n-    }\r\n-\r\n-    render() {\r\n-        const app = document.getElementById('app');\r\n-        const trendData = this.generateTrendData();\r\n-\r\n-        const template = html`\r\n-            <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" \r\n-                 id=\"quote-result-page\">\r\n-                <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n-                    <!-- Bill Preview Side -->\r\n-                    <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" \r\n-                         id=\"bill-preview-container\">\r\n-                        <div id=\"bill-preview\" class=\"h-full\"></div>\r\n-                    </div>\r\n-\r\n-                    <!-- Loading Indicator -->\r\n-                    <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" \r\n-                         id=\"loading-indicator\">\r\n-                        <div class=\"loading-spinner\"></div>\r\n-                        <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n-                    </div>\r\n-\r\n-                    <!-- Insights Container -->\r\n-                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n-                         id=\"insights-container\"\r\n-                         style=\"bottom: 0;\">\r\n-                        <!-- Drag Handle for mobile -->\r\n-                        <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n-                            <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n-                        </div>\r\n-\r\n-                        <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n-                            ${Header()}\r\n-\r\n-                            <!-- Main Content -->\r\n-                            <div class=\"flex-1 flex flex-col min-h-0 mt-3\">\r\n-                                ${ConsumptionChart(trendData)}\r\n-\r\n-                                <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n-                                    ${MetricsCard({\r\n-                                        type: 'bill',\r\n-                                        title: 'Current Bill',\r\n-                                        value: formatCurrency(this.billData.amount),\r\n-                                        badge: `Due in ${calculateDueDays(this.billData.dueDate)} days`,\r\n-                                        progress: this.calculateBillProgress()\r\n-                                    })}\r\n-\r\n-                                    ${MetricsCard({\r\n-                                        type: 'consumption',\r\n-                                        title: 'Units Consumed',\r\n-                                        value: `${this.billData.unitsConsumed} kWh`,\r\n-                                        badge: `${this.calculateEfficiency()} efficiency`,\r\n-                                        subtitle: `Rate: ${formatCurrency(this.billData.ratePerUnit)}/kWh`\r\n-                                    })}\r\n-                                </div>\r\n-\r\n-                                ${SolarQuoteCard()}\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            </div>\r\n-        `;\r\n-\r\n-        render(template, app);\r\n-        this.afterRender();\r\n-    }\r\n-\r\n-    afterRender() {\r\n-        requestAnimationFrame(() => {\r\n-            if (this.isMobileDevice()) {\r\n-                initializeMobileInteractions(document.getElementById('insights-container'));\r\n-            }\r\n-            this.initializeCharts();\r\n-            this.initializeCountUps();\r\n-            this.startAnimation();\r\n-        });\r\n-    }\r\n-\r\n-    initializeCharts() {\r\n-        const chartCanvas = document.getElementById('consumption-trend-chart');\r\n-        if (!chartCanvas) {\r\n-            console.error('Chart canvas not found');\r\n-            return;\r\n-        }\r\n-\r\n-        const ctx = chartCanvas.getContext('2d');\r\n-        const isMobile = this.isMobileDevice();\r\n-        \r\n-        if (this.charts.consumption) {\r\n-            this.charts.consumption.destroy();\r\n-        }\r\n-\r\n-        this.charts.consumption = initializeConsumptionChart(ctx, this.generateTrendData(), isMobile);\r\n-    }\r\n-\r\n-    initializeCountUps() {\r\n-        const countUpOptions = {\r\n-            duration: 2,\r\n-            useEasing: true,\r\n-            useGrouping: true,\r\n-        };\r\n-\r\n-        this.countUps = {\r\n-            billAmount: new CountUp('bill-amount', this.billData.amount, {\r\n-                ...countUpOptions,\r\n-                prefix: 'PKR ',\r\n-                decimalPlaces: 0,\r\n-            }),\r\n-            unitsConsumed: new CountUp('units-consumed', this.billData.unitsConsumed, {\r\n-                ...countUpOptions,\r\n-                suffix: ' kWh',\r\n-                decimalPlaces: 0,\r\n-            }),\r\n-        };\r\n-    }\r\n-\r\n-    startCountUps() {\r\n-        Object.values(this.countUps).forEach(counter => {\r\n-            if (counter && !counter.error) {\r\n-                counter.start();\r\n-            }\r\n-        });\r\n-    }\r\n-\r\n-    async startAnimation() {\r\n-        const elements = {\r\n-            container: document.getElementById('quote-result-page'),\r\n-            billPreview: document.getElementById('bill-preview-container'),\r\n-            loadingIndicator: document.getElementById('loading-indicator'),\r\n-            header: document.getElementById('insights-header'),\r\n-            progress: document.getElementById('progress-tracker'),\r\n-            consumption: document.getElementById('consumption-card'),\r\n-            metrics: document.querySelectorAll('.consumption-metric'),\r\n-            nextSteps: document.getElementById('next-steps-card')\r\n-        };\r\n-\r\n-        // Initial setup\r\n-        elements.container.classList.remove('opacity-0');\r\n-\r\n-        const timeline = gsap.timeline({\r\n-            defaults: { duration: 0.6, ease: 'power2.out' }\r\n-        });\r\n-\r\n-        // Animate bill preview\r\n-        timeline.to(elements.billPreview, {\r\n-            opacity: 1,\r\n-            y: 0\r\n-        });\r\n-\r\n-        // Show and hide loading indicator\r\n-        timeline.to(elements.loadingIndicator, {\r\n-            opacity: 1,\r\n-            scale: 1,\r\n-            duration: 0.5\r\n-        })\r\n-        .to(elements.loadingIndicator, {\r\n-            opacity: 0,\r\n-            scale: 0.5,\r\n-            delay: 0.5\r\n-        });\r\n-\r\n-        // Animate insights elements\r\n-        timeline.to([elements.header, elements.progress], {\r\n-            opacity: 1,\r\n-            y: 0,\r\n-            stagger: 0.1\r\n-        })\r\n-        .to(elements.consumption, {\r\n-            opacity: 1,\r\n-            y: 0\r\n-        })\r\n-        .to(elements.metrics, {\r\n-            opacity: 1,\r\n-            y: 0,\r\n-            stagger: 0.1,\r\n-            onComplete: () => this.startCountUps()\r\n-        })\r\n-        .to(elements.nextSteps, {\r\n-            opacity: 1,\r\n-            y: 0\r\n-        });\r\n-    }\r\n-\r\n-    handleResize() {\r\n-        clearTimeout(this.resizeTimeout);\r\n-        this.resizeTimeout = setTimeout(() => {\r\n-            if (this.charts.consumption) {\r\n-                this.charts.consumption.resize();\r\n-            }\r\n-        }, 250);\r\n-    }\r\n-\r\n-    destroy() {\r\n-        window.removeEventListener('resize', this.handleResize);\r\n-        if (this.charts.consumption) {\r\n-            this.charts.consumption.destroy();\r\n-        }\r\n-    }\r\n-}\n-// src/js/components/BillReview/BillReviewPage.js\r\n-import { html, render } from 'lit-html';\r\n-import { getBillData } from '../../store/solarSizingState.js';\r\n+import { CountUp } from 'countup.js'; // Add this import\r\n+import Chart from 'chart.js/auto'; // Add this if not already imported\r\n+import { gsap } from 'gsap'; // Add this if not already imported\r\n+import { initializeMobileInteractions } from './utils/mobileInteractions';\r\n import { initializeConsumptionChart } from './utils/chartConfig';\r\n import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n import { Header } from './components/Header';\r\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n import './styles/base.css';\r\n-\r\n export class BillReviewPage {\r\n     constructor() {\r\n         this.billData = getBillData();\r\n         this.charts = {};\r\n"
                },
                {
                    "date": 1731690313001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n import { getBillData } from '../../store/solarSizingState.js';\r\n import { CountUp } from 'countup.js'; // Add this import\r\n import Chart from 'chart.js/auto'; // Add this if not already imported\r\n import { gsap } from 'gsap'; // Add this if not already imported\r\n-import { initializeMobileInteractions } from './utils/mobileInteractions';\r\n-import { initializeConsumptionChart } from './utils/chartConfig';\r\n+import { initializeMobileInteractions } from './utils/MobileInteractions';\r\n+import { initializeConsumptionChart } from './utils/chartconfig';\r\n import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n import { Header } from './components/Header';\r\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n"
                },
                {
                    "date": 1731690426882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n import { ConsumptionChart } from './components/ConsumptionChart';\r\n import { MetricsCard } from './components/MetricsCard';\r\n import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n import './styles/base.css';\r\n+\r\n+\r\n export class BillReviewPage {\r\n     constructor() {\r\n         this.billData = getBillData();\r\n         this.charts = {};\r\n"
                },
                {
                    "date": 1731690595728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,271 +1,327 @@\n // src/js/components/BillReview/BillReviewPage.js\r\n-import { html, render } from 'lit-html';\r\n-import { getBillData } from '../../store/solarSizingState.js';\r\n-import { CountUp } from 'countup.js'; // Add this import\r\n-import Chart from 'chart.js/auto'; // Add this if not already imported\r\n-import { gsap } from 'gsap'; // Add this if not already imported\r\n-import { initializeMobileInteractions } from './utils/MobileInteractions';\r\n-import { initializeConsumptionChart } from './utils/chartconfig';\r\n-import { formatCurrency, formatChange, calculateDueDays } from './utils/formatters';\r\n-import { Header } from './components/Header';\r\n-import { ConsumptionChart } from './components/ConsumptionChart';\r\n-import { MetricsCard } from './components/MetricsCard';\r\n-import { SolarQuoteCard } from './components/SolarQuoteCard';\r\n-import './styles/base.css';\r\n+import { html, render } from \"lit-html\";\r\n+import { getBillData } from \"../../store/solarSizingState.js\";\r\n+import { CountUp } from \"countup.js\"; // Add this import\r\n+import Chart from \"chart.js/auto\"; // Add this if not already imported\r\n+import { gsap } from \"gsap\"; // Add this if not already imported\r\n+import { initializeMobileInteractions } from \"./utils/MobileInteractions\";\r\n+import { initializeConsumptionChart } from \"./utils/chartconfig\";\r\n+import {\r\n+  formatCurrency,\r\n+  formatChange,\r\n+  calculateDueDays,\r\n+} from \"./utils/formatters\";\r\n+import { Header } from \"./components/Header\";\r\n+import { ConsumptionChart } from \"./components/ConsumptionChart\";\r\n+import { MetricsCard } from \"./components/MetricsCard\";\r\n+import { SolarQuoteCard } from \"./components/SolarQuoteCard\";\r\n+import \"./styles/base.css\";\r\n \r\n-\r\n export class BillReviewPage {\r\n-    constructor() {\r\n-        this.billData = getBillData();\r\n-        this.charts = {};\r\n-        this.countUps = {};\r\n-        this.resizeTimeout = null;\r\n+  constructor() {\r\n+    this.billData = getBillData();\r\n+    this.charts = {};\r\n+    this.countUps = {};\r\n+    this.resizeTimeout = null;\r\n \r\n-        // Bind methods\r\n-        this.handleResize = this.handleResize.bind(this);\r\n-        window.addEventListener('resize', this.handleResize);\r\n-    }\r\n+    // Bind methods\r\n+    this.handleResize = this.handleResize.bind(this);\r\n+    window.addEventListener(\"resize\", this.handleResize);\r\n+  }\r\n \r\n-    isMobileDevice() {\r\n-        return window.innerWidth < 768;\r\n-    }\r\n+  isMobileDevice() {\r\n+    return window.innerWidth < 768;\r\n+  }\r\n \r\n-    calculateBillProgress() {\r\n-        const daysInMonth = 30;\r\n-        const today = new Date();\r\n-        const billDate = new Date(this.billData.issueDate);\r\n-        const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n-        return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n-    }\r\n+  calculateBillProgress() {\r\n+    const daysInMonth = 30;\r\n+    const today = new Date();\r\n+    const billDate = new Date(this.billData.issueDate);\r\n+    const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n+    return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n+  }\r\n \r\n-    calculateEfficiency() {\r\n-        const avgConsumption = 500; // Example average consumption\r\n-        return this.billData.unitsConsumed <= avgConsumption ? 'High' : 'Low';\r\n-    }\r\n+  calculateEfficiency() {\r\n+    const avgConsumption = 500; // Example average consumption\r\n+    return this.billData.unitsConsumed <= avgConsumption ? \"High\" : \"Low\";\r\n+  }\r\n \r\n-    generateTrendData() {\r\n-        const currentMonth = new Date().getMonth();\r\n-        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n-        const values = [];\r\n-        const labels = [];\r\n+  generateTrendData() {\r\n+    const currentMonth = new Date().getMonth();\r\n+    const months = [\r\n+      \"Jan\",\r\n+      \"Feb\",\r\n+      \"Mar\",\r\n+      \"Apr\",\r\n+      \"May\",\r\n+      \"Jun\",\r\n+      \"Jul\",\r\n+      \"Aug\",\r\n+      \"Sep\",\r\n+      \"Oct\",\r\n+      \"Nov\",\r\n+      \"Dec\",\r\n+    ];\r\n+    const values = [];\r\n+    const labels = [];\r\n \r\n-        for (let i = 5; i >= 0; i--) {\r\n-            let monthIndex = (currentMonth - i + 12) % 12;\r\n-            labels.push(months[monthIndex]);\r\n-            let variation = this.billData.unitsConsumed * (0.8 + Math.random() * 0.4);\r\n-            values.push(Math.round(variation));\r\n-        }\r\n-\r\n-        return {\r\n-            labels,\r\n-            values,\r\n-            change: this.calculateTrendChange(values)\r\n-        };\r\n+    for (let i = 5; i >= 0; i--) {\r\n+      let monthIndex = (currentMonth - i + 12) % 12;\r\n+      labels.push(months[monthIndex]);\r\n+      let variation = this.billData.unitsConsumed * (0.8 + Math.random() * 0.4);\r\n+      values.push(Math.round(variation));\r\n     }\r\n \r\n-    calculateTrendChange(values) {\r\n-        if (values.length < 2) return 0;\r\n-        const lastTwo = values.slice(-2);\r\n-        const change = ((lastTwo[1] - lastTwo[0]) / lastTwo[0]) * 100;\r\n-        return formatChange(change);\r\n-    }\r\n+    return {\r\n+      labels,\r\n+      values,\r\n+      change: this.calculateTrendChange(values),\r\n+    };\r\n+  }\r\n \r\n-    render() {\r\n-        const app = document.getElementById('app');\r\n-        const trendData = this.generateTrendData();\r\n+  calculateTrendChange(values) {\r\n+    if (values.length < 2) return 0;\r\n+    const lastTwo = values.slice(-2);\r\n+    const change = ((lastTwo[1] - lastTwo[0]) / lastTwo[0]) * 100;\r\n+    return formatChange(change);\r\n+  }\r\n \r\n-        const template = html`\r\n-            <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" \r\n-                 id=\"quote-result-page\">\r\n-                <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n-                    <!-- Bill Preview Side -->\r\n-                    <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" \r\n-                         id=\"bill-preview-container\">\r\n-                        <div id=\"bill-preview\" class=\"h-full\"></div>\r\n-                    </div>\r\n+  render() {\r\n+    const app = document.getElementById(\"app\");\r\n+    const trendData = this.generateTrendData();\r\n \r\n-                    <!-- Loading Indicator -->\r\n-                    <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" \r\n-                         id=\"loading-indicator\">\r\n-                        <div class=\"loading-spinner\"></div>\r\n-                        <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n-                    </div>\r\n+    const template = html`\r\n+      <div\r\n+        class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\"\r\n+        id=\"quote-result-page\"\r\n+      >\r\n+        <div\r\n+          class=\"h-full w-full flex flex-col md:flex-row relative\"\r\n+          id=\"main-content\"\r\n+        >\r\n+          <!-- Bill Preview Side -->\r\n+          <div\r\n+            class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\"\r\n+            id=\"bill-preview-container\"\r\n+          >\r\n+            <div id=\"bill-preview\" class=\"h-full\"></div>\r\n+          </div>\r\n \r\n-                    <!-- Insights Container -->\r\n-                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n-                         id=\"insights-container\"\r\n-                         style=\"bottom: 0;\">\r\n-                        <!-- Drag Handle for mobile -->\r\n-                        <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n-                            <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n-                        </div>\r\n+          <!-- Loading Indicator -->\r\n+          <div\r\n+            class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\"\r\n+            id=\"loading-indicator\"\r\n+          >\r\n+            <div class=\"loading-spinner\"></div>\r\n+            <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n+          </div>\r\n \r\n-                        <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n-                            ${Header()}\r\n+          <!-- Insights Container -->\r\n+          <div\r\n+            class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\"\r\n+            id=\"insights-container\"\r\n+            style=\"bottom: 0;\"\r\n+          >\r\n+            <!-- Drag Handle for mobile -->\r\n+            <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n+              <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n+            </div>\r\n \r\n-                            <!-- Main Content -->\r\n-                            <div class=\"flex-1 flex flex-col min-h-0 mt-3\">\r\n-                                ${ConsumptionChart(trendData)}\r\n+            <div\r\n+              class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\"\r\n+            >\r\n+              ${Header()}\r\n \r\n-                                <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n-                                    ${MetricsCard({\r\n-                                        type: 'bill',\r\n-                                        title: 'Current Bill',\r\n-                                        value: formatCurrency(this.billData.amount),\r\n-                                        badge: `Due in ${calculateDueDays(this.billData.dueDate)} days`,\r\n-                                        progress: this.calculateBillProgress()\r\n-                                    })}\r\n+              <!-- Main Content -->\r\n+              <div class=\"flex-1 flex flex-col min-h-0 mt-3\">\r\n+                ${ConsumptionChart(trendData)}\r\n \r\n-                                    ${MetricsCard({\r\n-                                        type: 'consumption',\r\n-                                        title: 'Units Consumed',\r\n-                                        value: `${this.billData.unitsConsumed} kWh`,\r\n-                                        badge: `${this.calculateEfficiency()} efficiency`,\r\n-                                        subtitle: `Rate: ${formatCurrency(this.billData.ratePerUnit)}/kWh`\r\n-                                    })}\r\n-                                </div>\r\n+                <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n+                  ${MetricsCard({\r\n+                    type: \"bill\",\r\n+                    title: \"Current Bill\",\r\n+                    value: formatCurrency(this.billData.amount),\r\n+                    badge: `Due in ${calculateDueDays(\r\n+                      this.billData.dueDate\r\n+                    )} days`,\r\n+                    progress: this.calculateBillProgress(),\r\n+                  })}\r\n+                  ${MetricsCard({\r\n+                    type: \"consumption\",\r\n+                    title: \"Units Consumed\",\r\n+                    value: `${this.billData.unitsConsumed} kWh`,\r\n+                    badge: `${this.calculateEfficiency()} efficiency`,\r\n+                    subtitle: `Rate: ${formatCurrency(\r\n+                      this.billData.ratePerUnit\r\n+                    )}/kWh`,\r\n+                  })}\r\n+                </div>\r\n \r\n-                                ${SolarQuoteCard()}\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n\\ No newline at end of file\n+                ${SolarQuoteCard()}\r\n+              </div>\r\n             </div>\r\n-        `;\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    `;\r\n \r\n-        render(template, app);\r\n-        this.afterRender();\r\n+    render(template, app);\r\n+    this.afterRender();\r\n+  }\r\n+\r\n+  afterRender() {\r\n+    requestAnimationFrame(() => {\r\n+      if (this.isMobileDevice()) {\r\n+        initializeMobileInteractions(\r\n+          document.getElementById(\"insights-container\")\r\n+        );\r\n+      }\r\n+      this.initializeCharts();\r\n+      this.initializeCountUps();\r\n+      this.startAnimation();\r\n+    });\r\n+  }\r\n+\r\n+  initializeCharts() {\r\n+    const chartCanvas = document.getElementById(\"consumption-trend-chart\");\r\n+    if (!chartCanvas) {\r\n+      console.error(\"Chart canvas not found\");\r\n+      return;\r\n     }\r\n \r\n-    afterRender() {\r\n-        requestAnimationFrame(() => {\r\n-            if (this.isMobileDevice()) {\r\n-                initializeMobileInteractions(document.getElementById('insights-container'));\r\n-            }\r\n-            this.initializeCharts();\r\n-            this.initializeCountUps();\r\n-            this.startAnimation();\r\n-        });\r\n+    const ctx = chartCanvas.getContext(\"2d\");\r\n+    const isMobile = this.isMobileDevice();\r\n+\r\n+    if (this.charts.consumption) {\r\n+      this.charts.consumption.destroy();\r\n     }\r\n \r\n-    initializeCharts() {\r\n-        const chartCanvas = document.getElementById('consumption-trend-chart');\r\n-        if (!chartCanvas) {\r\n-            console.error('Chart canvas not found');\r\n-            return;\r\n-        }\r\n+    this.charts.consumption = initializeConsumptionChart(\r\n+      ctx,\r\n+      this.generateTrendData(),\r\n+      isMobile\r\n+    );\r\n+  }\r\n \r\n-        const ctx = chartCanvas.getContext('2d');\r\n-        const isMobile = this.isMobileDevice();\r\n-        \r\n-        if (this.charts.consumption) {\r\n-            this.charts.consumption.destroy();\r\n+  initializeCountUps() {\r\n+    const countUpOptions = {\r\n+      duration: 2,\r\n+      useEasing: true,\r\n+      useGrouping: true,\r\n+    };\r\n+\r\n+    this.countUps = {\r\n+      billAmount: new CountUp(\"bill-amount\", this.billData.amount, {\r\n+        ...countUpOptions,\r\n+        prefix: \"PKR \",\r\n+        decimalPlaces: 0,\r\n+      }),\r\n+      unitsConsumed: new CountUp(\r\n+        \"units-consumed\",\r\n+        this.billData.unitsConsumed,\r\n+        {\r\n+          ...countUpOptions,\r\n+          suffix: \" kWh\",\r\n+          decimalPlaces: 0,\r\n         }\r\n+      ),\r\n+    };\r\n+  }\r\n \r\n-        this.charts.consumption = initializeConsumptionChart(ctx, this.generateTrendData(), isMobile);\r\n-    }\r\n+  startCountUps() {\r\n+    Object.values(this.countUps).forEach((counter) => {\r\n+      if (counter && !counter.error) {\r\n+        counter.start();\r\n+      }\r\n+    });\r\n+  }\r\n \r\n-    initializeCountUps() {\r\n-        const countUpOptions = {\r\n-            duration: 2,\r\n-            useEasing: true,\r\n-            useGrouping: true,\r\n-        };\r\n+  attachEventListeners() {\r\n+    // Existing code...\r\n \r\n-        this.countUps = {\r\n-            billAmount: new CountUp('bill-amount', this.billData.amount, {\r\n-                ...countUpOptions,\r\n-                prefix: 'PKR ',\r\n-                decimalPlaces: 0,\r\n-            }),\r\n-            unitsConsumed: new CountUp('units-consumed', this.billData.unitsConsumed, {\r\n-                ...countUpOptions,\r\n-                suffix: ' kWh',\r\n-                decimalPlaces: 0,\r\n-            }),\r\n-        };\r\n+    // Add event listener for the quote button\r\n+    const quoteButton = document.getElementById(\"proceed-to-quote\");\r\n+    if (quoteButton) {\r\n+      quoteButton.addEventListener(\"click\", () => {\r\n+        window.router.push(\"/quote\");\r\n+      });\r\n     }\r\n+  }\r\n \r\n-    startCountUps() {\r\n-        Object.values(this.countUps).forEach(counter => {\r\n-            if (counter && !counter.error) {\r\n-                counter.start();\r\n-            }\r\n-        });\r\n-    }\r\n+  async startAnimation() {\r\n+    const elements = {\r\n+      container: document.getElementById(\"quote-result-page\"),\r\n+      billPreview: document.getElementById(\"bill-preview-container\"),\r\n+      loadingIndicator: document.getElementById(\"loading-indicator\"),\r\n+      header: document.getElementById(\"insights-header\"),\r\n+      progress: document.getElementById(\"progress-tracker\"),\r\n+      consumption: document.getElementById(\"consumption-card\"),\r\n+      metrics: document.querySelectorAll(\".consumption-metric\"),\r\n+      nextSteps: document.getElementById(\"next-steps-card\"),\r\n+    };\r\n \r\n-    async startAnimation() {\r\n-        const elements = {\r\n-            container: document.getElementById('quote-result-page'),\r\n-            billPreview: document.getElementById('bill-preview-container'),\r\n-            loadingIndicator: document.getElementById('loading-indicator'),\r\n-            header: document.getElementById('insights-header'),\r\n-            progress: document.getElementById('progress-tracker'),\r\n-            consumption: document.getElementById('consumption-card'),\r\n-            metrics: document.querySelectorAll('.consumption-metric'),\r\n-            nextSteps: document.getElementById('next-steps-card')\r\n-        };\r\n+    // Initial setup\r\n+    elements.container.classList.remove(\"opacity-0\");\r\n \r\n-        // Initial setup\r\n-        elements.container.classList.remove('opacity-0');\r\n+    const timeline = gsap.timeline({\r\n+      defaults: { duration: 0.6, ease: \"power2.out\" },\r\n+    });\r\n \r\n-        const timeline = gsap.timeline({\r\n-            defaults: { duration: 0.6, ease: 'power2.out' }\r\n-        });\r\n+    // Animate bill preview\r\n+    timeline.to(elements.billPreview, {\r\n+      opacity: 1,\r\n+      y: 0,\r\n+    });\r\n \r\n-        // Animate bill preview\r\n-        timeline.to(elements.billPreview, {\r\n-            opacity: 1,\r\n-            y: 0\r\n-        });\r\n+    // Show and hide loading indicator\r\n+    timeline\r\n+      .to(elements.loadingIndicator, {\r\n+        opacity: 1,\r\n+        scale: 1,\r\n+        duration: 0.5,\r\n+      })\r\n+      .to(elements.loadingIndicator, {\r\n+        opacity: 0,\r\n+        scale: 0.5,\r\n+        delay: 0.5,\r\n+      });\r\n \r\n-        // Show and hide loading indicator\r\n-        timeline.to(elements.loadingIndicator, {\r\n-            opacity: 1,\r\n-            scale: 1,\r\n-            duration: 0.5\r\n-        })\r\n-        .to(elements.loadingIndicator, {\r\n-            opacity: 0,\r\n-            scale: 0.5,\r\n-            delay: 0.5\r\n-        });\r\n+    // Animate insights elements\r\n+    timeline\r\n+      .to([elements.header, elements.progress], {\r\n+        opacity: 1,\r\n+        y: 0,\r\n+        stagger: 0.1,\r\n+      })\r\n+      .to(elements.consumption, {\r\n+        opacity: 1,\r\n+        y: 0,\r\n+      })\r\n+      .to(elements.metrics, {\r\n+        opacity: 1,\r\n+        y: 0,\r\n+        stagger: 0.1,\r\n+        onComplete: () => this.startCountUps(),\r\n+      })\r\n+      .to(elements.nextSteps, {\r\n+        opacity: 1,\r\n+        y: 0,\r\n+      });\r\n+  }\r\n \r\n-        // Animate insights elements\r\n-        timeline.to([elements.header, elements.progress], {\r\n-            opacity: 1,\r\n-            y: 0,\r\n-            stagger: 0.1\r\n-        })\r\n-        .to(elements.consumption, {\r\n-            opacity: 1,\r\n-            y: 0\r\n-        })\r\n-        .to(elements.metrics, {\r\n-            opacity: 1,\r\n-            y: 0,\r\n-            stagger: 0.1,\r\n-            onComplete: () => this.startCountUps()\r\n-        })\r\n-        .to(elements.nextSteps, {\r\n-            opacity: 1,\r\n-            y: 0\r\n-        });\r\n-    }\r\n+  handleResize() {\r\n+    clearTimeout(this.resizeTimeout);\r\n+    this.resizeTimeout = setTimeout(() => {\r\n+      if (this.charts.consumption) {\r\n+        this.charts.consumption.resize();\r\n+      }\r\n+    }, 250);\r\n+  }\r\n \r\n-    handleResize() {\r\n-        clearTimeout(this.resizeTimeout);\r\n-        this.resizeTimeout = setTimeout(() => {\r\n-            if (this.charts.consumption) {\r\n-                this.charts.consumption.resize();\r\n-            }\r\n-        }, 250);\r\n+  destroy() {\r\n+    window.removeEventListener(\"resize\", this.handleResize);\r\n+    if (this.charts.consumption) {\r\n+      this.charts.consumption.destroy();\r\n     }\r\n-\r\n-    destroy() {\r\n-        window.removeEventListener('resize', this.handleResize);\r\n-        if (this.charts.consumption) {\r\n-            this.charts.consumption.destroy();\r\n-        }\r\n-    }\r\n-}\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1731690607492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,18 +170,17 @@\n   }\r\n \r\n   afterRender() {\r\n     requestAnimationFrame(() => {\r\n-      if (this.isMobileDevice()) {\r\n-        initializeMobileInteractions(\r\n-          document.getElementById(\"insights-container\")\r\n-        );\r\n-      }\r\n-      this.initializeCharts();\r\n-      this.initializeCountUps();\r\n-      this.startAnimation();\r\n+        if (this.isMobileDevice()) {\r\n+            initializeMobileInteractions(document.getElementById('insights-container'));\r\n+        }\r\n+        this.initializeCharts();\r\n+        this.initializeCountUps();\r\n+        this.startAnimation();\r\n+        this.attachEventListeners(); \r\n     });\r\n-  }\r\n+}\r\n \r\n   initializeCharts() {\r\n     const chartCanvas = document.getElementById(\"consumption-trend-chart\");\r\n     if (!chartCanvas) {\r\n"
                },
                {
                    "date": 1731690797017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,19 +168,37 @@\n     render(template, app);\r\n     this.afterRender();\r\n   }\r\n \r\n+  attachEventListeners() {\r\n+    // Add logging to verify the button exists\r\n+    const quoteButton = document.getElementById(\"proceed-to-quote\");\r\n+    console.log(\"Quote button found:\", quoteButton);\r\n+\r\n+    if (quoteButton) {\r\n+      console.log(\"Adding click event listener to quote button\");\r\n+      quoteButton.addEventListener(\"click\", () => {\r\n+        console.log(\"Quote button clicked\");\r\n+        window.router.push(\"/quote\");\r\n+      });\r\n+    } else {\r\n+      console.error(\"Quote button not found in DOM\");\r\n+    }\r\n+  }\r\n+\r\n   afterRender() {\r\n     requestAnimationFrame(() => {\r\n-        if (this.isMobileDevice()) {\r\n-            initializeMobileInteractions(document.getElementById('insights-container'));\r\n-        }\r\n-        this.initializeCharts();\r\n-        this.initializeCountUps();\r\n-        this.startAnimation();\r\n-        this.attachEventListeners(); \r\n+      if (this.isMobileDevice()) {\r\n+        initializeMobileInteractions(\r\n+          document.getElementById(\"insights-container\")\r\n+        );\r\n+      }\r\n+      this.initializeCharts();\r\n+      this.initializeCountUps();\r\n+      this.startAnimation();\r\n+      this.attachEventListeners();\r\n     });\r\n-}\r\n+  }\r\n \r\n   initializeCharts() {\r\n     const chartCanvas = document.getElementById(\"consumption-trend-chart\");\r\n     if (!chartCanvas) {\r\n@@ -234,20 +252,8 @@\n       }\r\n     });\r\n   }\r\n \r\n-  attachEventListeners() {\r\n-    // Existing code...\r\n-\r\n-    // Add event listener for the quote button\r\n-    const quoteButton = document.getElementById(\"proceed-to-quote\");\r\n-    if (quoteButton) {\r\n-      quoteButton.addEventListener(\"click\", () => {\r\n-        window.router.push(\"/quote\");\r\n-      });\r\n-    }\r\n-  }\r\n-\r\n   async startAnimation() {\r\n     const elements = {\r\n       container: document.getElementById(\"quote-result-page\"),\r\n       billPreview: document.getElementById(\"bill-preview-container\"),\r\n"
                },
                {
                    "date": 1731690805692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,8 +194,11 @@\n       }\r\n       this.initializeCharts();\r\n       this.initializeCountUps();\r\n       this.startAnimation();\r\n+\r\n+      // Add logging to verify afterRender is called\r\n+      console.log(\"afterRender called, attaching event listeners\");\r\n       this.attachEventListeners();\r\n     });\r\n   }\r\n \r\n"
                },
                {
                    "date": 1731699170292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,9 @@\n-// src/js/components/BillReview/BillReviewPage.js\r\n-import { html, render } from \"lit-html\";\r\n-import { getBillData } from \"../../store/solarSizingState.js\";\r\n-import { CountUp } from \"countup.js\"; // Add this import\r\n-import Chart from \"chart.js/auto\"; // Add this if not already imported\r\n-import { gsap } from \"gsap\"; // Add this if not already imported\r\n-import { initializeMobileInteractions } from \"./utils/MobileInteractions\";\r\n-import { initializeConsumptionChart } from \"./utils/chartconfig\";\r\n-import {\r\n-  formatCurrency,\r\n-  formatChange,\r\n-  calculateDueDays,\r\n-} from \"./utils/formatters\";\r\n-import { Header } from \"./components/Header\";\r\n-import { ConsumptionChart } from \"./components/ConsumptionChart\";\r\n-import { MetricsCard } from \"./components/MetricsCard\";\r\n-import { SolarQuoteCard } from \"./components/SolarQuoteCard\";\r\n-import \"./styles/base.css\";\r\n+// BillReviewPage.js - Part 1\r\n+import { gsap } from \"gsap\";\r\n+import { getBillData } from \"../store/solarSizingState.js\";\r\n+import Chart from \"chart.js/auto\";\r\n+import { CountUp } from \"countup.js\";\r\n \r\n export class BillReviewPage {\r\n   constructor() {\r\n     this.billData = getBillData();\r\n@@ -28,203 +15,553 @@\n     this.handleResize = this.handleResize.bind(this);\r\n     window.addEventListener(\"resize\", this.handleResize);\r\n   }\r\n \r\n-  isMobileDevice() {\r\n-    return window.innerWidth < 768;\r\n-  }\r\n+  render() {\r\n+    const app = document.getElementById(\"app\");\r\n+    app.innerHTML = `\r\n+            <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" id=\"quote-result-page\">\r\n+                <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n+                    <!-- Bill Preview Side -->\r\n+                    <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" id=\"bill-preview-container\">\r\n+                        <div id=\"bill-preview\" class=\"h-full\"></div>\r\n+                    </div>\r\n \r\n-  calculateBillProgress() {\r\n-    const daysInMonth = 30;\r\n-    const today = new Date();\r\n-    const billDate = new Date(this.billData.issueDate);\r\n-    const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n-    return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n-  }\r\n+                    <!-- Loading Indicator -->\r\n+                    <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" id=\"loading-indicator\">\r\n+                        <div class=\"loading-spinner\"></div>\r\n+                        <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n+                    </div>\r\n \r\n-  calculateEfficiency() {\r\n-    const avgConsumption = 500; // Example average consumption\r\n-    return this.billData.unitsConsumed <= avgConsumption ? \"High\" : \"Low\";\r\n-  }\r\n+                    <!-- Insights Container -->\r\n+                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n+                         id=\"insights-container\" style=\"bottom: 0;\">\r\n+                        <!-- Drag Handle for mobile -->\r\n+                        <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n+                            <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n+                        </div>\r\n \r\n-  generateTrendData() {\r\n-    const currentMonth = new Date().getMonth();\r\n-    const months = [\r\n-      \"Jan\",\r\n-      \"Feb\",\r\n-      \"Mar\",\r\n-      \"Apr\",\r\n-      \"May\",\r\n-      \"Jun\",\r\n-      \"Jul\",\r\n-      \"Aug\",\r\n-      \"Sep\",\r\n-      \"Oct\",\r\n-      \"Nov\",\r\n-      \"Dec\",\r\n-    ];\r\n-    const values = [];\r\n-    const labels = [];\r\n+                        <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n+                            <!-- Content will be added by renderInsights() -->\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            </div>\r\n+        `;\r\n \r\n-    for (let i = 5; i >= 0; i--) {\r\n-      let monthIndex = (currentMonth - i + 12) % 12;\r\n-      labels.push(months[monthIndex]);\r\n-      let variation = this.billData.unitsConsumed * (0.8 + Math.random() * 0.4);\r\n-      values.push(Math.round(variation));\r\n+    const isMobile = this.isMobileDevice();\r\n+\r\n+    if (isMobile) {\r\n+      this.initializeMobileInteractions();\r\n     }\r\n \r\n-    return {\r\n-      labels,\r\n-      values,\r\n-      change: this.calculateTrendChange(values),\r\n-    };\r\n-  }\r\n+    this.attachBaseStyles();\r\n \r\n-  calculateTrendChange(values) {\r\n-    if (values.length < 2) return 0;\r\n-    const lastTwo = values.slice(-2);\r\n-    const change = ((lastTwo[1] - lastTwo[0]) / lastTwo[0]) * 100;\r\n-    return formatChange(change);\r\n-  }\r\n+    // Use requestAnimationFrame to ensure styles are applied before starting\r\n+    requestAnimationFrame(() => {\r\n+      requestAnimationFrame(() => {\r\n+        const container = document.getElementById(\"quote-result-page\");\r\n+        if (container) {\r\n+          container.classList.remove(\"opacity-0\");\r\n+        }\r\n \r\n-  render() {\r\n-    const app = document.getElementById(\"app\");\r\n+        this.renderBillPreview();\r\n+        this.renderInsights();\r\n+        this.startAnimation().catch((error) => {\r\n+          console.error(\"Animation failed:\", error);\r\n+        });\r\n+      });\r\n+    });\r\n+  } // BillReviewPage.js - Part 2\r\n+\r\n+  renderInsights() {\r\n+    const insightsContainer = document.querySelector(\r\n+      \"#insights-container .hide-scrollbar\"\r\n+    );\r\n+    if (!insightsContainer) return;\r\n+\r\n     const trendData = this.generateTrendData();\r\n \r\n-    const template = html`\r\n-      <div\r\n-        class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\"\r\n-        id=\"quote-result-page\"\r\n-      >\r\n-        <div\r\n-          class=\"h-full w-full flex flex-col md:flex-row relative\"\r\n-          id=\"main-content\"\r\n-        >\r\n-          <!-- Bill Preview Side -->\r\n-          <div\r\n-            class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\"\r\n-            id=\"bill-preview-container\"\r\n-          >\r\n-            <div id=\"bill-preview\" class=\"h-full\"></div>\r\n+    insightsContainer.innerHTML = `\r\n+          <!-- Header Section -->\r\n+          <div class=\"opacity-0\" id=\"insights-header\">\r\n+              <div class=\"flex items-center gap-3\">\r\n+                  <div class=\"flex-shrink-0\">\r\n+                      <div class=\"w-8 h-8 rounded-xl bg-gradient-to-r from-emerald-500 to-emerald-600 flex items-center justify-center\">\r\n+                          <svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                  d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n+                          </svg>\r\n+                      </div>\r\n+                  </div>\r\n+                  <div>\r\n+                      <h2 class=\"text-base sm:text-lg font-bold text-gray-900\">Bill Analysis</h2>\r\n+                      <p class=\"text-xs sm:text-sm text-gray-500\">Understanding your consumption</p>\r\n+                  </div>\r\n+              </div>\r\n           </div>\r\n \r\n-          <!-- Loading Indicator -->\r\n-          <div\r\n-            class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\"\r\n-            id=\"loading-indicator\"\r\n-          >\r\n-            <div class=\"loading-spinner\"></div>\r\n-            <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n+          <!-- Progress Tracker -->\r\n+          <div class=\"bg-white/70 backdrop-blur rounded-lg shadow-sm p-3 mt-4 opacity-0\" id=\"progress-tracker\">\r\n+              <div class=\"flex justify-between items-center\">\r\n+                  <div class=\"flex items-center gap-3\">\r\n+                      <div class=\"w-8 h-8 rounded-full bg-emerald-600 flex items-center justify-center text-white font-semibold text-sm\">1</div>\r\n+                      <div>\r\n+                          <p class=\"font-semibold text-gray-900 text-sm\">Bill Review</p>\r\n+                          <p class=\"text-xs text-gray-500\">Analyzing patterns</p>\r\n+                      </div>\r\n+                  </div>\r\n+                  <div class=\"h-0.5 w-12 bg-gray-200\"></div>\r\n+                  <div class=\"flex items-center gap-3\">\r\n+                      <div class=\"w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center text-gray-400 font-semibold text-sm\">2</div>\r\n+                      <div>\r\n+                          <p class=\"font-semibold text-gray-400 text-sm\">Solar Quote</p>\r\n+                          <p class=\"text-xs text-gray-400\">Up next</p>\r\n+                      </div>\r\n+                  </div>\r\n+              </div>\r\n           </div>\r\n \r\n-          <!-- Insights Container -->\r\n-          <div\r\n-            class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\"\r\n-            id=\"insights-container\"\r\n-            style=\"bottom: 0;\"\r\n-          >\r\n-            <!-- Drag Handle for mobile -->\r\n-            <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n-              <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n-            </div>\r\n+          <!-- Consumption Chart Card -->\r\n+          <div class=\"bg-white rounded-lg shadow-sm p-4 mt-3 opacity-0\" id=\"consumption-card\">\r\n+              <div class=\"flex justify-between items-center mb-4\">\r\n+                  <h3 class=\"text-sm font-semibold text-gray-900\">Consumption Analysis</h3>\r\n+                  <div class=\"px-2 py-1 bg-emerald-50 text-emerald-600 rounded-full text-xs font-medium\">\r\n+                      ${this.formatChange(trendData)}% vs last month\r\n+                  </div>\r\n+              </div>\r\n+              <div class=\"relative h-[200px] sm:h-[250px] w-full\">\r\n+                  <canvas id=\"consumption-trend-chart\"></canvas>\r\n+              </div>\r\n+          </div>\r\n \r\n-            <div\r\n-              class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\"\r\n-            >\r\n-              ${Header()}\r\n+          <!-- Metrics Cards -->\r\n+          <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n+              <!-- Current Bill Card -->\r\n+              <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n+                  <div class=\"flex justify-between items-center mb-2\">\r\n+                      <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n+                          <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                  d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n+                          </svg>\r\n+                      </div>\r\n+                      <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">\r\n+                          Due in ${this.calculateDueDays()} days\r\n+                      </span>\r\n+                  </div>\r\n+                  <p class=\"text-xs text-gray-500 mb-1\">Current Bill</p>\r\n+                  <p class=\"text-lg font-bold text-gray-900\" id=\"bill-amount\">0</p>\r\n+                  <div class=\"mt-2 h-1 bg-gray-100 rounded\">\r\n+                      <div class=\"h-full bg-emerald-500 rounded\" style=\"width: ${this.calculateBillProgress()}%\"></div>\r\n+                  </div>\r\n+              </div>\r\n \r\n-              <!-- Main Content -->\r\n-              <div class=\"flex-1 flex flex-col min-h-0 mt-3\">\r\n-                ${ConsumptionChart(trendData)}\r\n+              <!-- Units Consumed Card -->\r\n+              <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n+                  <div class=\"flex justify-between items-center mb-2\">\r\n+                      <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n+                          <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                  d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n+                          </svg>\r\n+                      </div>\r\n+                      <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">\r\n+                          ${this.calculateEfficiency()} efficiency\r\n+                      </span>\r\n+                  </div>\r\n+                  <p class=\"text-xs text-gray-500 mb-1\">Units Consumed</p>\r\n+                  <p class=\"text-lg font-bold text-gray-900\" id=\"units-consumed\">0</p>\r\n+                  <p class=\"text-xs text-gray-500 mt-2\">\r\n+                      Rate: ${this.formatCurrency(\r\n+                        this.billData.ratePerUnit\r\n+                      )}/kWh\r\n+                  </p>\r\n+              </div>\r\n+          </div>\r\n \r\n-                <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n-                  ${MetricsCard({\r\n-                    type: \"bill\",\r\n-                    title: \"Current Bill\",\r\n-                    value: formatCurrency(this.billData.amount),\r\n-                    badge: `Due in ${calculateDueDays(\r\n-                      this.billData.dueDate\r\n-                    )} days`,\r\n-                    progress: this.calculateBillProgress(),\r\n-                  })}\r\n-                  ${MetricsCard({\r\n-                    type: \"consumption\",\r\n-                    title: \"Units Consumed\",\r\n-                    value: `${this.billData.unitsConsumed} kWh`,\r\n-                    badge: `${this.calculateEfficiency()} efficiency`,\r\n-                    subtitle: `Rate: ${formatCurrency(\r\n-                      this.billData.ratePerUnit\r\n-                    )}/kWh`,\r\n-                  })}\r\n-                </div>\r\n+          <!-- Solar Quote Card -->\r\n+          <div class=\"mt-3 mb-4 md:mb-6\" id=\"next-steps-card-container\">\r\n+              <div class=\"bg-emerald-600 rounded-lg shadow-sm p-4 opacity-0\" id=\"next-steps-card\">\r\n+                  <div class=\"relative z-10\">\r\n+                      <div class=\"flex items-center gap-3 mb-4\">\r\n+                          <div class=\"w-8 h-8 rounded-lg bg-white/10 flex items-center justify-center\">\r\n+                              <svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                      d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n+                              </svg>\r\n+                          </div>\r\n+                          <h3 class=\"text-lg font-semibold text-white\">Ready For Your Solar Quote?</h3>\r\n+                      </div>\r\n+                      \r\n+                      <p class=\"text-sm text-white/90 mb-4\">\r\n+                          We've analyzed your consumption patterns and can now provide you with a personalized solar solution. \r\n+                          Find out how much you could save!\r\n+                      </p>\r\n \r\n-                ${SolarQuoteCard()}\r\n+                      <button id=\"proceed-to-quote\" \r\n+                              class=\"w-full bg-white hover:bg-white/90 text-emerald-700 px-5 py-2.5 rounded-xl font-medium\r\n+                                     transition-all duration-300 shadow-sm hover:shadow-md\r\n+                                     flex items-center justify-center gap-2 group\">\r\n+                          <span>Generate My Quote</span>\r\n+                          <svg class=\"w-4 h-4 transform group-hover:translate-x-1 transition-transform\" \r\n+                               fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                    d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n+                          </svg>\r\n+                      </button>\r\n+                  </div>\r\n               </div>\r\n-            </div>\r\n           </div>\r\n-        </div>\r\n-      </div>\r\n-    `;\r\n+      `;\r\n \r\n-    render(template, app);\r\n-    this.afterRender();\r\n+    this.initializeCharts(trendData);\r\n+    this.initCountUps();\r\n+    this.attachEventListeners();\r\n   }\r\n \r\n-  attachEventListeners() {\r\n-    // Add logging to verify the button exists\r\n-    const quoteButton = document.getElementById(\"proceed-to-quote\");\r\n-    console.log(\"Quote button found:\", quoteButton);\r\n+  // BillReviewPage.js - Part 3 (Animations)\r\n \r\n-    if (quoteButton) {\r\n-      console.log(\"Adding click event listener to quote button\");\r\n-      quoteButton.addEventListener(\"click\", () => {\r\n-        console.log(\"Quote button clicked\");\r\n-        window.router.push(\"/quote\");\r\n+  async startAnimation() {\r\n+    if (this.error) {\r\n+      this.showError();\r\n+      return;\r\n+    }\r\n+\r\n+    const elements = {\r\n+      billPreviewContainer: document.getElementById(\"bill-preview-container\"),\r\n+      insightsContainer: document.getElementById(\"insights-container\"),\r\n+      loadingIndicator: document.getElementById(\"loading-indicator\"),\r\n+      header: document.getElementById(\"insights-header\"),\r\n+      progress: document.getElementById(\"progress-tracker\"),\r\n+      consumption: document.getElementById(\"consumption-card\"),\r\n+      metrics: document.querySelectorAll(\".consumption-metric\"),\r\n+      nextSteps: document.getElementById(\"next-steps-card\"),\r\n+    };\r\n+\r\n+    // Initial setup\r\n+    const isMobile = this.isMobileDevice();\r\n+\r\n+    // Reset initial states\r\n+    gsap.set([elements.billPreviewContainer, elements.loadingIndicator], {\r\n+      opacity: 0,\r\n+    });\r\n+\r\n+    if (isMobile) {\r\n+      // Mobile-specific animation sequence\r\n+      gsap.set(elements.billPreviewContainer, {\r\n+        y: -20,\r\n       });\r\n+\r\n+      gsap.set(elements.insightsContainer, {\r\n+        y: \"100%\",\r\n+        visibility: \"visible\",\r\n+        opacity: 1,\r\n+      });\r\n+\r\n+      const timeline = gsap.timeline({\r\n+        defaults: { duration: 0.8, ease: \"power2.out\" },\r\n+      });\r\n+\r\n+      await timeline\r\n+        .to(elements.billPreviewContainer, {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+          duration: 1,\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+          opacity: 1,\r\n+          scale: 1,\r\n+          duration: 0.5,\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+          opacity: 0,\r\n+          scale: 0.5,\r\n+          delay: 0.5,\r\n+        })\r\n+        .to(elements.insightsContainer, {\r\n+          y: \"0%\",\r\n+          duration: 0.8,\r\n+          ease: \"power4.out\",\r\n+          onComplete: () => {\r\n+            requestAnimationFrame(() => {\r\n+              this.startInsightAnimations(elements);\r\n+            });\r\n+          },\r\n+        });\r\n     } else {\r\n-      console.error(\"Quote button not found in DOM\");\r\n+      // Desktop animation sequence\r\n+      gsap.set(elements.billPreviewContainer, {\r\n+        scale: 0.9,\r\n+        position: \"absolute\",\r\n+        left: \"50%\",\r\n+        top: \"50%\",\r\n+        xPercent: -50,\r\n+        yPercent: -50,\r\n+        width: \"47.5%\",\r\n+      });\r\n+\r\n+      gsap.set(elements.insightsContainer, {\r\n+        opacity: 0,\r\n+        visibility: \"hidden\",\r\n+      });\r\n+\r\n+      const timeline = gsap.timeline({\r\n+        defaults: { duration: 0.8, ease: \"power2.out\" },\r\n+      });\r\n+\r\n+      await timeline\r\n+        .to(elements.billPreviewContainer, {\r\n+          opacity: 1,\r\n+          scale: 1,\r\n+          duration: 1,\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+          opacity: 1,\r\n+          scale: 1,\r\n+          duration: 0.5,\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+          opacity: 0,\r\n+          scale: 0.5,\r\n+          delay: 1,\r\n+        })\r\n+        .to(\r\n+          elements.billPreviewContainer,\r\n+          {\r\n+            left: \"0%\",\r\n+            top: \"0%\",\r\n+            xPercent: 0,\r\n+            yPercent: 0,\r\n+            width: \"50%\",\r\n+            position: \"relative\",\r\n+          },\r\n+          \"-=0.3\"\r\n+        )\r\n+        .add(() => {\r\n+          elements.insightsContainer.style.visibility = \"visible\";\r\n+        })\r\n+        .to(elements.insightsContainer, {\r\n+          opacity: 1,\r\n+          duration: 0.5,\r\n+          onComplete: () => {\r\n+            requestAnimationFrame(() => {\r\n+              this.startInsightAnimations(elements);\r\n+            });\r\n+          },\r\n+        });\r\n     }\r\n   }\r\n \r\n-  afterRender() {\r\n-    requestAnimationFrame(() => {\r\n-      if (this.isMobileDevice()) {\r\n-        initializeMobileInteractions(\r\n-          document.getElementById(\"insights-container\")\r\n-        );\r\n-      }\r\n-      this.initializeCharts();\r\n-      this.initializeCountUps();\r\n-      this.startAnimation();\r\n+  startInsightAnimations(elements) {\r\n+    // Initialize counters first\r\n+    this.initCountUps();\r\n \r\n-      // Add logging to verify afterRender is called\r\n-      console.log(\"afterRender called, attaching event listeners\");\r\n-      this.attachEventListeners();\r\n+    const timeline = gsap.timeline({\r\n+      defaults: { duration: 0.6, ease: \"power2.out\" },\r\n     });\r\n+\r\n+    timeline\r\n+      .to(elements.header, {\r\n+        opacity: 1,\r\n+        y: 0,\r\n+      })\r\n+      .to(\r\n+        elements.progress,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+        },\r\n+        \"-=0.4\"\r\n+      )\r\n+      .to(\r\n+        elements.consumption,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+        },\r\n+        \"-=0.3\"\r\n+      )\r\n+      .to(\r\n+        elements.metrics,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+          stagger: 0.1,\r\n+          onComplete: () => {\r\n+            this.startCountUps();\r\n+          },\r\n+        },\r\n+        \"-=0.2\"\r\n+      )\r\n+      .to(\r\n+        elements.nextSteps,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+        },\r\n+        \"-=0.2\"\r\n+      );\r\n   }\r\n+  // BillReviewPage.js - Part 4 (Chart Configuration)\r\n \r\n-  initializeCharts() {\r\n-    const chartCanvas = document.getElementById(\"consumption-trend-chart\");\r\n-    if (!chartCanvas) {\r\n-      console.error(\"Chart canvas not found\");\r\n-      return;\r\n-    }\r\n+  initializeCharts(trendData) {\r\n+    return new Promise((resolve) => {\r\n+      requestAnimationFrame(() => {\r\n+        const ctx = document.getElementById(\"consumption-trend-chart\");\r\n+        if (!ctx) {\r\n+          console.error(\"Chart canvas not found\");\r\n+          resolve();\r\n+          return;\r\n+        }\r\n \r\n-    const ctx = chartCanvas.getContext(\"2d\");\r\n-    const isMobile = this.isMobileDevice();\r\n+        // Ensure canvas is visible\r\n+        ctx.style.display = \"block\";\r\n \r\n-    if (this.charts.consumption) {\r\n-      this.charts.consumption.destroy();\r\n+        const isMobile = window.innerWidth < 640;\r\n+        const isTablet = window.innerWidth < 1024;\r\n+\r\n+        // Destroy existing chart if it exists\r\n+        if (this.charts.consumption) {\r\n+          this.charts.consumption.destroy();\r\n+        }\r\n+\r\n+        // Generate monthly data\r\n+        const monthlyData = this.generateMonthlyData();\r\n+\r\n+        // Create new chart with updated styling\r\n+        this.charts.consumption = new Chart(ctx, {\r\n+          type: \"line\",\r\n+          data: {\r\n+            labels: monthlyData.months,\r\n+            datasets: [\r\n+              {\r\n+                label: \"Consumption (kWh)\",\r\n+                data: monthlyData.values,\r\n+                borderColor: \"#059669\",\r\n+                backgroundColor: \"rgba(5, 150, 105, 0.1)\",\r\n+                tension: 0.4,\r\n+                fill: true,\r\n+                pointRadius: isMobile ? 2 : isTablet ? 3 : 4,\r\n+                pointHoverRadius: isMobile ? 4 : isTablet ? 5 : 6,\r\n+                pointBackgroundColor: \"#ffffff\",\r\n+                pointBorderColor: \"#059669\",\r\n+                pointBorderWidth: isMobile ? 1 : 2,\r\n+              },\r\n+            ],\r\n+          },\r\n+          options: {\r\n+            responsive: true,\r\n+            maintainAspectRatio: false,\r\n+            interaction: {\r\n+              mode: \"nearest\",\r\n+              intersect: false,\r\n+              axis: \"x\",\r\n+            },\r\n+            plugins: {\r\n+              legend: {\r\n+                display: false,\r\n+              },\r\n+              tooltip: {\r\n+                enabled: true,\r\n+                backgroundColor: \"white\",\r\n+                titleColor: \"#1f2937\",\r\n+                bodyColor: \"#4b5563\",\r\n+                borderColor: \"#e5e7eb\",\r\n+                borderWidth: 1,\r\n+                padding: isMobile ? 8 : 12,\r\n+                titleFont: {\r\n+                  size: isMobile ? 12 : 14,\r\n+                  weight: \"bold\",\r\n+                },\r\n+                bodyFont: {\r\n+                  size: isMobile ? 11 : 13,\r\n+                },\r\n+                displayColors: false,\r\n+                callbacks: {\r\n+                  label: function (context) {\r\n+                    return `${context.parsed.y.toLocaleString()} kWh`;\r\n+                  },\r\n+                },\r\n+              },\r\n+            },\r\n+            scales: {\r\n+              x: {\r\n+                grid: {\r\n+                  display: false,\r\n+                },\r\n+                ticks: {\r\n+                  font: {\r\n+                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n+                  },\r\n+                },\r\n+              },\r\n+              y: {\r\n+                beginAtZero: true,\r\n+                grid: {\r\n+                  color: \"rgba(0, 0, 0, 0.05)\",\r\n+                },\r\n+                ticks: {\r\n+                  font: {\r\n+                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n+                  },\r\n+                  callback: function (value) {\r\n+                    return `${value} kWh`;\r\n+                  },\r\n+                },\r\n+              },\r\n+            },\r\n+          },\r\n+        });\r\n+\r\n+        // Add animation completion handler\r\n+        this.charts.consumption.options.animation = {\r\n+          onComplete: () => {\r\n+            resolve();\r\n+          },\r\n+        };\r\n+      });\r\n+    });\r\n+  }\r\n+\r\n+  generateMonthlyData() {\r\n+    const currentMonth = new Date().getMonth();\r\n+    const months = [\r\n+      \"Jan\",\r\n+      \"Feb\",\r\n+      \"Mar\",\r\n+      \"Apr\",\r\n+      \"May\",\r\n+      \"Jun\",\r\n+      \"Jul\",\r\n+      \"Aug\",\r\n+      \"Sep\",\r\n+      \"Oct\",\r\n+      \"Nov\",\r\n+      \"Dec\",\r\n+    ];\r\n+    const baseConsumption = this.billData.unitsConsumed;\r\n+\r\n+    // Get last 6 months including current month\r\n+    const monthLabels = [];\r\n+    const consumptionValues = [];\r\n+\r\n+    for (let i = 5; i >= 0; i--) {\r\n+      let monthIndex = (currentMonth - i + 12) % 12;\r\n+      monthLabels.push(months[monthIndex]);\r\n+\r\n+      // Generate realistic variations (±20% of base consumption)\r\n+      let variation = baseConsumption * (0.8 + Math.random() * 0.4);\r\n+      consumptionValues.push(Math.round(variation));\r\n     }\r\n \r\n-    this.charts.consumption = initializeConsumptionChart(\r\n-      ctx,\r\n-      this.generateTrendData(),\r\n-      isMobile\r\n-    );\r\n+    return {\r\n+      months: monthLabels,\r\n+      values: consumptionValues,\r\n+    };\r\n   }\r\n \r\n-  initializeCountUps() {\r\n+  initCountUps() {\r\n     const countUpOptions = {\r\n       duration: 2,\r\n       useEasing: true,\r\n       useGrouping: true,\r\n@@ -254,82 +591,198 @@\n         counter.start();\r\n       }\r\n     });\r\n   }\r\n+  // BillReviewPage.js - Part 5 (Mobile Interactions & Utilities)\r\n \r\n-  async startAnimation() {\r\n-    const elements = {\r\n-      container: document.getElementById(\"quote-result-page\"),\r\n-      billPreview: document.getElementById(\"bill-preview-container\"),\r\n-      loadingIndicator: document.getElementById(\"loading-indicator\"),\r\n-      header: document.getElementById(\"insights-header\"),\r\n-      progress: document.getElementById(\"progress-tracker\"),\r\n-      consumption: document.getElementById(\"consumption-card\"),\r\n-      metrics: document.querySelectorAll(\".consumption-metric\"),\r\n-      nextSteps: document.getElementById(\"next-steps-card\"),\r\n+  initializeMobileInteractions() {\r\n+    const insightsContainer = document.getElementById(\"insights-container\");\r\n+    if (!insightsContainer) return;\r\n+\r\n+    let startY = 0;\r\n+    let currentY = 0;\r\n+    const initialHeight = \"60vh\";\r\n+    const expandedHeight = \"92vh\";\r\n+\r\n+    // Handle drag to expand/collapse\r\n+    const handleTouchStart = (e) => {\r\n+      startY = e.touches[0].clientY;\r\n+      currentY = insightsContainer.getBoundingClientRect().height;\r\n     };\r\n \r\n-    // Initial setup\r\n-    elements.container.classList.remove(\"opacity-0\");\r\n+    const handleTouchMove = (e) => {\r\n+      const deltaY = startY - e.touches[0].clientY;\r\n+      const newHeight = Math.max(\r\n+        Math.min(currentY + deltaY, window.innerHeight * 0.92),\r\n+        window.innerHeight * 0.3\r\n+      );\r\n \r\n-    const timeline = gsap.timeline({\r\n-      defaults: { duration: 0.6, ease: \"power2.out\" },\r\n-    });\r\n+      gsap.to(insightsContainer, {\r\n+        height: newHeight,\r\n+        duration: 0.1,\r\n+        ease: \"none\",\r\n+      });\r\n+    };\r\n \r\n-    // Animate bill preview\r\n-    timeline.to(elements.billPreview, {\r\n-      opacity: 1,\r\n-      y: 0,\r\n-    });\r\n+    const handleTouchEnd = () => {\r\n+      const finalHeight = insightsContainer.getBoundingClientRect().height;\r\n+      const threshold = window.innerHeight * 0.6;\r\n \r\n-    // Show and hide loading indicator\r\n-    timeline\r\n-      .to(elements.loadingIndicator, {\r\n-        opacity: 1,\r\n-        scale: 1,\r\n-        duration: 0.5,\r\n-      })\r\n-      .to(elements.loadingIndicator, {\r\n-        opacity: 0,\r\n-        scale: 0.5,\r\n-        delay: 0.5,\r\n+      gsap.to(insightsContainer, {\r\n+        height: finalHeight > threshold ? expandedHeight : initialHeight,\r\n+        duration: 0.3,\r\n+        ease: \"power2.out\",\r\n       });\r\n+    };\r\n \r\n-    // Animate insights elements\r\n-    timeline\r\n-      .to([elements.header, elements.progress], {\r\n-        opacity: 1,\r\n-        y: 0,\r\n-        stagger: 0.1,\r\n-      })\r\n-      .to(elements.consumption, {\r\n-        opacity: 1,\r\n-        y: 0,\r\n-      })\r\n-      .to(elements.metrics, {\r\n-        opacity: 1,\r\n-        y: 0,\r\n-        stagger: 0.1,\r\n-        onComplete: () => this.startCountUps(),\r\n-      })\r\n-      .to(elements.nextSteps, {\r\n-        opacity: 1,\r\n-        y: 0,\r\n+    // Add touch event listeners to drag handle\r\n+    const dragHandle = insightsContainer.querySelector(\".drag-handle\");\r\n+    if (dragHandle) {\r\n+      dragHandle.addEventListener(\"touchstart\", handleTouchStart, {\r\n+        passive: true,\r\n       });\r\n+      dragHandle.addEventListener(\"touchmove\", handleTouchMove, {\r\n+        passive: true,\r\n+      });\r\n+      dragHandle.addEventListener(\"touchend\", handleTouchEnd);\r\n+    }\r\n   }\r\n \r\n-  handleResize() {\r\n+  // Utility Methods\r\n+  isMobileDevice() {\r\n+    return window.innerWidth < 768;\r\n+  }\r\n+\r\n+  formatCurrency(value) {\r\n+    return new Intl.NumberFormat(\"en-PK\", {\r\n+      style: \"currency\",\r\n+      currency: \"PKR\",\r\n+      minimumFractionDigits: 0,\r\n+      maximumFractionDigits: 0,\r\n+    }).format(value);\r\n+  }\r\n+\r\n+  calculateDueDays() {\r\n+    if (!this.billData.dueDate) return 0;\r\n+    const dueDate = new Date(this.billData.dueDate);\r\n+    const today = new Date();\r\n+    const diffTime = Math.abs(dueDate - today);\r\n+    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n+  }\r\n+\r\n+  calculateBillProgress() {\r\n+    const daysInMonth = 30;\r\n+    const today = new Date();\r\n+    const billDate = new Date(this.billData.issueDate || today);\r\n+    const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n+    return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n+  }\r\n+\r\n+  calculateEfficiency() {\r\n+    const avgConsumption = 500; // Example average consumption\r\n+    return this.billData.unitsConsumed <= avgConsumption ? \"High\" : \"Low\";\r\n+  }\r\n+\r\n+  formatChange(trendData) {\r\n+    if (!Array.isArray(trendData)) return \"0.0\";\r\n+    const lastTwo = trendData.slice(-2);\r\n+    const change =\r\n+      ((lastTwo[1].consumption - lastTwo[0].consumption) /\r\n+        lastTwo[0].consumption) *\r\n+      100;\r\n+    return change.toFixed(1);\r\n+  }\r\n+\r\n+  handleResize = () => {\r\n     clearTimeout(this.resizeTimeout);\r\n     this.resizeTimeout = setTimeout(() => {\r\n       if (this.charts.consumption) {\r\n         this.charts.consumption.resize();\r\n       }\r\n     }, 250);\r\n+  };\r\n+\r\n+  attachEventListeners() {\r\n+    // Quote button click handler\r\n+    const quoteButton = document.getElementById(\"proceed-to-quote\");\r\n+    if (quoteButton) {\r\n+      quoteButton.addEventListener(\"click\", () => {\r\n+        window.router.push(\"/quote\");\r\n+      });\r\n+    }\r\n+\r\n+    // Window resize handler\r\n+    window.addEventListener(\"resize\", this.handleResize);\r\n   }\r\n \r\n-  destroy() {\r\n+  attachBaseStyles() {\r\n+    const style = document.createElement(\"style\");\r\n+    style.textContent = `\r\n+      /* Base styles */\r\n+      .hide-scrollbar::-webkit-scrollbar {\r\n+          display: none;\r\n+      }\r\n+      \r\n+      .hide-scrollbar {\r\n+          -ms-overflow-style: none;\r\n+          scrollbar-width: none;\r\n+      }\r\n+\r\n+      .loading-spinner {\r\n+          width: 40px;\r\n+          height: 40px;\r\n+          border: 3px solid rgba(16, 185, 129, 0.1);\r\n+          border-radius: 50%;\r\n+          border-top-color: #10b981;\r\n+          animation: spin 1s ease-in-out infinite;\r\n+      }\r\n+\r\n+      @keyframes spin {\r\n+          to { transform: rotate(360deg); }\r\n+      }\r\n+\r\n+      /* Mobile drag handle styles */\r\n+      .drag-handle {\r\n+          cursor: grab;\r\n+          touch-action: none;\r\n+      }\r\n+\r\n+      .drag-handle:active {\r\n+          cursor: grabbing;\r\n+      }\r\n+\r\n+      /* Animations */\r\n+      .fade-in {\r\n+          opacity: 0;\r\n+          transform: translateY(10px);\r\n+          transition: opacity 0.3s ease, transform 0.3s ease;\r\n+      }\r\n+\r\n+      .fade-in.visible {\r\n+          opacity: 1;\r\n+          transform: translateY(0);\r\n+      }\r\n+  `;\r\n+    document.head.appendChild(style);\r\n+  }\r\n+\r\n+  cleanup() {\r\n+    // Clean up event listeners and resources\r\n     window.removeEventListener(\"resize\", this.handleResize);\r\n+\r\n+    // Destroy charts\r\n     if (this.charts.consumption) {\r\n       this.charts.consumption.destroy();\r\n     }\r\n+\r\n+    // Reset countups\r\n+    Object.values(this.countUps).forEach((counter) => {\r\n+      if (counter) counter.reset();\r\n+    });\r\n+\r\n+    // Kill any ongoing GSAP animations\r\n+    gsap.killTweensOf(\"*\");\r\n   }\r\n }\r\n+\r\n+// Export the class\r\n+export default BillReviewPage;\r\n"
                },
                {
                    "date": 1731699252697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // BillReviewPage.js - Part 1\r\n import { gsap } from \"gsap\";\r\n-import { getBillData } from \"../store/solarSizingState.js\";\r\n+import { getBillData } from \"../../store/solarSizingState.js\";\r\n import Chart from \"chart.js/auto\";\r\n import { CountUp } from \"countup.js\";\r\n \r\n export class BillReviewPage {\r\n"
                },
                {
                    "date": 1731699530972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,27 @@\n           console.error(\"Animation failed:\", error);\r\n         });\r\n       });\r\n     });\r\n-  } // BillReviewPage.js - Part 2\r\n+  }\r\n \r\n+  renderBillPreview() {\r\n+    if (!this.billData) {\r\n+      console.error(\"Bill data is not available\");\r\n+      return;\r\n+    }\r\n+\r\n+    const billPreviewContainer = document.querySelector(\"#bill-preview\");\r\n+    if (!billPreviewContainer) {\r\n+      console.error(\"Bill preview container not found\");\r\n+      return;\r\n+    }\r\n+\r\n+    // Use existing BillPreview class with the state data\r\n+    const billPreview = new BillPreview(this.billData);\r\n+    billPreview.render(billPreviewContainer);\r\n+  }\r\n+\r\n   renderInsights() {\r\n     const insightsContainer = document.querySelector(\r\n       \"#insights-container .hide-scrollbar\"\r\n     );\r\n"
                },
                {
                    "date": 1731699545435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { gsap } from \"gsap\";\r\n import { getBillData } from \"../../store/solarSizingState.js\";\r\n import Chart from \"chart.js/auto\";\r\n import { CountUp } from \"countup.js\";\r\n+import { BillPreview } from \"../BillPreview.js\";\r\n \r\n export class BillReviewPage {\r\n   constructor() {\r\n     this.billData = getBillData();\r\n"
                },
                {
                    "date": 1731699641920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,46 @@\n       });\r\n     });\r\n   }\r\n \r\n+  generateTrendData() {\r\n+    const currentMonth = new Date().getMonth();\r\n+    const months = [\r\n+      \"Jan\",\r\n+      \"Feb\",\r\n+      \"Mar\",\r\n+      \"Apr\",\r\n+      \"May\",\r\n+      \"Jun\",\r\n+      \"Jul\",\r\n+      \"Aug\",\r\n+      \"Sep\",\r\n+      \"Oct\",\r\n+      \"Nov\",\r\n+      \"Dec\",\r\n+    ];\r\n+\r\n+    // Get last 6 months including current month\r\n+    const monthlyData = [];\r\n+\r\n+    for (let i = 5; i >= 0; i--) {\r\n+      const monthIndex = (currentMonth - i + 12) % 12;\r\n+      const month = months[monthIndex];\r\n+\r\n+      // Generate consumption that varies around the current consumption\r\n+      // Add randomness but keep it realistic\r\n+      const baseConsumption = this.billData.unitsConsumed;\r\n+      const variation = baseConsumption * (0.8 + Math.random() * 0.4);\r\n+\r\n+      monthlyData.push({\r\n+        month,\r\n+        consumption: Math.round(variation),\r\n+      });\r\n+    }\r\n+\r\n+    return monthlyData;\r\n+  }\r\n+\r\n   renderBillPreview() {\r\n     if (!this.billData) {\r\n       console.error(\"Bill data is not available\");\r\n       return;\r\n"
                },
                {
                    "date": 1731701352854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,845 @@\n+// BillReviewPage.js - Part 1\r\n+import { gsap } from \"gsap\";\r\n+import Chart from \"chart.js/auto\";\r\n+import { CountUp } from \"countup.js\";\r\n+import { BillPreview } from \"../BillPreview.js\";\r\n+import { getBillData, setAnimationShown, hasAnimationBeenShown } from \"../../store/solarSizingState.js\";\r\n+\r\n+\r\n+export class BillReviewPage {\r\n+  constructor() {\r\n+    this.billData = getBillData();\r\n+    this.charts = {};\r\n+    this.countUps = {};\r\n+    this.resizeTimeout = null;\r\n+\r\n+    // Bind methods\r\n+    this.handleResize = this.handleResize.bind(this);\r\n+    window.addEventListener(\"resize\", this.handleResize);\r\n+  }\r\n+\r\n+  render() {\r\n+    const app = document.getElementById(\"app\");\r\n+    app.innerHTML = `\r\n+            <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" id=\"quote-result-page\">\r\n+                <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n+                    <!-- Bill Preview Side -->\r\n+                    <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" id=\"bill-preview-container\">\r\n+                        <div id=\"bill-preview\" class=\"h-full\"></div>\r\n+                    </div>\r\n+\r\n+                    <!-- Loading Indicator -->\r\n+                    <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" id=\"loading-indicator\">\r\n+                        <div class=\"loading-spinner\"></div>\r\n+                        <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n+                    </div>\r\n+\r\n+                    <!-- Insights Container -->\r\n+                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n+                         id=\"insights-container\" style=\"bottom: 0;\">\r\n+                        <!-- Drag Handle for mobile -->\r\n+                        <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n+                            <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n+                        </div>\r\n+\r\n+                        <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n+                            <!-- Content will be added by renderInsights() -->\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            </div>\r\n+        `;\r\n+\r\n+    const isMobile = this.isMobileDevice();\r\n+\r\n+    if (isMobile) {\r\n+      this.initializeMobileInteractions();\r\n+    }\r\n+\r\n+    this.attachBaseStyles();\r\n+\r\n+    // Use requestAnimationFrame to ensure styles are applied before starting\r\n+    requestAnimationFrame(() => {\r\n+      requestAnimationFrame(() => {\r\n+        const container = document.getElementById(\"quote-result-page\");\r\n+        if (container) {\r\n+          container.classList.remove(\"opacity-0\");\r\n+        }\r\n+\r\n+        this.renderBillPreview();\r\n+        this.renderInsights();\r\n+        this.startAnimation().catch((error) => {\r\n+          console.error(\"Animation failed:\", error);\r\n+        });\r\n+      });\r\n+    });\r\n+  }\r\n+\r\n+  generateTrendData() {\r\n+    const currentMonth = new Date().getMonth();\r\n+    const months = [\r\n+      \"Jan\",\r\n+      \"Feb\",\r\n+      \"Mar\",\r\n+      \"Apr\",\r\n+      \"May\",\r\n+      \"Jun\",\r\n+      \"Jul\",\r\n+      \"Aug\",\r\n+      \"Sep\",\r\n+      \"Oct\",\r\n+      \"Nov\",\r\n+      \"Dec\",\r\n+    ];\r\n+\r\n+    // Get last 6 months including current month\r\n+    const monthlyData = [];\r\n+\r\n+    for (let i = 5; i >= 0; i--) {\r\n+      const monthIndex = (currentMonth - i + 12) % 12;\r\n+      const month = months[monthIndex];\r\n+\r\n+      // Generate consumption that varies around the current consumption\r\n+      // Add randomness but keep it realistic\r\n+      const baseConsumption = this.billData.unitsConsumed;\r\n+      const variation = baseConsumption * (0.8 + Math.random() * 0.4);\r\n+\r\n+      monthlyData.push({\r\n+        month,\r\n+        consumption: Math.round(variation),\r\n+      });\r\n+    }\r\n+\r\n+    return monthlyData;\r\n+  }\r\n+\r\n+  renderBillPreview() {\r\n+    if (!this.billData) {\r\n+      console.error(\"Bill data is not available\");\r\n+      return;\r\n+    }\r\n+\r\n+    const billPreviewContainer = document.querySelector(\"#bill-preview\");\r\n+    if (!billPreviewContainer) {\r\n+      console.error(\"Bill preview container not found\");\r\n+      return;\r\n+    }\r\n+\r\n+    // Use existing BillPreview class with the state data\r\n+    const billPreview = new BillPreview(this.billData);\r\n+    billPreview.render(billPreviewContainer);\r\n+  }\r\n+\r\n+  renderInsights() {\r\n+    const insightsContainer = document.querySelector(\r\n+      \"#insights-container .hide-scrollbar\"\r\n+    );\r\n+    if (!insightsContainer) return;\r\n+\r\n+    const trendData = this.generateTrendData();\r\n+\r\n+    insightsContainer.innerHTML = `\r\n+          <!-- Header Section -->\r\n+          <div class=\"opacity-0\" id=\"insights-header\">\r\n+              <div class=\"flex items-center gap-3\">\r\n+                  <div class=\"flex-shrink-0\">\r\n+                      <div class=\"w-8 h-8 rounded-xl bg-gradient-to-r from-emerald-500 to-emerald-600 flex items-center justify-center\">\r\n+                          <svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                  d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n+                          </svg>\r\n+                      </div>\r\n+                  </div>\r\n+                  <div>\r\n+                      <h2 class=\"text-base sm:text-lg font-bold text-gray-900\">Bill Analysis</h2>\r\n+                      <p class=\"text-xs sm:text-sm text-gray-500\">Understanding your consumption</p>\r\n+                  </div>\r\n+              </div>\r\n+          </div>\r\n+\r\n+          <!-- Progress Tracker -->\r\n+          <div class=\"bg-white/70 backdrop-blur rounded-lg shadow-sm p-3 mt-4 opacity-0\" id=\"progress-tracker\">\r\n+              <div class=\"flex justify-between items-center\">\r\n+                  <div class=\"flex items-center gap-3\">\r\n+                      <div class=\"w-8 h-8 rounded-full bg-emerald-600 flex items-center justify-center text-white font-semibold text-sm\">1</div>\r\n+                      <div>\r\n+                          <p class=\"font-semibold text-gray-900 text-sm\">Bill Review</p>\r\n+                          <p class=\"text-xs text-gray-500\">Analyzing patterns</p>\r\n+                      </div>\r\n+                  </div>\r\n+                  <div class=\"h-0.5 w-12 bg-gray-200\"></div>\r\n+                  <div class=\"flex items-center gap-3\">\r\n+                      <div class=\"w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center text-gray-400 font-semibold text-sm\">2</div>\r\n+                      <div>\r\n+                          <p class=\"font-semibold text-gray-400 text-sm\">Solar Quote</p>\r\n+                          <p class=\"text-xs text-gray-400\">Up next</p>\r\n+                      </div>\r\n+                  </div>\r\n+              </div>\r\n+          </div>\r\n+\r\n+          <!-- Consumption Chart Card -->\r\n+          <div class=\"bg-white rounded-lg shadow-sm p-4 mt-3 opacity-0\" id=\"consumption-card\">\r\n+              <div class=\"flex justify-between items-center mb-4\">\r\n+                  <h3 class=\"text-sm font-semibold text-gray-900\">Consumption Analysis</h3>\r\n+                  <div class=\"px-2 py-1 bg-emerald-50 text-emerald-600 rounded-full text-xs font-medium\">\r\n+                      ${this.formatChange(trendData)}% vs last month\r\n+                  </div>\r\n+              </div>\r\n+              <div class=\"relative h-[200px] sm:h-[250px] w-full\">\r\n+                  <canvas id=\"consumption-trend-chart\"></canvas>\r\n+              </div>\r\n+          </div>\r\n+\r\n+          <!-- Metrics Cards -->\r\n+          <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n+              <!-- Current Bill Card -->\r\n+              <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n+                  <div class=\"flex justify-between items-center mb-2\">\r\n+                      <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n+                          <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                  d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n+                          </svg>\r\n+                      </div>\r\n+                      <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">\r\n+                          Due in ${this.calculateDueDays()} days\r\n+                      </span>\r\n+                  </div>\r\n+                  <p class=\"text-xs text-gray-500 mb-1\">Current Bill</p>\r\n+                  <p class=\"text-lg font-bold text-gray-900\" id=\"bill-amount\">0</p>\r\n+                  <div class=\"mt-2 h-1 bg-gray-100 rounded\">\r\n+                      <div class=\"h-full bg-emerald-500 rounded\" style=\"width: ${this.calculateBillProgress()}%\"></div>\r\n+                  </div>\r\n+              </div>\r\n+\r\n+              <!-- Units Consumed Card -->\r\n+              <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n+                  <div class=\"flex justify-between items-center mb-2\">\r\n+                      <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n+                          <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                  d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n+                          </svg>\r\n+                      </div>\r\n+                      <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">\r\n+                          ${this.calculateEfficiency()} efficiency\r\n+                      </span>\r\n+                  </div>\r\n+                  <p class=\"text-xs text-gray-500 mb-1\">Units Consumed</p>\r\n+                  <p class=\"text-lg font-bold text-gray-900\" id=\"units-consumed\">0</p>\r\n+                  <p class=\"text-xs text-gray-500 mt-2\">\r\n+                      Rate: ${this.formatCurrency(\r\n+                        this.billData.ratePerUnit\r\n+                      )}/kWh\r\n+                  </p>\r\n+              </div>\r\n+          </div>\r\n+\r\n+          <!-- Solar Quote Card -->\r\n+          <div class=\"mt-3 mb-4 md:mb-6\" id=\"next-steps-card-container\">\r\n+              <div class=\"bg-emerald-600 rounded-lg shadow-sm p-4 opacity-0\" id=\"next-steps-card\">\r\n+                  <div class=\"relative z-10\">\r\n+                      <div class=\"flex items-center gap-3 mb-4\">\r\n+                          <div class=\"w-8 h-8 rounded-lg bg-white/10 flex items-center justify-center\">\r\n+                              <svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                      d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n+                              </svg>\r\n+                          </div>\r\n+                          <h3 class=\"text-lg font-semibold text-white\">Ready For Your Solar Quote?</h3>\r\n+                      </div>\r\n+                      \r\n+                      <p class=\"text-sm text-white/90 mb-4\">\r\n+                          We've analyzed your consumption patterns and can now provide you with a personalized solar solution. \r\n+                          Find out how much you could save!\r\n+                      </p>\r\n+\r\n+                      <button id=\"proceed-to-quote\" \r\n+                              class=\"w-full bg-white hover:bg-white/90 text-emerald-700 px-5 py-2.5 rounded-xl font-medium\r\n+                                     transition-all duration-300 shadow-sm hover:shadow-md\r\n+                                     flex items-center justify-center gap-2 group\">\r\n+                          <span>Generate My Quote</span>\r\n+                          <svg class=\"w-4 h-4 transform group-hover:translate-x-1 transition-transform\" \r\n+                               fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                    d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n+                          </svg>\r\n+                      </button>\r\n+                  </div>\r\n+              </div>\r\n+          </div>\r\n+      `;\r\n+\r\n+    this.initializeCharts(trendData);\r\n+    this.initCountUps();\r\n+    this.attachEventListeners();\r\n+  }\r\n+\r\n+  // BillReviewPage.js - Part 3 (Animations)\r\n+\r\n+  async startAnimation() {\r\n+    if (this.error) {\r\n+      this.showError();\r\n+      return;\r\n+    }\r\n+\r\n+    const elements = {\r\n+      billPreviewContainer: document.getElementById(\"bill-preview-container\"),\r\n+      insightsContainer: document.getElementById(\"insights-container\"),\r\n+      loadingIndicator: document.getElementById(\"loading-indicator\"),\r\n+      header: document.getElementById(\"insights-header\"),\r\n+      progress: document.getElementById(\"progress-tracker\"),\r\n+      consumption: document.getElementById(\"consumption-card\"),\r\n+      metrics: document.querySelectorAll(\".consumption-metric\"),\r\n+      nextSteps: document.getElementById(\"next-steps-card\"),\r\n+    };\r\n+\r\n+    // Initial setup\r\n+    const isMobile = this.isMobileDevice();\r\n+\r\n+    // Reset initial states\r\n+    gsap.set([elements.billPreviewContainer, elements.loadingIndicator], {\r\n+      opacity: 0,\r\n+    });\r\n+\r\n+    if (isMobile) {\r\n+      // Mobile-specific animation sequence\r\n+      gsap.set(elements.billPreviewContainer, {\r\n+        y: -20,\r\n+      });\r\n+\r\n+      gsap.set(elements.insightsContainer, {\r\n+        y: \"100%\",\r\n+        visibility: \"visible\",\r\n+        opacity: 1,\r\n+      });\r\n+\r\n+      const timeline = gsap.timeline({\r\n+        defaults: { duration: 0.8, ease: \"power2.out\" },\r\n+      });\r\n+\r\n+      await timeline\r\n+        .to(elements.billPreviewContainer, {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+          duration: 1,\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+          opacity: 1,\r\n+          scale: 1,\r\n+          duration: 0.5,\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+          opacity: 0,\r\n+          scale: 0.5,\r\n+          delay: 0.5,\r\n+        })\r\n+        .to(elements.insightsContainer, {\r\n+          y: \"0%\",\r\n+          duration: 0.8,\r\n+          ease: \"power4.out\",\r\n+          onComplete: () => {\r\n+            requestAnimationFrame(() => {\r\n+              this.startInsightAnimations(elements);\r\n+            });\r\n+          },\r\n+        });\r\n+    } else {\r\n+      // Desktop animation sequence\r\n+      gsap.set(elements.billPreviewContainer, {\r\n+        scale: 0.9,\r\n+        position: \"absolute\",\r\n+        left: \"50%\",\r\n+        top: \"50%\",\r\n+        xPercent: -50,\r\n+        yPercent: -50,\r\n+        width: \"47.5%\",\r\n+      });\r\n+\r\n+      gsap.set(elements.insightsContainer, {\r\n+        opacity: 0,\r\n+        visibility: \"hidden\",\r\n+      });\r\n+\r\n+      const timeline = gsap.timeline({\r\n+        defaults: { duration: 0.8, ease: \"power2.out\" },\r\n+      });\r\n+\r\n+      await timeline\r\n+        .to(elements.billPreviewContainer, {\r\n+          opacity: 1,\r\n+          scale: 1,\r\n+          duration: 1,\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+          opacity: 1,\r\n+          scale: 1,\r\n+          duration: 0.5,\r\n+        })\r\n+        .to(elements.loadingIndicator, {\r\n+          opacity: 0,\r\n+          scale: 0.5,\r\n+          delay: 1,\r\n+        })\r\n+        .to(\r\n+          elements.billPreviewContainer,\r\n+          {\r\n+            left: \"0%\",\r\n+            top: \"0%\",\r\n+            xPercent: 0,\r\n+            yPercent: 0,\r\n+            width: \"50%\",\r\n+            position: \"relative\",\r\n+          },\r\n+          \"-=0.3\"\r\n+        )\r\n+        .add(() => {\r\n+          elements.insightsContainer.style.visibility = \"visible\";\r\n+        })\r\n+        .to(elements.insightsContainer, {\r\n+          opacity: 1,\r\n+          duration: 0.5,\r\n+          onComplete: () => {\r\n+            requestAnimationFrame(() => {\r\n+              this.startInsightAnimations(elements);\r\n+            });\r\n+          },\r\n+        });\r\n+    }\r\n+  }\r\n+\r\n+  startInsightAnimations(elements) {\r\n+    // Initialize counters first\r\n+    this.initCountUps();\r\n+\r\n+    const timeline = gsap.timeline({\r\n+      defaults: { duration: 0.6, ease: \"power2.out\" },\r\n+    });\r\n+\r\n+    timeline\r\n+      .to(elements.header, {\r\n+        opacity: 1,\r\n+        y: 0,\r\n+      })\r\n+      .to(\r\n+        elements.progress,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+        },\r\n+        \"-=0.4\"\r\n+      )\r\n+      .to(\r\n+        elements.consumption,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+        },\r\n+        \"-=0.3\"\r\n+      )\r\n+      .to(\r\n+        elements.metrics,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+          stagger: 0.1,\r\n+          onComplete: () => {\r\n+            this.startCountUps();\r\n+          },\r\n+        },\r\n+        \"-=0.2\"\r\n+      )\r\n+      .to(\r\n+        elements.nextSteps,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+        },\r\n+        \"-=0.2\"\r\n+      );\r\n+  }\r\n+  // BillReviewPage.js - Part 4 (Chart Configuration)\r\n+\r\n+  initializeCharts(trendData) {\r\n+    return new Promise((resolve) => {\r\n+      requestAnimationFrame(() => {\r\n+        const ctx = document.getElementById(\"consumption-trend-chart\");\r\n+        if (!ctx) {\r\n+          console.error(\"Chart canvas not found\");\r\n+          resolve();\r\n+          return;\r\n+        }\r\n+\r\n+        // Ensure canvas is visible\r\n+        ctx.style.display = \"block\";\r\n+\r\n+        const isMobile = window.innerWidth < 640;\r\n+        const isTablet = window.innerWidth < 1024;\r\n+\r\n+        // Destroy existing chart if it exists\r\n+        if (this.charts.consumption) {\r\n+          this.charts.consumption.destroy();\r\n+        }\r\n+\r\n+        // Generate monthly data\r\n+        const monthlyData = this.generateMonthlyData();\r\n+\r\n+        // Create new chart with updated styling\r\n+        this.charts.consumption = new Chart(ctx, {\r\n+          type: \"line\",\r\n+          data: {\r\n+            labels: monthlyData.months,\r\n+            datasets: [\r\n+              {\r\n+                label: \"Consumption (kWh)\",\r\n+                data: monthlyData.values,\r\n+                borderColor: \"#059669\",\r\n+                backgroundColor: \"rgba(5, 150, 105, 0.1)\",\r\n+                tension: 0.4,\r\n+                fill: true,\r\n+                pointRadius: isMobile ? 2 : isTablet ? 3 : 4,\r\n+                pointHoverRadius: isMobile ? 4 : isTablet ? 5 : 6,\r\n+                pointBackgroundColor: \"#ffffff\",\r\n+                pointBorderColor: \"#059669\",\r\n+                pointBorderWidth: isMobile ? 1 : 2,\r\n+              },\r\n+            ],\r\n+          },\r\n+          options: {\r\n+            responsive: true,\r\n+            maintainAspectRatio: false,\r\n+            interaction: {\r\n+              mode: \"nearest\",\r\n+              intersect: false,\r\n+              axis: \"x\",\r\n+            },\r\n+            plugins: {\r\n+              legend: {\r\n+                display: false,\r\n+              },\r\n+              tooltip: {\r\n+                enabled: true,\r\n+                backgroundColor: \"white\",\r\n+                titleColor: \"#1f2937\",\r\n+                bodyColor: \"#4b5563\",\r\n+                borderColor: \"#e5e7eb\",\r\n+                borderWidth: 1,\r\n+                padding: isMobile ? 8 : 12,\r\n+                titleFont: {\r\n+                  size: isMobile ? 12 : 14,\r\n+                  weight: \"bold\",\r\n+                },\r\n+                bodyFont: {\r\n+                  size: isMobile ? 11 : 13,\r\n+                },\r\n+                displayColors: false,\r\n+                callbacks: {\r\n+                  label: function (context) {\r\n+                    return `${context.parsed.y.toLocaleString()} kWh`;\r\n+                  },\r\n+                },\r\n+              },\r\n+            },\r\n+            scales: {\r\n+              x: {\r\n+                grid: {\r\n+                  display: false,\r\n+                },\r\n+                ticks: {\r\n+                  font: {\r\n+                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n+                  },\r\n+                },\r\n+              },\r\n+              y: {\r\n+                beginAtZero: true,\r\n+                grid: {\r\n+                  color: \"rgba(0, 0, 0, 0.05)\",\r\n+                },\r\n+                ticks: {\r\n+                  font: {\r\n+                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n+                  },\r\n+                  callback: function (value) {\r\n+                    return `${value} kWh`;\r\n+                  },\r\n+                },\r\n+              },\r\n+            },\r\n+          },\r\n+        });\r\n+\r\n+        // Add animation completion handler\r\n+        this.charts.consumption.options.animation = {\r\n+          onComplete: () => {\r\n+            resolve();\r\n+          },\r\n+        };\r\n+      });\r\n+    });\r\n+  }\r\n+\r\n+  generateMonthlyData() {\r\n+    const currentMonth = new Date().getMonth();\r\n+    const months = [\r\n+      \"Jan\",\r\n+      \"Feb\",\r\n+      \"Mar\",\r\n+      \"Apr\",\r\n+      \"May\",\r\n+      \"Jun\",\r\n+      \"Jul\",\r\n+      \"Aug\",\r\n+      \"Sep\",\r\n+      \"Oct\",\r\n+      \"Nov\",\r\n+      \"Dec\",\r\n+    ];\r\n+    const baseConsumption = this.billData.unitsConsumed;\r\n+\r\n+    // Get last 6 months including current month\r\n+    const monthLabels = [];\r\n+    const consumptionValues = [];\r\n+\r\n+    for (let i = 5; i >= 0; i--) {\r\n+      let monthIndex = (currentMonth - i + 12) % 12;\r\n+      monthLabels.push(months[monthIndex]);\r\n+\r\n+      // Generate realistic variations (±20% of base consumption)\r\n+      let variation = baseConsumption * (0.8 + Math.random() * 0.4);\r\n+      consumptionValues.push(Math.round(variation));\r\n+    }\r\n+\r\n+    return {\r\n+      months: monthLabels,\r\n+      values: consumptionValues,\r\n+    };\r\n+  }\r\n+\r\n+  initCountUps() {\r\n+    const countUpOptions = {\r\n+      duration: 2,\r\n+      useEasing: true,\r\n+      useGrouping: true,\r\n+    };\r\n+\r\n+    this.countUps = {\r\n+      billAmount: new CountUp(\"bill-amount\", this.billData.amount, {\r\n+        ...countUpOptions,\r\n+        prefix: \"PKR \",\r\n+        decimalPlaces: 0,\r\n+      }),\r\n+      unitsConsumed: new CountUp(\r\n+        \"units-consumed\",\r\n+        this.billData.unitsConsumed,\r\n+        {\r\n+          ...countUpOptions,\r\n+          suffix: \" kWh\",\r\n+          decimalPlaces: 0,\r\n+        }\r\n+      ),\r\n+    };\r\n+  }\r\n+\r\n+  startCountUps() {\r\n+    Object.values(this.countUps).forEach((counter) => {\r\n+      if (counter && !counter.error) {\r\n+        counter.start();\r\n+      }\r\n+    });\r\n+  }\r\n+  // BillReviewPage.js - Part 5 (Mobile Interactions & Utilities)\r\n+\r\n+  initializeMobileInteractions() {\r\n+    const insightsContainer = document.getElementById(\"insights-container\");\r\n+    if (!insightsContainer) return;\r\n+\r\n+    let startY = 0;\r\n+    let currentY = 0;\r\n+    const initialHeight = \"60vh\";\r\n+    const expandedHeight = \"92vh\";\r\n+\r\n+    // Handle drag to expand/collapse\r\n+    const handleTouchStart = (e) => {\r\n+      startY = e.touches[0].clientY;\r\n+      currentY = insightsContainer.getBoundingClientRect().height;\r\n+    };\r\n+\r\n+    const handleTouchMove = (e) => {\r\n+      const deltaY = startY - e.touches[0].clientY;\r\n+      const newHeight = Math.max(\r\n+        Math.min(currentY + deltaY, window.innerHeight * 0.92),\r\n+        window.innerHeight * 0.3\r\n+      );\r\n+\r\n+      gsap.to(insightsContainer, {\r\n+        height: newHeight,\r\n+        duration: 0.1,\r\n+        ease: \"none\",\r\n+      });\r\n+    };\r\n+\r\n+    const handleTouchEnd = () => {\r\n+      const finalHeight = insightsContainer.getBoundingClientRect().height;\r\n+      const threshold = window.innerHeight * 0.6;\r\n+\r\n+      gsap.to(insightsContainer, {\r\n+        height: finalHeight > threshold ? expandedHeight : initialHeight,\r\n+        duration: 0.3,\r\n+        ease: \"power2.out\",\r\n+      });\r\n+    };\r\n+\r\n+    // Add touch event listeners to drag handle\r\n+    const dragHandle = insightsContainer.querySelector(\".drag-handle\");\r\n+    if (dragHandle) {\r\n+      dragHandle.addEventListener(\"touchstart\", handleTouchStart, {\r\n+        passive: true,\r\n+      });\r\n+      dragHandle.addEventListener(\"touchmove\", handleTouchMove, {\r\n+        passive: true,\r\n+      });\r\n+      dragHandle.addEventListener(\"touchend\", handleTouchEnd);\r\n+    }\r\n+  }\r\n+\r\n+  // Utility Methods\r\n+  isMobileDevice() {\r\n+    return window.innerWidth < 768;\r\n+  }\r\n+\r\n+  formatCurrency(value) {\r\n+    return new Intl.NumberFormat(\"en-PK\", {\r\n+      style: \"currency\",\r\n+      currency: \"PKR\",\r\n+      minimumFractionDigits: 0,\r\n+      maximumFractionDigits: 0,\r\n+    }).format(value);\r\n+  }\r\n+\r\n+  calculateDueDays() {\r\n+    if (!this.billData.dueDate) return 0;\r\n+    const dueDate = new Date(this.billData.dueDate);\r\n+    const today = new Date();\r\n+    const diffTime = Math.abs(dueDate - today);\r\n+    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n+  }\r\n+\r\n+  calculateBillProgress() {\r\n+    const daysInMonth = 30;\r\n+    const today = new Date();\r\n+    const billDate = new Date(this.billData.issueDate || today);\r\n+    const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n+    return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n+  }\r\n+\r\n+  calculateEfficiency() {\r\n+    const avgConsumption = 500; // Example average consumption\r\n+    return this.billData.unitsConsumed <= avgConsumption ? \"High\" : \"Low\";\r\n+  }\r\n+\r\n+  formatChange(trendData) {\r\n+    if (!Array.isArray(trendData)) return \"0.0\";\r\n+    const lastTwo = trendData.slice(-2);\r\n+    const change =\r\n+      ((lastTwo[1].consumption - lastTwo[0].consumption) /\r\n+        lastTwo[0].consumption) *\r\n+      100;\r\n+    return change.toFixed(1);\r\n+  }\r\n+\r\n+  handleResize = () => {\r\n+    clearTimeout(this.resizeTimeout);\r\n+    this.resizeTimeout = setTimeout(() => {\r\n+      if (this.charts.consumption) {\r\n+        this.charts.consumption.resize();\r\n+      }\r\n+    }, 250);\r\n+  };\r\n+\r\n+  attachEventListeners() {\r\n+    // Quote button click handler\r\n+    const quoteButton = document.getElementById(\"proceed-to-quote\");\r\n+    if (quoteButton) {\r\n+      quoteButton.addEventListener(\"click\", () => {\r\n+        window.router.push(\"/quote\");\r\n+      });\r\n+    }\r\n+\r\n+    // Window resize handler\r\n+    window.addEventListener(\"resize\", this.handleResize);\r\n+  }\r\n+\r\n+  attachBaseStyles() {\r\n+    const style = document.createElement(\"style\");\r\n+    style.textContent = `\r\n+      /* Base styles */\r\n+      .hide-scrollbar::-webkit-scrollbar {\r\n+          display: none;\r\n+      }\r\n+      \r\n+      .hide-scrollbar {\r\n+          -ms-overflow-style: none;\r\n+          scrollbar-width: none;\r\n+      }\r\n+\r\n+      .loading-spinner {\r\n+          width: 40px;\r\n+          height: 40px;\r\n+          border: 3px solid rgba(16, 185, 129, 0.1);\r\n+          border-radius: 50%;\r\n+          border-top-color: #10b981;\r\n+          animation: spin 1s ease-in-out infinite;\r\n+      }\r\n+\r\n+      @keyframes spin {\r\n+          to { transform: rotate(360deg); }\r\n+      }\r\n+\r\n+      /* Mobile drag handle styles */\r\n+      .drag-handle {\r\n+          cursor: grab;\r\n+          touch-action: none;\r\n+      }\r\n+\r\n+      .drag-handle:active {\r\n+          cursor: grabbing;\r\n+      }\r\n+\r\n+      /* Animations */\r\n+      .fade-in {\r\n+          opacity: 0;\r\n+          transform: translateY(10px);\r\n+          transition: opacity 0.3s ease, transform 0.3s ease;\r\n+      }\r\n+\r\n+      .fade-in.visible {\r\n+          opacity: 1;\r\n+          transform: translateY(0);\r\n+      }\r\n+  `;\r\n+    document.head.appendChild(style);\r\n+  }\r\n+\r\n+  cleanup() {\r\n+    // Clean up event listeners and resources\r\n+    window.removeEventListener(\"resize\", this.handleResize);\r\n+\r\n+    // Destroy charts\r\n+    if (this.charts.consumption) {\r\n+      this.charts.consumption.destroy();\r\n+    }\r\n+\r\n+    // Reset countups\r\n+    Object.values(this.countUps).forEach((counter) => {\r\n+      if (counter) counter.reset();\r\n+    });\r\n+\r\n+    // Kill any ongoing GSAP animations\r\n+    gsap.killTweensOf(\"*\");\r\n+  }\r\n+}\r\n+\r\n+// Export the class\r\n+export default BillReviewPage;\r\n"
                },
                {
                    "date": 1731701490952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,926 @@\n+// BillReviewPage.js - Part 1\r\n+import { gsap } from \"gsap\";\r\n+import Chart from \"chart.js/auto\";\r\n+import { CountUp } from \"countup.js\";\r\n+import { BillPreview } from \"../BillPreview.js\";\r\n+import {\r\n+  getBillData,\r\n+  setAnimationShown,\r\n+  hasAnimationBeenShown,\r\n+} from \"../../store/solarSizingState.js\";\r\n+\r\n+export class BillReviewPage {\r\n+  constructor() {\r\n+    this.billData = getBillData();\r\n+    this.charts = {};\r\n+    this.countUps = {};\r\n+    this.resizeTimeout = null;\r\n+\r\n+    // Bind methods\r\n+    this.handleResize = this.handleResize.bind(this);\r\n+    window.addEventListener(\"resize\", this.handleResize);\r\n+  }\r\n+\r\n+  render() {\r\n+    const app = document.getElementById(\"app\");\r\n+    app.innerHTML = `\r\n+            <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" id=\"quote-result-page\">\r\n+                <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n+                    <!-- Bill Preview Side -->\r\n+                    <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" id=\"bill-preview-container\">\r\n+                        <div id=\"bill-preview\" class=\"h-full\"></div>\r\n+                    </div>\r\n+\r\n+                    <!-- Loading Indicator -->\r\n+                    <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" id=\"loading-indicator\">\r\n+                        <div class=\"loading-spinner\"></div>\r\n+                        <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n+                    </div>\r\n+\r\n+                    <!-- Insights Container -->\r\n+                    <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n+                         id=\"insights-container\" style=\"bottom: 0;\">\r\n+                        <!-- Drag Handle for mobile -->\r\n+                        <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n+                            <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n+                        </div>\r\n+\r\n+                        <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n+                            <!-- Content will be added by renderInsights() -->\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            </div>\r\n+        `;\r\n+\r\n+    const isMobile = this.isMobileDevice();\r\n+\r\n+    if (isMobile) {\r\n+      this.initializeMobileInteractions();\r\n+    }\r\n+\r\n+    this.attachBaseStyles();\r\n+\r\n+    // Use requestAnimationFrame to ensure styles are applied before starting\r\n+    requestAnimationFrame(() => {\r\n+      requestAnimationFrame(() => {\r\n+        const container = document.getElementById(\"quote-result-page\");\r\n+        if (container) {\r\n+          container.classList.remove(\"opacity-0\");\r\n+        }\r\n+\r\n+        this.renderBillPreview();\r\n+        this.renderInsights();\r\n+        this.startAnimation().catch((error) => {\r\n+          console.error(\"Animation failed:\", error);\r\n+        });\r\n+      });\r\n+    });\r\n+  }\r\n+\r\n+  generateTrendData() {\r\n+    const currentMonth = new Date().getMonth();\r\n+    const months = [\r\n+      \"Jan\",\r\n+      \"Feb\",\r\n+      \"Mar\",\r\n+      \"Apr\",\r\n+      \"May\",\r\n+      \"Jun\",\r\n+      \"Jul\",\r\n+      \"Aug\",\r\n+      \"Sep\",\r\n+      \"Oct\",\r\n+      \"Nov\",\r\n+      \"Dec\",\r\n+    ];\r\n+\r\n+    // Get last 6 months including current month\r\n+    const monthlyData = [];\r\n+\r\n+    for (let i = 5; i >= 0; i--) {\r\n+      const monthIndex = (currentMonth - i + 12) % 12;\r\n+      const month = months[monthIndex];\r\n+\r\n+      // Generate consumption that varies around the current consumption\r\n+      // Add randomness but keep it realistic\r\n+      const baseConsumption = this.billData.unitsConsumed;\r\n+      const variation = baseConsumption * (0.8 + Math.random() * 0.4);\r\n+\r\n+      monthlyData.push({\r\n+        month,\r\n+        consumption: Math.round(variation),\r\n+      });\r\n+    }\r\n+\r\n+    return monthlyData;\r\n+  }\r\n+\r\n+  renderBillPreview() {\r\n+    if (!this.billData) {\r\n+      console.error(\"Bill data is not available\");\r\n+      return;\r\n+    }\r\n+\r\n+    const billPreviewContainer = document.querySelector(\"#bill-preview\");\r\n+    if (!billPreviewContainer) {\r\n+      console.error(\"Bill preview container not found\");\r\n+      return;\r\n+    }\r\n+\r\n+    // Use existing BillPreview class with the state data\r\n+    const billPreview = new BillPreview(this.billData);\r\n+    billPreview.render(billPreviewContainer);\r\n+  }\r\n+\r\n+  renderInsights() {\r\n+    const insightsContainer = document.querySelector(\r\n+      \"#insights-container .hide-scrollbar\"\r\n+    );\r\n+    if (!insightsContainer) return;\r\n+\r\n+    const trendData = this.generateTrendData();\r\n+\r\n+    insightsContainer.innerHTML = `\r\n+          <!-- Header Section -->\r\n+          <div class=\"opacity-0\" id=\"insights-header\">\r\n+              <div class=\"flex items-center gap-3\">\r\n+                  <div class=\"flex-shrink-0\">\r\n+                      <div class=\"w-8 h-8 rounded-xl bg-gradient-to-r from-emerald-500 to-emerald-600 flex items-center justify-center\">\r\n+                          <svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                  d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n+                          </svg>\r\n+                      </div>\r\n+                  </div>\r\n+                  <div>\r\n+                      <h2 class=\"text-base sm:text-lg font-bold text-gray-900\">Bill Analysis</h2>\r\n+                      <p class=\"text-xs sm:text-sm text-gray-500\">Understanding your consumption</p>\r\n+                  </div>\r\n+              </div>\r\n+          </div>\r\n+\r\n+          <!-- Progress Tracker -->\r\n+          <div class=\"bg-white/70 backdrop-blur rounded-lg shadow-sm p-3 mt-4 opacity-0\" id=\"progress-tracker\">\r\n+              <div class=\"flex justify-between items-center\">\r\n+                  <div class=\"flex items-center gap-3\">\r\n+                      <div class=\"w-8 h-8 rounded-full bg-emerald-600 flex items-center justify-center text-white font-semibold text-sm\">1</div>\r\n+                      <div>\r\n+                          <p class=\"font-semibold text-gray-900 text-sm\">Bill Review</p>\r\n+                          <p class=\"text-xs text-gray-500\">Analyzing patterns</p>\r\n+                      </div>\r\n+                  </div>\r\n+                  <div class=\"h-0.5 w-12 bg-gray-200\"></div>\r\n+                  <div class=\"flex items-center gap-3\">\r\n+                      <div class=\"w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center text-gray-400 font-semibold text-sm\">2</div>\r\n+                      <div>\r\n+                          <p class=\"font-semibold text-gray-400 text-sm\">Solar Quote</p>\r\n+                          <p class=\"text-xs text-gray-400\">Up next</p>\r\n+                      </div>\r\n+                  </div>\r\n+              </div>\r\n+          </div>\r\n+\r\n+          <!-- Consumption Chart Card -->\r\n+          <div class=\"bg-white rounded-lg shadow-sm p-4 mt-3 opacity-0\" id=\"consumption-card\">\r\n+              <div class=\"flex justify-between items-center mb-4\">\r\n+                  <h3 class=\"text-sm font-semibold text-gray-900\">Consumption Analysis</h3>\r\n+                  <div class=\"px-2 py-1 bg-emerald-50 text-emerald-600 rounded-full text-xs font-medium\">\r\n+                      ${this.formatChange(trendData)}% vs last month\r\n+                  </div>\r\n+              </div>\r\n+              <div class=\"relative h-[200px] sm:h-[250px] w-full\">\r\n+                  <canvas id=\"consumption-trend-chart\"></canvas>\r\n+              </div>\r\n+          </div>\r\n+\r\n+          <!-- Metrics Cards -->\r\n+          <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mt-3\">\r\n+              <!-- Current Bill Card -->\r\n+              <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n+                  <div class=\"flex justify-between items-center mb-2\">\r\n+                      <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n+                          <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                  d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n+                          </svg>\r\n+                      </div>\r\n+                      <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">\r\n+                          Due in ${this.calculateDueDays()} days\r\n+                      </span>\r\n+                  </div>\r\n+                  <p class=\"text-xs text-gray-500 mb-1\">Current Bill</p>\r\n+                  <p class=\"text-lg font-bold text-gray-900\" id=\"bill-amount\">0</p>\r\n+                  <div class=\"mt-2 h-1 bg-gray-100 rounded\">\r\n+                      <div class=\"h-full bg-emerald-500 rounded\" style=\"width: ${this.calculateBillProgress()}%\"></div>\r\n+                  </div>\r\n+              </div>\r\n+\r\n+              <!-- Units Consumed Card -->\r\n+              <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n+                  <div class=\"flex justify-between items-center mb-2\">\r\n+                      <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n+                          <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                  d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n+                          </svg>\r\n+                      </div>\r\n+                      <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">\r\n+                          ${this.calculateEfficiency()} efficiency\r\n+                      </span>\r\n+                  </div>\r\n+                  <p class=\"text-xs text-gray-500 mb-1\">Units Consumed</p>\r\n+                  <p class=\"text-lg font-bold text-gray-900\" id=\"units-consumed\">0</p>\r\n+                  <p class=\"text-xs text-gray-500 mt-2\">\r\n+                      Rate: ${this.formatCurrency(\r\n+                        this.billData.ratePerUnit\r\n+                      )}/kWh\r\n+                  </p>\r\n+              </div>\r\n+          </div>\r\n+\r\n+          <!-- Solar Quote Card -->\r\n+          <div class=\"mt-3 mb-4 md:mb-6\" id=\"next-steps-card-container\">\r\n+              <div class=\"bg-emerald-600 rounded-lg shadow-sm p-4 opacity-0\" id=\"next-steps-card\">\r\n+                  <div class=\"relative z-10\">\r\n+                      <div class=\"flex items-center gap-3 mb-4\">\r\n+                          <div class=\"w-8 h-8 rounded-lg bg-white/10 flex items-center justify-center\">\r\n+                              <svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                      d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n+                              </svg>\r\n+                          </div>\r\n+                          <h3 class=\"text-lg font-semibold text-white\">Ready For Your Solar Quote?</h3>\r\n+                      </div>\r\n+                      \r\n+                      <p class=\"text-sm text-white/90 mb-4\">\r\n+                          We've analyzed your consumption patterns and can now provide you with a personalized solar solution. \r\n+                          Find out how much you could save!\r\n+                      </p>\r\n+\r\n+                      <button id=\"proceed-to-quote\" \r\n+                              class=\"w-full bg-white hover:bg-white/90 text-emerald-700 px-5 py-2.5 rounded-xl font-medium\r\n+                                     transition-all duration-300 shadow-sm hover:shadow-md\r\n+                                     flex items-center justify-center gap-2 group\">\r\n+                          <span>Generate My Quote</span>\r\n+                          <svg class=\"w-4 h-4 transform group-hover:translate-x-1 transition-transform\" \r\n+                               fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n+                                    d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n+                          </svg>\r\n+                      </button>\r\n+                  </div>\r\n+              </div>\r\n+          </div>\r\n+      `;\r\n+\r\n+    this.initializeCharts(trendData);\r\n+    this.initCountUps();\r\n+    this.attachEventListeners();\r\n+  }\r\n+\r\n+  // BillReviewPage.js - Part 3 (Animations)\r\n+\r\n+  async startAnimation() {\r\n+    if (this.error) {\r\n+      this.showError();\r\n+      return;\r\n+    }\r\n+\r\n+    const elements = {\r\n+      billPreviewContainer: document.getElementById(\"bill-preview-container\"),\r\n+      insightsContainer: document.getElementById(\"insights-container\"),\r\n+      loadingIndicator: document.getElementById(\"loading-indicator\"),\r\n+      header: document.getElementById(\"insights-header\"),\r\n+      progress: document.getElementById(\"progress-tracker\"),\r\n+      consumption: document.getElementById(\"consumption-card\"),\r\n+      metrics: document.querySelectorAll(\".consumption-metric\"),\r\n+      nextSteps: document.getElementById(\"next-steps-card\"),\r\n+    };\r\n+\r\n+    // Initial setup\r\n+    const isMobile = this.isMobileDevice();\r\n+    const isFirstVisit = !hasAnimationBeenShown();\r\n+\r\n+    // Reset initial states\r\n+    gsap.set([elements.billPreviewContainer, elements.loadingIndicator], {\r\n+      opacity: 0,\r\n+    });\r\n+\r\n+    if (isFirstVisit) {\r\n+      if (isMobile) {\r\n+        // Mobile first visit animation sequence\r\n+        gsap.set(elements.billPreviewContainer, {\r\n+          y: -20,\r\n+        });\r\n+\r\n+        gsap.set(elements.insightsContainer, {\r\n+          y: \"100%\",\r\n+          visibility: \"visible\",\r\n+          opacity: 1,\r\n+        });\r\n+\r\n+        const timeline = gsap.timeline({\r\n+          defaults: { duration: 0.8, ease: \"power2.out\" },\r\n+        });\r\n+\r\n+        await timeline\r\n+          .to(elements.billPreviewContainer, {\r\n+            opacity: 1,\r\n+            y: 0,\r\n+            duration: 1,\r\n+          })\r\n+          .to(elements.loadingIndicator, {\r\n+            opacity: 1,\r\n+            scale: 1,\r\n+            duration: 0.5,\r\n+          })\r\n+          .to(elements.loadingIndicator, {\r\n+            opacity: 0,\r\n+            scale: 0.5,\r\n+            delay: 0.5,\r\n+          })\r\n+          .to(elements.insightsContainer, {\r\n+            y: \"0%\",\r\n+            duration: 0.8,\r\n+            ease: \"power4.out\",\r\n+            onComplete: () => {\r\n+              requestAnimationFrame(() => {\r\n+                this.startInsightAnimations(elements);\r\n+              });\r\n+            },\r\n+          });\r\n+      } else {\r\n+        // Desktop first visit animation sequence\r\n+        gsap.set(elements.billPreviewContainer, {\r\n+          scale: 0.9,\r\n+          position: \"absolute\",\r\n+          left: \"50%\",\r\n+          top: \"50%\",\r\n+          xPercent: -50,\r\n+          yPercent: -50,\r\n+          width: \"47.5%\",\r\n+        });\r\n+\r\n+        gsap.set(elements.insightsContainer, {\r\n+          opacity: 0,\r\n+          visibility: \"hidden\",\r\n+        });\r\n+\r\n+        const timeline = gsap.timeline({\r\n+          defaults: { duration: 0.8, ease: \"power2.out\" },\r\n+        });\r\n+\r\n+        await timeline\r\n+          .to(elements.billPreviewContainer, {\r\n+            opacity: 1,\r\n+            scale: 1,\r\n+            duration: 1,\r\n+          })\r\n+          .to(elements.loadingIndicator, {\r\n+            opacity: 1,\r\n+            scale: 1,\r\n+            duration: 0.5,\r\n+          })\r\n+          .to(elements.loadingIndicator, {\r\n+            opacity: 0,\r\n+            scale: 0.5,\r\n+            delay: 1,\r\n+          })\r\n+          .to(\r\n+            elements.billPreviewContainer,\r\n+            {\r\n+              left: \"0%\",\r\n+              top: \"0%\",\r\n+              xPercent: 0,\r\n+              yPercent: 0,\r\n+              width: \"50%\",\r\n+              position: \"relative\",\r\n+            },\r\n+            \"-=0.3\"\r\n+          )\r\n+          .add(() => {\r\n+            elements.insightsContainer.style.visibility = \"visible\";\r\n+          })\r\n+          .to(elements.insightsContainer, {\r\n+            opacity: 1,\r\n+            duration: 0.5,\r\n+            onComplete: () => {\r\n+              requestAnimationFrame(() => {\r\n+                this.startInsightAnimations(elements);\r\n+              });\r\n+            },\r\n+          });\r\n+\r\n+        // Mark animation as shown after completion\r\n+        setAnimationShown();\r\n+      }\r\n+    } else {\r\n+      // Subsequent visits - simplified animation\r\n+      if (isMobile) {\r\n+        gsap.set(elements.billPreviewContainer, {\r\n+          opacity: 0,\r\n+          y: 0,\r\n+        });\r\n+\r\n+        gsap.set(elements.insightsContainer, {\r\n+          y: \"0%\",\r\n+          visibility: \"visible\",\r\n+          opacity: 0,\r\n+        });\r\n+\r\n+        const timeline = gsap.timeline({\r\n+          defaults: { duration: 0.5, ease: \"power2.out\" },\r\n+        });\r\n+\r\n+        timeline\r\n+          .to(elements.billPreviewContainer, {\r\n+            opacity: 1,\r\n+          })\r\n+          .to(\r\n+            elements.insightsContainer,\r\n+            {\r\n+              opacity: 1,\r\n+            },\r\n+            \"-=0.3\"\r\n+          )\r\n+          .add(() => {\r\n+            requestAnimationFrame(() => {\r\n+              this.startInsightAnimations(elements);\r\n+            });\r\n+          });\r\n+      } else {\r\n+        gsap.set(elements.billPreviewContainer, {\r\n+          opacity: 0,\r\n+          position: \"relative\",\r\n+          left: \"0%\",\r\n+          top: \"0%\",\r\n+          xPercent: 0,\r\n+          yPercent: 0,\r\n+          width: \"50%\",\r\n+          scale: 1,\r\n+        });\r\n+\r\n+        gsap.set(elements.insightsContainer, {\r\n+          opacity: 0,\r\n+          visibility: \"visible\",\r\n+        });\r\n+\r\n+        const timeline = gsap.timeline({\r\n+          defaults: { duration: 0.5, ease: \"power2.out\" },\r\n+        });\r\n+\r\n+        timeline\r\n+          .to(elements.billPreviewContainer, {\r\n+            opacity: 1,\r\n+          })\r\n+          .to(\r\n+            elements.insightsContainer,\r\n+            {\r\n+              opacity: 1,\r\n+            },\r\n+            \"-=0.3\"\r\n+          )\r\n+          .add(() => {\r\n+            requestAnimationFrame(() => {\r\n+              this.startInsightAnimations(elements);\r\n+            });\r\n+          });\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  startInsightAnimations(elements) {\r\n+    // Initialize counters first\r\n+    this.initCountUps();\r\n+\r\n+    const timeline = gsap.timeline({\r\n+      defaults: { duration: 0.6, ease: \"power2.out\" },\r\n+    });\r\n+\r\n+    timeline\r\n+      .to(elements.header, {\r\n+        opacity: 1,\r\n+        y: 0,\r\n+      })\r\n+      .to(\r\n+        elements.progress,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+        },\r\n+        \"-=0.4\"\r\n+      )\r\n+      .to(\r\n+        elements.consumption,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+        },\r\n+        \"-=0.3\"\r\n+      )\r\n+      .to(\r\n+        elements.metrics,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+          stagger: 0.1,\r\n+          onComplete: () => {\r\n+            this.startCountUps();\r\n+          },\r\n+        },\r\n+        \"-=0.2\"\r\n+      )\r\n+      .to(\r\n+        elements.nextSteps,\r\n+        {\r\n+          opacity: 1,\r\n+          y: 0,\r\n+        },\r\n+        \"-=0.2\"\r\n+      );\r\n+  }\r\n+  // BillReviewPage.js - Part 4 (Chart Configuration)\r\n+\r\n+  initializeCharts(trendData) {\r\n+    return new Promise((resolve) => {\r\n+      requestAnimationFrame(() => {\r\n+        const ctx = document.getElementById(\"consumption-trend-chart\");\r\n+        if (!ctx) {\r\n+          console.error(\"Chart canvas not found\");\r\n+          resolve();\r\n+          return;\r\n+        }\r\n+\r\n+        // Ensure canvas is visible\r\n+        ctx.style.display = \"block\";\r\n+\r\n+        const isMobile = window.innerWidth < 640;\r\n+        const isTablet = window.innerWidth < 1024;\r\n+\r\n+        // Destroy existing chart if it exists\r\n+        if (this.charts.consumption) {\r\n+          this.charts.consumption.destroy();\r\n+        }\r\n+\r\n+        // Generate monthly data\r\n+        const monthlyData = this.generateMonthlyData();\r\n+\r\n+        // Create new chart with updated styling\r\n+        this.charts.consumption = new Chart(ctx, {\r\n+          type: \"line\",\r\n+          data: {\r\n+            labels: monthlyData.months,\r\n+            datasets: [\r\n+              {\r\n+                label: \"Consumption (kWh)\",\r\n+                data: monthlyData.values,\r\n+                borderColor: \"#059669\",\r\n+                backgroundColor: \"rgba(5, 150, 105, 0.1)\",\r\n+                tension: 0.4,\r\n+                fill: true,\r\n+                pointRadius: isMobile ? 2 : isTablet ? 3 : 4,\r\n+                pointHoverRadius: isMobile ? 4 : isTablet ? 5 : 6,\r\n+                pointBackgroundColor: \"#ffffff\",\r\n+                pointBorderColor: \"#059669\",\r\n+                pointBorderWidth: isMobile ? 1 : 2,\r\n+              },\r\n+            ],\r\n+          },\r\n+          options: {\r\n+            responsive: true,\r\n+            maintainAspectRatio: false,\r\n+            interaction: {\r\n+              mode: \"nearest\",\r\n+              intersect: false,\r\n+              axis: \"x\",\r\n+            },\r\n+            plugins: {\r\n+              legend: {\r\n+                display: false,\r\n+              },\r\n+              tooltip: {\r\n+                enabled: true,\r\n+                backgroundColor: \"white\",\r\n+                titleColor: \"#1f2937\",\r\n+                bodyColor: \"#4b5563\",\r\n+                borderColor: \"#e5e7eb\",\r\n+                borderWidth: 1,\r\n+                padding: isMobile ? 8 : 12,\r\n+                titleFont: {\r\n+                  size: isMobile ? 12 : 14,\r\n+                  weight: \"bold\",\r\n+                },\r\n+                bodyFont: {\r\n+                  size: isMobile ? 11 : 13,\r\n+                },\r\n+                displayColors: false,\r\n+                callbacks: {\r\n+                  label: function (context) {\r\n+                    return `${context.parsed.y.toLocaleString()} kWh`;\r\n+                  },\r\n+                },\r\n+              },\r\n+            },\r\n+            scales: {\r\n+              x: {\r\n+                grid: {\r\n+                  display: false,\r\n+                },\r\n+                ticks: {\r\n+                  font: {\r\n+                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n+                  },\r\n+                },\r\n+              },\r\n+              y: {\r\n+                beginAtZero: true,\r\n+                grid: {\r\n+                  color: \"rgba(0, 0, 0, 0.05)\",\r\n+                },\r\n+                ticks: {\r\n+                  font: {\r\n+                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n+                  },\r\n+                  callback: function (value) {\r\n+                    return `${value} kWh`;\r\n+                  },\r\n+                },\r\n+              },\r\n+            },\r\n+          },\r\n+        });\r\n+\r\n+        // Add animation completion handler\r\n+        this.charts.consumption.options.animation = {\r\n+          onComplete: () => {\r\n+            resolve();\r\n+          },\r\n+        };\r\n+      });\r\n+    });\r\n+  }\r\n+\r\n+  generateMonthlyData() {\r\n+    const currentMonth = new Date().getMonth();\r\n+    const months = [\r\n+      \"Jan\",\r\n+      \"Feb\",\r\n+      \"Mar\",\r\n+      \"Apr\",\r\n+      \"May\",\r\n+      \"Jun\",\r\n+      \"Jul\",\r\n+      \"Aug\",\r\n+      \"Sep\",\r\n+      \"Oct\",\r\n+      \"Nov\",\r\n+      \"Dec\",\r\n+    ];\r\n+    const baseConsumption = this.billData.unitsConsumed;\r\n+\r\n+    // Get last 6 months including current month\r\n+    const monthLabels = [];\r\n+    const consumptionValues = [];\r\n+\r\n+    for (let i = 5; i >= 0; i--) {\r\n+      let monthIndex = (currentMonth - i + 12) % 12;\r\n+      monthLabels.push(months[monthIndex]);\r\n+\r\n+      // Generate realistic variations (±20% of base consumption)\r\n+      let variation = baseConsumption * (0.8 + Math.random() * 0.4);\r\n+      consumptionValues.push(Math.round(variation));\r\n+    }\r\n+\r\n+    return {\r\n+      months: monthLabels,\r\n+      values: consumptionValues,\r\n+    };\r\n+  }\r\n+\r\n+  initCountUps() {\r\n+    const countUpOptions = {\r\n+      duration: 2,\r\n+      useEasing: true,\r\n+      useGrouping: true,\r\n+    };\r\n+\r\n+    this.countUps = {\r\n+      billAmount: new CountUp(\"bill-amount\", this.billData.amount, {\r\n+        ...countUpOptions,\r\n+        prefix: \"PKR \",\r\n+        decimalPlaces: 0,\r\n+      }),\r\n+      unitsConsumed: new CountUp(\r\n+        \"units-consumed\",\r\n+        this.billData.unitsConsumed,\r\n+        {\r\n+          ...countUpOptions,\r\n+          suffix: \" kWh\",\r\n+          decimalPlaces: 0,\r\n+        }\r\n+      ),\r\n+    };\r\n+  }\r\n+\r\n+  startCountUps() {\r\n+    Object.values(this.countUps).forEach((counter) => {\r\n+      if (counter && !counter.error) {\r\n+        counter.start();\r\n+      }\r\n+    });\r\n+  }\r\n+  // BillReviewPage.js - Part 5 (Mobile Interactions & Utilities)\r\n+\r\n+  initializeMobileInteractions() {\r\n+    const insightsContainer = document.getElementById(\"insights-container\");\r\n+    if (!insightsContainer) return;\r\n+\r\n+    let startY = 0;\r\n+    let currentY = 0;\r\n+    const initialHeight = \"60vh\";\r\n+    const expandedHeight = \"92vh\";\r\n+\r\n+    // Handle drag to expand/collapse\r\n+    const handleTouchStart = (e) => {\r\n+      startY = e.touches[0].clientY;\r\n+      currentY = insightsContainer.getBoundingClientRect().height;\r\n+    };\r\n+\r\n+    const handleTouchMove = (e) => {\r\n+      const deltaY = startY - e.touches[0].clientY;\r\n+      const newHeight = Math.max(\r\n+        Math.min(currentY + deltaY, window.innerHeight * 0.92),\r\n+        window.innerHeight * 0.3\r\n+      );\r\n+\r\n+      gsap.to(insightsContainer, {\r\n+        height: newHeight,\r\n+        duration: 0.1,\r\n+        ease: \"none\",\r\n+      });\r\n+    };\r\n+\r\n+    const handleTouchEnd = () => {\r\n+      const finalHeight = insightsContainer.getBoundingClientRect().height;\r\n+      const threshold = window.innerHeight * 0.6;\r\n+\r\n+      gsap.to(insightsContainer, {\r\n+        height: finalHeight > threshold ? expandedHeight : initialHeight,\r\n+        duration: 0.3,\r\n+        ease: \"power2.out\",\r\n+      });\r\n+    };\r\n+\r\n+    // Add touch event listeners to drag handle\r\n+    const dragHandle = insightsContainer.querySelector(\".drag-handle\");\r\n+    if (dragHandle) {\r\n+      dragHandle.addEventListener(\"touchstart\", handleTouchStart, {\r\n+        passive: true,\r\n+      });\r\n+      dragHandle.addEventListener(\"touchmove\", handleTouchMove, {\r\n+        passive: true,\r\n+      });\r\n+      dragHandle.addEventListener(\"touchend\", handleTouchEnd);\r\n+    }\r\n+  }\r\n+\r\n+  // Utility Methods\r\n+  isMobileDevice() {\r\n+    return window.innerWidth < 768;\r\n+  }\r\n+\r\n+  formatCurrency(value) {\r\n+    return new Intl.NumberFormat(\"en-PK\", {\r\n+      style: \"currency\",\r\n+      currency: \"PKR\",\r\n+      minimumFractionDigits: 0,\r\n+      maximumFractionDigits: 0,\r\n+    }).format(value);\r\n+  }\r\n+\r\n+  calculateDueDays() {\r\n+    if (!this.billData.dueDate) return 0;\r\n+    const dueDate = new Date(this.billData.dueDate);\r\n+    const today = new Date();\r\n+    const diffTime = Math.abs(dueDate - today);\r\n+    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n+  }\r\n+\r\n+  calculateBillProgress() {\r\n+    const daysInMonth = 30;\r\n+    const today = new Date();\r\n+    const billDate = new Date(this.billData.issueDate || today);\r\n+    const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n+    return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n+  }\r\n+\r\n+  calculateEfficiency() {\r\n+    const avgConsumption = 500; // Example average consumption\r\n+    return this.billData.unitsConsumed <= avgConsumption ? \"High\" : \"Low\";\r\n+  }\r\n+\r\n+  formatChange(trendData) {\r\n+    if (!Array.isArray(trendData)) return \"0.0\";\r\n+    const lastTwo = trendData.slice(-2);\r\n+    const change =\r\n+      ((lastTwo[1].consumption - lastTwo[0].consumption) /\r\n+        lastTwo[0].consumption) *\r\n+      100;\r\n+    return change.toFixed(1);\r\n+  }\r\n+\r\n+  handleResize = () => {\r\n+    clearTimeout(this.resizeTimeout);\r\n+    this.resizeTimeout = setTimeout(() => {\r\n+      if (this.charts.consumption) {\r\n+        this.charts.consumption.resize();\r\n+      }\r\n+    }, 250);\r\n+  };\r\n+\r\n+  attachEventListeners() {\r\n+    // Quote button click handler\r\n+    const quoteButton = document.getElementById(\"proceed-to-quote\");\r\n+    if (quoteButton) {\r\n+      quoteButton.addEventListener(\"click\", () => {\r\n+        window.router.push(\"/quote\");\r\n+      });\r\n+    }\r\n+\r\n+    // Window resize handler\r\n+    window.addEventListener(\"resize\", this.handleResize);\r\n+  }\r\n+\r\n+  attachBaseStyles() {\r\n+    const style = document.createElement(\"style\");\r\n+    style.textContent = `\r\n+      /* Base styles */\r\n+      .hide-scrollbar::-webkit-scrollbar {\r\n+          display: none;\r\n+      }\r\n+      \r\n+      .hide-scrollbar {\r\n+          -ms-overflow-style: none;\r\n+          scrollbar-width: none;\r\n+      }\r\n+\r\n+      .loading-spinner {\r\n+          width: 40px;\r\n+          height: 40px;\r\n+          border: 3px solid rgba(16, 185, 129, 0.1);\r\n+          border-radius: 50%;\r\n+          border-top-color: #10b981;\r\n+          animation: spin 1s ease-in-out infinite;\r\n+      }\r\n+\r\n+      @keyframes spin {\r\n+          to { transform: rotate(360deg); }\r\n+      }\r\n+\r\n+      /* Mobile drag handle styles */\r\n+      .drag-handle {\r\n+          cursor: grab;\r\n+          touch-action: none;\r\n+      }\r\n+\r\n+      .drag-handle:active {\r\n+          cursor: grabbing;\r\n+      }\r\n+\r\n+      /* Animations */\r\n+      .fade-in {\r\n+          opacity: 0;\r\n+          transform: translateY(10px);\r\n+          transition: opacity 0.3s ease, transform 0.3s ease;\r\n+      }\r\n+\r\n+      .fade-in.visible {\r\n+          opacity: 1;\r\n+          transform: translateY(0);\r\n+      }\r\n+  `;\r\n+    document.head.appendChild(style);\r\n+  }\r\n+\r\n+  cleanup() {\r\n+    // Clean up event listeners and resources\r\n+    window.removeEventListener(\"resize\", this.handleResize);\r\n+\r\n+    // Destroy charts\r\n+    if (this.charts.consumption) {\r\n+      this.charts.consumption.destroy();\r\n+    }\r\n+\r\n+    // Reset countups\r\n+    Object.values(this.countUps).forEach((counter) => {\r\n+      if (counter) counter.reset();\r\n+    });\r\n+\r\n+    // Kill any ongoing GSAP animations\r\n+    gsap.killTweensOf(\"*\");\r\n+  }\r\n+}\r\n+\r\n+// Export the class\r\n+export default BillReviewPage;\r\n"
                }
            ],
            "date": 1731688763964,
            "name": "Commit-0",
            "content": "// BillReviewPage.js\r\nimport { gsap } from \"gsap\";\r\nimport { getBillData } from \"../../store/solarSizingState.js\";\r\nimport { BillPreview } from \"../BillPreview.js\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { CountUp } from \"countup.js\";\r\n\r\nexport class BillReviewPage {\r\n  constructor() {\r\n    this.billData = getBillData();\r\n    this.charts = {};\r\n  }\r\n\r\n  addScrollStyles() {\r\n    const style = document.createElement(\"style\");\r\n    style.textContent = `\r\n        .custom-scrollbar {\r\n            scrollbar-width: thin;\r\n            scrollbar-color: rgba(0, 0, 0, 0.2) transparent;\r\n        }\r\n\r\n        .custom-scrollbar::-webkit-scrollbar {\r\n            width: 6px;\r\n        }\r\n\r\n        .custom-scrollbar::-webkit-scrollbar-track {\r\n            background: transparent;\r\n        }\r\n\r\n        .custom-scrollbar::-webkit-scrollbar-thumb {\r\n            background-color: rgba(0, 0, 0, 0.2);\r\n            border-radius: 3px;\r\n        }\r\n\r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\r\n            background-color: rgba(0, 0, 0, 0.3);\r\n        }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Update the main container structure in render method\r\n  render() {\r\n    const app = document.getElementById(\"app\");\r\n    const trendData = this.generateTrendData();\r\n\r\n    app.innerHTML = `\r\n    <div class=\"h-screen w-full overflow-hidden bg-white transition-colors duration-1000 opacity-0\" id=\"quote-result-page\">\r\n        <div class=\"h-full w-full flex flex-col md:flex-row relative\" id=\"main-content\">\r\n            <!-- Bill Preview Side - Full width on mobile -->\r\n            <div class=\"w-full md:w-1/2 h-[45vh] md:h-full overflow-hidden opacity-0\" id=\"bill-preview-container\">\r\n                <div id=\"bill-preview\" class=\"h-full\"></div>\r\n            </div>\r\n\r\n            <!-- Loading Indicator -->\r\n            <div class=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center z-10\" \r\n                 id=\"loading-indicator\">\r\n                <div class=\"loading-spinner\"></div>\r\n                <p class=\"text-emerald-600 font-medium\">Analyzing your bill...</p>\r\n            </div>\r\n\r\n            <!-- Insights Container -->\r\n            <div class=\"fixed md:relative w-full md:w-1/2 h-[60vh] md:h-full bg-gray-50 rounded-t-3xl md:rounded-none shadow-2xl md:shadow-none\" \r\n                id=\"insights-container\"\r\n                style=\"bottom: 0;\">\r\n                <!-- Drag Handle for mobile -->\r\n                <div class=\"md:hidden w-full flex justify-center py-2 drag-handle\">\r\n                    <div class=\"w-12 h-1.5 rounded-full bg-gray-300\"></div>\r\n                </div>\r\n\r\n                <div class=\"h-full flex flex-col p-4 sm:p-6 overflow-auto hide-scrollbar\">\r\n                    <!-- Top Section: Fixed Height -->\r\n                    <div class=\"flex-none space-y-3 sm:space-y-4\">\r\n                        <!-- Header Section -->\r\n                        <div class=\"opacity-0\" id=\"insights-header\">\r\n                            <div class=\"flex items-center gap-3\">\r\n                                <div class=\"flex-shrink-0\">\r\n                                    <div class=\"w-8 h-8 rounded-xl bg-gradient-to-r from-emerald-500 to-emerald-600 flex items-center justify-center\">\r\n                                        <svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                                        </svg>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <h2 class=\"text-base sm:text-lg font-bold text-gray-900\">Bill Analysis</h2>\r\n                                    <p class=\"text-xs sm:text-sm text-gray-500\">Understanding your consumption</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Progress Tracker -->\r\n                        <div class=\"bg-white/70 backdrop-blur rounded-lg shadow-sm p-3 opacity-0\" id=\"progress-tracker\">\r\n                            <div class=\"flex justify-between items-center\">\r\n                                <div class=\"flex items-center gap-3\">\r\n                                    <div class=\"w-8 h-8 rounded-full bg-emerald-600 flex items-center justify-center text-white font-semibold text-sm\">1</div>\r\n                                    <div>\r\n                                        <p class=\"font-semibold text-gray-900 text-sm\">Bill Review</p>\r\n                                        <p class=\"text-xs text-gray-500\">Analyzing patterns</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"h-0.5 w-12 bg-gray-200\"></div>\r\n                                <div class=\"flex items-center gap-3\">\r\n                                    <div class=\"w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center text-gray-400 font-semibold text-sm\">2</div>\r\n                                    <div>\r\n                                        <p class=\"font-semibold text-gray-400 text-sm\">Solar Quote</p>\r\n                                        <p class=\"text-xs text-gray-400\">Up next</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Main Content Area: Flexible Height -->\r\n                    <div class=\"flex-1 min-h-0 mt-3\">\r\n                        <div class=\"h-full grid grid-rows-[auto_auto_1fr] gap-3\">\r\n                            <!-- Consumption Analysis Card -->\r\n                            <div class=\"bg-white rounded-lg shadow-sm p-4 opacity-0\" id=\"consumption-card\">\r\n                                <div class=\"flex justify-between items-center mb-4\">\r\n                                    <h3 class=\"text-sm font-semibold text-gray-900\">Consumption Analysis</h3>\r\n                                    <div class=\"px-2 py-1 bg-emerald-50 text-emerald-600 rounded-full text-xs font-medium\">\r\n                                        ${this.formatChange(\r\n                                          trendData\r\n                                        )}% vs last month\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"relative h-[200px] sm:h-[250px] w-full\">\r\n                                    <canvas id=\"consumption-trend-chart\"></canvas>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <!-- Metrics Cards Container -->\r\n                            <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n                                <!-- Current Bill Card -->\r\n                                <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n                                    <div class=\"flex items-center justify-between mb-2\">\r\n                                        <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n                                            <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                            </svg>\r\n                                        </div>\r\n                                        <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">Due in ${this.calculateDueDays()} days</span>\r\n                                    </div>\r\n                                    <p class=\"text-xs text-gray-500 mb-1\">Current Bill</p>\r\n                                    <p class=\"text-lg font-bold text-gray-900\" id=\"bill-amount\">${this.formatCurrency(\r\n                                      this.billData.amount\r\n                                    )}</p>\r\n                                    <div class=\"mt-2 h-1 bg-gray-100 rounded\">\r\n                                        <div class=\"h-full bg-emerald-500 rounded\" style=\"width: ${this.calculateBillProgress()}%\"></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- Units Consumed Card -->\r\n                                <div class=\"bg-white rounded-lg shadow-sm p-3 opacity-0 consumption-metric\">\r\n                                    <div class=\"flex items-center justify-between mb-2\">\r\n                                        <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n                                            <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                                            </svg>\r\n                                        </div>\r\n                                        <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs rounded-full\">\r\n                                            ${this.calculateEfficiency()} efficiency\r\n                                        </span>\r\n                                    </div>\r\n                                    <p class=\"text-xs text-gray-500 mb-1\">Units Consumed</p>\r\n                                    <p class=\"text-lg font-bold text-gray-900\" id=\"units-consumed\">${\r\n                                      this.billData.unitsConsumed\r\n                                    } kWh</p>\r\n                                    <p class=\"text-xs text-gray-500 mt-2\">Rate: ${this.formatCurrency(\r\n                                      this.billData.ratePerUnit\r\n                                    )}/kWh</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <!-- Solar Quote Card -->\r\n                            <div class=\"mt-3 mb-4 md:mb-6\" id=\"next-steps-card-container\">\r\n                                <div class=\"bg-emerald-600 rounded-lg sm:rounded-xl shadow-sm opacity-0\" id=\"next-steps-card\">\r\n                                    <!-- Main Content Container with Better Padding -->\r\n                                    <div class=\"p-4 sm:p-5 md:p-6\">\r\n                                        <div class=\"relative z-10 flex flex-col gap-4 sm:gap-5\">\r\n                                            <!-- Header Section -->\r\n                                            <div class=\"flex items-center gap-3\">\r\n                                                <div class=\"w-8 h-8 sm:w-10 sm:h-10 rounded-lg bg-white/10 flex items-center justify-center shrink-0\">\r\n                                                    <svg class=\"w-4 h-4 sm:w-5 sm:h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n                                                    </svg>\r\n                                                </div>\r\n                                                <h3 class=\"text-lg sm:text-xl font-semibold text-white\">Ready For Your Solar Quote?</h3>\r\n                                            </div>\r\n\r\n                                            <!-- Description and Benefits -->\r\n                                            <div class=\"space-y-4\">\r\n                                                <p class=\"text-sm sm:text-base text-white/90 leading-relaxed\">\r\n                                                    We've analyzed your consumption patterns and can now provide you with a personalized solar solution. Find out how much you could save!\r\n                                                </p>\r\n                                                \r\n                                                <!-- Benefits Pills -->\r\n                                                <div class=\"flex flex-wrap gap-2\">\r\n                                                    <div class=\"inline-flex items-center gap-1.5 bg-white/10 rounded-full px-3 py-1.5\">\r\n                                                        <svg class=\"w-3.5 h-3.5 text-emerald-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\r\n                                                        </svg>\r\n                                                        <span class=\"text-sm text-white\">Personalized Solution</span>\r\n                                                    </div>\r\n                                                    <div class=\"inline-flex items-center gap-1.5 bg-white/10 rounded-full px-3 py-1.5\">\r\n                                                        <svg class=\"w-3.5 h-3.5 text-emerald-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2\" />\r\n                                                        </svg>\r\n                                                        <span class=\"text-sm text-white\">Cost Savings</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <!-- CTA Button -->\r\n                                            <button \r\n                                                id=\"proceed-to-quote\" \r\n                                                class=\"w-full sm:w-auto bg-white hover:bg-white/90 text-emerald-700 px-5 py-2.5 rounded-xl font-medium\r\n                                                      transition-all duration-300 shadow-sm hover:shadow-md\r\n                                                      flex items-center justify-center gap-2 group mt-2\"\r\n                                            >\r\n                                                <span>Generate My Quote</span>\r\n                                                <svg class=\"w-4 h-4 transform group-hover:translate-x-1 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <!-- Decorative Background (Optimized) -->\r\n                                    <div class=\"absolute inset-0 overflow-hidden rounded-lg sm:rounded-xl\">\r\n                                        <div class=\"absolute top-0 right-0 w-48 h-48 md:w-56 md:h-56 translate-x-1/4 -translate-y-1/4 opacity-10\">\r\n                                            <svg class=\"w-full h-full text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                <path d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n                                            </svg>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n`;\r\n\r\n    const isMobile = this.isMobileDevice();\r\n\r\n    if (isMobile) {\r\n      this.initializeMobileInteractions();\r\n    }\r\n\r\n    this.attachBaseStyles();\r\n\r\n    // Use requestAnimationFrame to ensure styles are applied before starting\r\n    requestAnimationFrame(() => {\r\n      requestAnimationFrame(() => {\r\n        // Make container visible\r\n        const container = document.getElementById(\"quote-result-page\");\r\n        if (container) {\r\n          container.classList.remove(\"opacity-0\");\r\n        }\r\n\r\n        // Now render bill preview and start animation\r\n        this.renderBillPreview();\r\n        this.startAnimation().catch((error) => {\r\n          console.error(\"Animation failed:\", error);\r\n          this.showError();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  isMobileDevice() {\r\n    return window.innerWidth < 768; // You can adjust this breakpoint\r\n  }\r\n\r\n  getTrendChangeText() {\r\n    const trendData = this.generateTrendData();\r\n    return `${this.formatChange(trendData)}% vs last month`;\r\n  }\r\n\r\n  initializeMobileInteractions() {\r\n    const insightsContainer = document.getElementById(\"insights-container\");\r\n    let startY = 0;\r\n    let currentY = 0;\r\n    let initialHeight = \"60vh\";\r\n    let expandedHeight = \"92vh\";\r\n\r\n    // Handle drag to expand/collapse\r\n    const handleTouchStart = (e) => {\r\n      startY = e.touches[0].clientY;\r\n      currentY = insightsContainer.getBoundingClientRect().height;\r\n    };\r\n\r\n    const handleTouchMove = (e) => {\r\n      const deltaY = startY - e.touches[0].clientY;\r\n      const newHeight = Math.max(\r\n        Math.min(currentY + deltaY, window.innerHeight * 0.92),\r\n        window.innerHeight * 0.3\r\n      );\r\n\r\n      gsap.to(insightsContainer, {\r\n        height: newHeight,\r\n        duration: 0.1,\r\n        ease: \"none\",\r\n      });\r\n    };\r\n\r\n    const handleTouchEnd = (e) => {\r\n      const finalHeight = insightsContainer.getBoundingClientRect().height;\r\n      const threshold = window.innerHeight * 0.6;\r\n\r\n      gsap.to(insightsContainer, {\r\n        height: finalHeight > threshold ? expandedHeight : initialHeight,\r\n        duration: 0.3,\r\n        ease: \"power2.out\",\r\n      });\r\n    };\r\n\r\n    // Add touch event listeners\r\n    const dragHandle = insightsContainer.querySelector(\".drag-handle\");\r\n    dragHandle.addEventListener(\"touchstart\", handleTouchStart);\r\n    dragHandle.addEventListener(\"touchmove\", handleTouchMove);\r\n    dragHandle.addEventListener(\"touchend\", handleTouchEnd);\r\n  }\r\n\r\n  async startAnimation() {\r\n    if (this.error) {\r\n      this.showError();\r\n      return;\r\n    }\r\n\r\n    // Initialize charts before animations\r\n    const trendData = this.generateTrendData();\r\n    await this.initializeCharts(trendData);\r\n\r\n    const isMobile = this.isMobileDevice();\r\n    const billPreviewContainer = document.getElementById(\r\n      \"bill-preview-container\"\r\n    );\r\n    const insightsContainer = document.getElementById(\"insights-container\");\r\n    const loadingIndicator = document.getElementById(\"loading-indicator\");\r\n    const quoteResultPage = document.getElementById(\"quote-result-page\");\r\n\r\n    // Initial states\r\n    gsap.set([billPreviewContainer, loadingIndicator], {\r\n      opacity: 0,\r\n    });\r\n\r\n    if (isMobile) {\r\n      // Mobile animation sequence\r\n      gsap.set(billPreviewContainer, {\r\n        y: -20,\r\n      });\r\n\r\n      // Set initial state for mobile insights\r\n      gsap.set(insightsContainer, {\r\n        y: \"100%\",\r\n        visibility: \"visible\",\r\n        opacity: 1,\r\n      });\r\n\r\n      const tl = gsap.timeline({\r\n        defaults: { duration: 0.8, ease: \"power2.out\" },\r\n      });\r\n\r\n      await tl\r\n        .to(billPreviewContainer, {\r\n          opacity: 1,\r\n          y: 0,\r\n          duration: 1,\r\n        })\r\n        .to(loadingIndicator, {\r\n          opacity: 1,\r\n          scale: 1,\r\n          duration: 0.5,\r\n        })\r\n        .to(loadingIndicator, {\r\n          opacity: 0,\r\n          scale: 0.5,\r\n          delay: 0.5,\r\n        })\r\n        .to(insightsContainer, {\r\n          y: \"0%\",\r\n          duration: 0.8,\r\n          ease: \"power4.out\",\r\n          onComplete: () => {\r\n            requestAnimationFrame(() => {\r\n              this.startInsightAnimations();\r\n            });\r\n          },\r\n        });\r\n    } else {\r\n      // Desktop animation sequence\r\n      gsap.set(billPreviewContainer, {\r\n        scale: 0.9,\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        xPercent: -50,\r\n        yPercent: -50,\r\n        width: \"47.5%\",\r\n      });\r\n\r\n      // Set initial state for desktop insights\r\n      gsap.set(insightsContainer, {\r\n        opacity: 0,\r\n        visibility: \"hidden\",\r\n      });\r\n\r\n      const tl = gsap.timeline({\r\n        defaults: { duration: 0.8, ease: \"power2.out\" },\r\n      });\r\n\r\n      await tl\r\n        .to(billPreviewContainer, {\r\n          opacity: 1,\r\n          scale: 1,\r\n          duration: 1,\r\n        })\r\n        .to(loadingIndicator, {\r\n          opacity: 1,\r\n          scale: 1,\r\n          duration: 0.5,\r\n        })\r\n        .to(loadingIndicator, {\r\n          opacity: 0,\r\n          scale: 0.5,\r\n          delay: 1,\r\n        })\r\n        .to(\r\n          billPreviewContainer,\r\n          {\r\n            left: \"0%\",\r\n            top: \"0%\",\r\n            xPercent: 0,\r\n            yPercent: 0,\r\n            width: \"50%\",\r\n            position: \"relative\",\r\n          },\r\n          \"-=0.3\"\r\n        )\r\n        .add(() => {\r\n          insightsContainer.style.visibility = \"visible\";\r\n        })\r\n        .to(insightsContainer, {\r\n          opacity: 1,\r\n          duration: 0.5,\r\n          onComplete: () => {\r\n            requestAnimationFrame(() => {\r\n              this.startInsightAnimations();\r\n            });\r\n          },\r\n        });\r\n    }\r\n  }\r\n\r\n  startInsightAnimations() {\r\n    // First init the counters\r\n    this.initCountUps();\r\n\r\n    // Make sure elements exist before animating\r\n    const elements = {\r\n      header: document.getElementById(\"insights-header\"),\r\n      progress: document.getElementById(\"progress-tracker\"),\r\n      consumption: document.getElementById(\"consumption-card\"),\r\n      metrics: document.querySelectorAll(\".consumption-metric\"),\r\n      nextSteps: document.getElementById(\"next-steps-card\"),\r\n    };\r\n\r\n    // Check if elements exist before animating\r\n    if (elements.header) {\r\n      gsap.to(elements.header, {\r\n        opacity: 1,\r\n        y: 0,\r\n        duration: 0.6,\r\n        ease: \"power2.out\",\r\n      });\r\n    }\r\n\r\n    if (elements.progress) {\r\n      gsap.to(elements.progress, {\r\n        opacity: 1,\r\n        y: 0,\r\n        duration: 0.6,\r\n        delay: 0.2,\r\n        ease: \"power2.out\",\r\n      });\r\n    }\r\n\r\n    if (elements.consumption) {\r\n      gsap.to(elements.consumption, {\r\n        opacity: 1,\r\n        y: 0,\r\n        duration: 0.6,\r\n        delay: 0.4,\r\n        ease: \"power2.out\",\r\n      });\r\n    }\r\n\r\n    if (elements.metrics.length > 0) {\r\n      gsap.to(elements.metrics, {\r\n        opacity: 1,\r\n        y: 0,\r\n        duration: 0.6,\r\n        stagger: 0.2,\r\n        delay: 0.6,\r\n        ease: \"power2.out\",\r\n        onComplete: () => {\r\n          this.startCountUps();\r\n        },\r\n      });\r\n    }\r\n\r\n    if (elements.nextSteps) {\r\n      gsap.to(elements.nextSteps, {\r\n        opacity: 1,\r\n        y: 0,\r\n        duration: 0.6,\r\n        delay: 1,\r\n        ease: \"power2.out\",\r\n      });\r\n    }\r\n  }\r\n\r\n  attachBaseStyles() {\r\n    const style = document.createElement(\"style\");\r\n    style.textContent = this.getBaseStyles();\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  getBaseStyles() {\r\n    return `\r\n        /* Base Theme Colors */\r\n        :root {\r\n            --color-primary: #10b981;\r\n            --color-primary-dark: #059669;\r\n            --color-bg-secondary: #f3f4f6;\r\n        }\r\n\r\n        /* Mobile Styles */\r\n        @media (max-width: 768px) {\r\n            #insights-container {\r\n                transition: transform 0.3s ease;\r\n                will-change: transform;\r\n                touch-action: none;\r\n            }\r\n\r\n            .drag-handle {\r\n                cursor: grab;\r\n                touch-action: none;\r\n            }\r\n\r\n            .drag-handle:active {\r\n                cursor: grabbing;\r\n            }\r\n        }\r\n\r\n        /* Hide scrollbar on mobile */\r\n        .hide-scrollbar::-webkit-scrollbar {\r\n            display: none;\r\n        }\r\n        .hide-scrollbar {\r\n            -ms-overflow-style: none;\r\n            scrollbar-width: none;\r\n        }\r\n\r\n        /* Loading Spinner */\r\n        .loading-spinner {\r\n            width: 40px;\r\n            height: 40px;\r\n            border: 3px solid rgba(16, 185, 129, 0.1);\r\n            border-radius: 50%;\r\n            border-top-color: #10b981;\r\n            animation: spin 1s ease-in-out infinite;\r\n        }\r\n\r\n        @keyframes spin {\r\n            to { transform: rotate(360deg); }\r\n        }\r\n\r\n        /* Animated Gradient */\r\n        .animated-gradient {\r\n            background: linear-gradient(\r\n                45deg,\r\n                rgba(255,255,255,0.1),\r\n                rgba(255,255,255,0.2),\r\n                rgba(255,255,255,0.1)\r\n            );\r\n            background-size: 200% 200%;\r\n            animation: gradient 15s ease infinite;\r\n        }\r\n\r\n        @keyframes gradient {\r\n            0% { background-position: 0% 50%; }\r\n            50% { background-position: 100% 50%; }\r\n            100% { background-position: 0% 50%; }\r\n        }\r\n    `;\r\n  }\r\n\r\n  initCountUps() {\r\n    console.log(\"Initializing CountUps with data:\", this.billData); // Add debug log\r\n\r\n    const countUpOptions = {\r\n      duration: 2,\r\n      useEasing: true,\r\n      useGrouping: true,\r\n    };\r\n\r\n    // Initialize counters for the bill amounts and units\r\n    this.countUps = {\r\n      billAmount: new CountUp(\"bill-amount\", this.billData.amount || 0, {\r\n        ...countUpOptions,\r\n        prefix: \"PKR \",\r\n        decimalPlaces: 0,\r\n      }),\r\n      unitsConsumed: new CountUp(\r\n        \"units-consumed\",\r\n        this.billData.unitsConsumed || 0,\r\n        {\r\n          ...countUpOptions,\r\n          suffix: \" kWh\",\r\n          decimalPlaces: 0,\r\n        }\r\n      ),\r\n    };\r\n  }\r\n\r\n  startCountUps() {\r\n    console.log(\"Starting CountUps\"); // Add debug log\r\n    Object.entries(this.countUps).forEach(([key, counter]) => {\r\n      if (counter && !counter.error) {\r\n        console.log(`Starting counter: ${key}`);\r\n        counter.start();\r\n      } else {\r\n        console.error(`Error with counter ${key}:`, counter?.error);\r\n      }\r\n    });\r\n  }\r\n  renderBillPreview() {\r\n    if (!this.billData) {\r\n      console.error(\"Bill data is not available\");\r\n      this.renderError(document.getElementById(\"app\"));\r\n      return;\r\n    }\r\n\r\n    console.log(\"Rendering with bill data:\", this.billData); // Add debug log\r\n\r\n    const billPreviewContainer = document.querySelector(\"#bill-preview\");\r\n    if (!billPreviewContainer) {\r\n      console.error(\"Bill preview container not found\");\r\n      return;\r\n    }\r\n\r\n    const billPreview = new BillPreview({\r\n      ...this.billData,\r\n      totalAmount: this.billData.amount, // Ensure totalAmount is set\r\n      unitsConsumed: this.billData.unitsConsumed,\r\n      ratePerUnit: this.billData.ratePerUnit,\r\n    });\r\n    billPreview.render(billPreviewContainer);\r\n  }\r\n\r\n  renderError(container) {\r\n    container.innerHTML = `\r\n        <div class=\"flex items-center justify-center h-screen\">\r\n            <div class=\"text-center\">\r\n                <h2 class=\"text-xl font-semibold text-gray-800 mb-2\">Error</h2>\r\n                <p class=\"text-gray-600\">Bill data is not available. Please try again.</p>\r\n                <button onclick=\"window.router.push('/')\" \r\n                        class=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\">\r\n                    Go Back\r\n                </button>\r\n            </div>\r\n        </div>\r\n    `;\r\n  }\r\n\r\n  renderInsights() {\r\n    const insightsContainer = document.querySelector(\"#insights-container\");\r\n    if (!insightsContainer) return;\r\n\r\n    // Generate trend data for the last 6 months\r\n    const trendData = this.generateTrendData();\r\n\r\n    insightsContainer.innerHTML = `\r\n      <div class=\"h-full flex flex-col p-2 sm:p-4 lg:p-6 overflow-auto\">\r\n        <!-- Header Section -->\r\n        <div class=\"flex-none mb-3 sm:mb-4 lg:mb-6 opacity-0\" id=\"insights-header\">\r\n          <div class=\"flex items-center gap-3 sm:gap-4\">\r\n            <div class=\"flex-shrink-0\">\r\n              <div class=\"w-8 h-8 sm:w-10 sm:h-10 rounded-xl bg-gradient-to-r from-emerald-500 to-emerald-600 flex items-center justify-center\">\r\n                <svg class=\"w-4 h-4 sm:w-5 sm:h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h2 class=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">Bill Analysis</h2>\r\n              <p class=\"text-xs sm:text-sm lg:text-base text-gray-500\">Understanding your consumption</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Progress Tracker -->\r\n        <div class=\"bg-white/70 backdrop-blur rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 mb-3 sm:mb-4 lg:mb-6 opacity-0\" id=\"progress-tracker\">\r\n          <div class=\"flex justify-between items-center\">\r\n            <div class=\"flex items-center gap-3\">\r\n              <div class=\"w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-emerald-600 flex items-center justify-center text-white font-semibold text-sm sm:text-base\">1</div>\r\n              <div>\r\n                <p class=\"font-semibold text-gray-900 text-sm sm:text-base\">Bill Review</p>\r\n                <p class=\"text-xs sm:text-sm text-gray-500\">Analyzing patterns</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"h-0.5 w-16 sm:w-24 bg-gray-200\"></div>\r\n            <div class=\"flex items-center gap-3\">\r\n              <div class=\"w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-gray-200 flex items-center justify-center text-gray-400 font-semibold text-sm sm:text-base\">2</div>\r\n              <div>\r\n                <p class=\"font-semibold text-gray-400 text-sm sm:text-base\">Solar Quote</p>\r\n                <p class=\"text-xs sm:text-sm text-gray-400\">Up next</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Content Grid -->\r\n        <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 lg:gap-6 flex-1\">\r\n          <!-- Consumption Analysis Card -->\r\n          <div class=\"sm:col-span-2 bg-white rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 opacity-0\" id=\"consumption-card\">\r\n            <div class=\"flex justify-between items-center mb-3 sm:mb-4\">\r\n              <h3 class=\"text-sm sm:text-base lg:text-lg font-semibold text-gray-900\">Consumption Analysis</h3>\r\n              <div class=\"px-2 py-1 bg-emerald-50 text-emerald-600 rounded-full text-xs sm:text-sm font-medium\">\r\n                ${this.formatChange(trendData)}% vs last month\r\n              </div>\r\n            </div>\r\n            <div class=\"h-[200px] sm:h-[250px]\">\r\n              <canvas id=\"consumption-trend-chart\"></canvas>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Current Bill Card -->\r\n          <div class=\"bg-white rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 opacity-0 consumption-metric\">\r\n            <div class=\"flex items-center justify-between mb-2\">\r\n              <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n                <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n              </div>\r\n              <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs sm:text-sm rounded-full\">Due in ${this.calculateDueDays()} days</span>\r\n            </div>\r\n            <p class=\"text-xs sm:text-sm text-gray-500 mb-1\">Current Bill</p>\r\n            <p class=\"text-lg font-bold text-gray-900\" id=\"bill-amount\">${this.formatCurrency(\r\n              this.billData.amount\r\n            )}</p>\r\n            <div class=\"mt-4 h-1 bg-gray-100 rounded\">\r\n              <div class=\"h-full bg-emerald-500 rounded\" style=\"width: ${this.calculateBillProgress()}%\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Units Consumed Card -->\r\n          <div class=\"bg-white rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 opacity-0 consumption-metric\">\r\n            <div class=\"flex items-center justify-between mb-2\">\r\n              <div class=\"w-8 h-8 rounded-lg bg-emerald-50 flex items-center justify-center\">\r\n                <svg class=\"w-4 h-4 text-emerald-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                </svg>\r\n              </div>\r\n              <span class=\"px-2 py-1 bg-emerald-50 text-emerald-600 text-xs sm:text-sm rounded-full\">\r\n                ${this.calculateEfficiency()} efficiency\r\n              </span>\r\n            </div>\r\n            <p class=\"text-xs sm:text-sm text-gray-500 mb-1\">Units Consumed</p>\r\n            <p class=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900\">${\r\n              this.billData.unitsConsumed\r\n            } kWh</p>\r\n            <p class=\"text-xs sm:text-sm text-gray-500 mt-2\">Rate: ${this.formatCurrency(\r\n              this.billData.ratePerUnit\r\n            )}/kWh</p>\r\n          </div>\r\n\r\n          <!-- Next Steps Card -->\r\n          <div class=\"sm:col-span-2 mt-auto\">\r\n            <div class=\"bg-gradient-to-br from-emerald-600 to-emerald-700 rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 lg:p-6 relative opacity-0\" id=\"next-steps-card\">\r\n                <div class=\"!w-full !max-w-none !important border-2 !border-red-500\">\r\n                <h3 class=\"text-base sm:text-lg lg:text-xl font-semibold text-white mb-2\">Ready For Your Solar Quote?</h3>\r\n                <p class=\"text-sm sm:text-base text-white/90 mb-4\">\r\n                  We've analyzed your consumption patterns. Let's see how much you could save with solar energy!\r\n                </p> \r\n                <button \r\n                  id=\"proceed-to-quote\" \r\n                  class=\"w-full bg-white/10 hover:bg-white/20 text-white px-4 py-3 rounded-xl font-medium\r\n                       transition-all duration-300 shadow-sm hover:shadow-lg\r\n                       flex items-center justify-center gap-2 group\"\r\n                >\r\n                  Generate My Solar Quote\r\n                  <svg class=\"w-4 h-4 transform group-hover:translate-x-1 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Update the chart colors in initializeCharts\r\n    this.initializeCharts(trendData);\r\n    this.startInsightAnimations();\r\n    this.attachEventListeners();\r\n  }\r\n\r\n  generateTrendData() {\r\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"];\r\n    return months.map((month) => ({\r\n      month,\r\n      consumption: Math.floor(\r\n        this.billData.unitsConsumed * (0.8 + Math.random() * 0.4)\r\n      ),\r\n    }));\r\n  }\r\n\r\n  initializeCharts(trendData) {\r\n    return new Promise((resolve) => {\r\n      requestAnimationFrame(() => {\r\n        const ctx = document.getElementById(\"consumption-trend-chart\");\r\n        if (!ctx) {\r\n          console.error(\"Chart canvas not found\");\r\n          resolve();\r\n          return;\r\n        }\r\n\r\n        // Ensure the canvas is visible\r\n        ctx.style.display = \"block\";\r\n\r\n        const isMobile = window.innerWidth < 640;\r\n        const isTablet = window.innerWidth < 1024;\r\n\r\n        // Destroy existing chart if it exists\r\n        if (this.charts.consumption) {\r\n          this.charts.consumption.destroy();\r\n        }\r\n\r\n        // Generate proper monthly data\r\n        const monthlyData = this.generateMonthlyData();\r\n\r\n        // Create new chart\r\n        this.charts.consumption = new Chart(ctx, {\r\n          type: \"line\",\r\n          data: {\r\n            labels: monthlyData.months,\r\n            datasets: [\r\n              {\r\n                label: \"Consumption (kWh)\",\r\n                data: monthlyData.values,\r\n                borderColor: \"#059669\",\r\n                backgroundColor: \"rgba(5, 150, 105, 0.1)\",\r\n                tension: 0.4,\r\n                fill: true,\r\n                pointRadius: isMobile ? 2 : isTablet ? 3 : 4,\r\n                pointHoverRadius: isMobile ? 4 : isTablet ? 5 : 6,\r\n                pointBackgroundColor: \"#ffffff\",\r\n                pointBorderColor: \"#059669\",\r\n                pointBorderWidth: isMobile ? 1 : 2,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            interaction: {\r\n              mode: \"nearest\",\r\n              intersect: false,\r\n              axis: \"x\",\r\n            },\r\n            plugins: {\r\n              legend: {\r\n                display: false,\r\n              },\r\n              tooltip: {\r\n                enabled: true,\r\n                backgroundColor: \"white\",\r\n                titleColor: \"#1f2937\",\r\n                bodyColor: \"#4b5563\",\r\n                borderColor: \"#e5e7eb\",\r\n                borderWidth: 1,\r\n                padding: isMobile ? 8 : 12,\r\n                titleFont: {\r\n                  size: isMobile ? 12 : 14,\r\n                  weight: \"bold\",\r\n                },\r\n                bodyFont: {\r\n                  size: isMobile ? 11 : 13,\r\n                },\r\n                displayColors: false,\r\n                callbacks: {\r\n                  label: function (context) {\r\n                    return `${context.parsed.y.toLocaleString()} kWh`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            scales: {\r\n              x: {\r\n                grid: {\r\n                  display: false,\r\n                },\r\n                ticks: {\r\n                  font: {\r\n                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n                  },\r\n                },\r\n              },\r\n              y: {\r\n                beginAtZero: true,\r\n                grid: {\r\n                  color: \"rgba(0, 0, 0, 0.05)\",\r\n                },\r\n                ticks: {\r\n                  font: {\r\n                    size: isMobile ? 10 : isTablet ? 11 : 12,\r\n                  },\r\n                  callback: function (value) {\r\n                    return `${value} kWh`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        });\r\n\r\n        // Resolve promise after chart is initialized\r\n        this.charts.consumption.options.animation = {\r\n          onComplete: () => {\r\n            resolve();\r\n          },\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  // Add this helper method to generate better monthly data\r\n  generateMonthlyData() {\r\n    const currentMonth = new Date().getMonth();\r\n    const months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    const baseConsumption = this.billData.unitsConsumed;\r\n\r\n    // Get last 6 months including current month\r\n    const monthLabels = [];\r\n    const consumptionValues = [];\r\n\r\n    for (let i = 5; i >= 0; i--) {\r\n      let monthIndex = (currentMonth - i + 12) % 12;\r\n      monthLabels.push(months[monthIndex]);\r\n\r\n      // Generate realistic variations (±20% of base consumption)\r\n      let variation = baseConsumption * (0.8 + Math.random() * 0.4);\r\n      consumptionValues.push(Math.round(variation));\r\n    }\r\n\r\n    return {\r\n      months: monthLabels,\r\n      values: consumptionValues,\r\n    };\r\n  }\r\n\r\n  handleResize() {\r\n    clearTimeout(this.resizeTimeout);\r\n    this.resizeTimeout = setTimeout(() => {\r\n      if (this.charts.consumption) {\r\n        this.charts.consumption.resize();\r\n      }\r\n    }, 250);\r\n  }\r\n\r\n  // Utility methods\r\n  formatCurrency(value) {\r\n    return new Intl.NumberFormat(\"en-PK\", {\r\n      style: \"currency\",\r\n      currency: \"PKR\",\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(value);\r\n  }\r\n\r\n  calculateDueDays() {\r\n    const dueDate = new Date(this.billData.dueDate);\r\n    const today = new Date();\r\n    const diffTime = Math.abs(dueDate - today);\r\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  }\r\n\r\n  calculateBillProgress() {\r\n    const daysInMonth = 30;\r\n    const today = new Date();\r\n    const billDate = new Date(this.billData.issueDate);\r\n    const daysPassed = Math.ceil((today - billDate) / (1000 * 60 * 60 * 24));\r\n    return Math.min((daysPassed / daysInMonth) * 100, 100);\r\n  }\r\n\r\n  calculateEfficiency() {\r\n    const avgConsumption = 500; // Example average consumption\r\n    const efficiency = (this.billData.unitsConsumed / avgConsumption) * 100;\r\n    return efficiency <= 100 ? \"High\" : \"Low\";\r\n  }\r\n\r\n  formatChange(data) {\r\n    const lastTwo = data.slice(-2);\r\n    const change =\r\n      ((lastTwo[1].consumption - lastTwo[0].consumption) /\r\n        lastTwo[0].consumption) *\r\n      100;\r\n    return change.toFixed(1);\r\n  }\r\n\r\n  attachEventListeners() {\r\n    const quoteButton = document.getElementById(\"proceed-to-quote\");\r\n    const mobileQuoteButton = document.getElementById(\r\n      \"proceed-to-quote-mobile\"\r\n    );\r\n\r\n    if (quoteButton) {\r\n      quoteButton.addEventListener(\"click\", () => {\r\n        window.router.push(\"/quote\");\r\n      });\r\n    }\r\n\r\n    if (mobileQuoteButton) {\r\n      mobileQuoteButton.addEventListener(\"click\", () => {\r\n        window.router.push(\"/quote\");\r\n      });\r\n    }\r\n\r\n    // Add touch event handlers for mobile\r\n    if (this.isMobileDevice()) {\r\n      const insightsContainer = document.getElementById(\"insights-container\");\r\n      let startY = 0;\r\n      let scrolling = false;\r\n\r\n      insightsContainer.addEventListener(\r\n        \"touchstart\",\r\n        (e) => {\r\n          startY = e.touches[0].pageY;\r\n        },\r\n        { passive: true }\r\n      );\r\n\r\n      insightsContainer.addEventListener(\r\n        \"touchmove\",\r\n        (e) => {\r\n          if (!scrolling) {\r\n            const currentY = e.touches[0].pageY;\r\n            const diff = startY - currentY;\r\n\r\n            if (diff > 0) {\r\n              // Scrolling up\r\n              scrolling = true;\r\n              gsap.to(insightsContainer, {\r\n                height: \"85vh\",\r\n                duration: 0.3,\r\n                ease: \"power2.out\",\r\n              });\r\n            }\r\n          }\r\n        },\r\n        { passive: true }\r\n      );\r\n    }\r\n  }\r\n}\r\n"
        }
    ]
}